!    to test kdig or  kdip
!
!
!       cosz=.98
!       e0=2.e5
!       de=2.80
!       de =20.0
!       zob=600.
!       s0=0.4
!
!       do s=s0, 1.8, .2
!          r=1.e-4
!          do  i=1, 56
!              call kdip(e0, zob, cosz, s, de,   i-1,r,   rho)
!              write(*, *) r, rho
!              r=r*10.**.1
!           enddo
!           write(*, *)
!        enddo
!       end

!        Changes form original GENAS       
!          delete unused subroutines
!          rndc --> rndcsng which calls rndc inside
!          kintp3 ---> kintp3s
!          k4ptdi --> k4ptdis
!          kfrge -->  kfrges
!          kgauss --> kgausss
!          kmolu --->  modified to use kgetMolierU in Cosmos
!  
!      This is to use rndc's argument as single
      subroutine rndcsng(u)
      real*8 u8
      real u
      call  rndc(u8)
      u = u8
      end
!                if(k1ry .eq. kgamma) then
!                   call kdig(e0, zob, cos1ry, sage,discle, 1, r, rho)
!                elseif(k1ry .ge. kprotn) then
!                   call kdip(e0pn, zob, cos1ry, sage,discle, 1, r, rho)
!                endif
!                if(k1ry .eq. kgamma) then
!                   call kdigb(e0, zob, cos1ry, sage,discle, 1, r, rho)
!                elseif(k1ry .ge. kprotn) then
!                   call kdipb(e0pn, zob, cos1ry, sage,discle, 1,r, rho)
!                endif
!

      block data  degb
!         this de for u=0 to 1 step 0.1 at given r's. data for standard
!        gamma showers. observation by fe.1sc3.5
!       from e100v at 600 g/cm**2:      fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
      include "Zdeg"
!        0-5 m
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.3010,  0.6007,  0.8979,  1.1513,  1.3818,  1.6301,
     2  1.8971,  2.1604,  2.4215,  2.7264,  3.0443,  3.3307,  3.6570,
     3  4.0426,  4.4397,  4.8547,  5.2753,  5.5256,  5.5804,  5.6353,
     4  5.6901,  5.7449,  5.7997,  5.8545,  5.9094,  5.9642,  6.0090,
     5  6.0348,  6.0606,  6.0864,  6.1122,  6.1381,  6.1639,  6.1897,
     6  6.2155,  6.2414,  6.2672,  6.2930,  6.3188,  6.3446,  6.3705,
     7  6.3963,  6.4221,  6.4479,  6.4738,  6.4996,  6.5362,  6.5731,
     8  6.6099,  6.6467,  6.6836,  6.7204,  6.7572,  6.7940,  6.8309,
     9  6.8677,  6.9045,  6.9414,  6.9782,  7.0234,  7.0806,  7.1378/
      data (ed1   (i),i=  64, 101)/
     1  7.1950,  7.2522,  7.3094,  7.3666,  7.4238,  7.4810,  7.5545,
     2  7.6359,  7.7174,  7.7989,  7.8804,  7.9618,  8.0604,  8.1740,
     3  8.2876,  8.4012,  8.5219,  8.6900,  8.8582,  9.0374,  9.2761,
     4  9.5171,  9.7934, 10.0736, 10.3653, 10.7035, 11.1019, 11.5615,
     5 11.9521, 12.3141, 12.6925, 13.0988, 13.5309, 14.0679, 14.6709,
     6 15.6246, 17.4516, 35.0000/
!        5-10 m
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.2220,  0.4441,  0.6869,  0.9367,  1.2154,  1.5033,
     2  1.7452,  1.9872,  2.2251,  2.4628,  2.7528,  3.0560,  3.3752,
     3  3.7236,  4.0938,  4.4738,  4.8441,  5.2310,  5.5178,  5.5723,
     4  5.6268,  5.6813,  5.7358,  5.7903,  5.8448,  5.8993,  5.9538,
     5  6.0043,  6.0328,  6.0612,  6.0897,  6.1181,  6.1466,  6.1750,
     6  6.2034,  6.2319,  6.2603,  6.2888,  6.3172,  6.3456,  6.3741,
     7  6.4025,  6.4310,  6.4594,  6.4879,  6.5213,  6.5585,  6.5957,
     8  6.6330,  6.6702,  6.7074,  6.7446,  6.7818,  6.8190,  6.8562,
     9  6.8934,  6.9306,  6.9679,  7.0069,  7.0575,  7.1081,  7.1587/
      data (ed2   (i),i=  64, 101)/
     1  7.2093,  7.2600,  7.3106,  7.3612,  7.4118,  7.4624,  7.5211,
     2  7.6031,  7.6851,  7.7671,  7.8491,  7.9311,  8.0172,  8.1247,
     3  8.2321,  8.3396,  8.4471,  8.5759,  8.7253,  8.8748,  9.0313,
     4  9.2240,  9.4167,  9.6563,  9.9315, 10.2343, 10.5470, 10.8644,
     5 11.3153, 11.7636, 12.1833, 12.6232, 13.0398, 13.5569, 14.1867,
     6 15.1648, 16.9730, 47.0000/
!        10-15 m
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.2290,  0.4580,  0.7037,  0.9531,  1.1842,  1.4110,
     2  1.6419,  1.8754,  2.1094,  2.3441,  2.5795,  2.8165,  3.0668,
     3  3.3627,  3.6773,  4.0073,  4.3069,  4.5935,  4.8567,  5.1607,
     4  5.5025,  5.5662,  5.6300,  5.6938,  5.7575,  5.8213,  5.8851,
     5  5.9488,  6.0057,  6.0343,  6.0629,  6.0915,  6.1201,  6.1487,
     6  6.1773,  6.2059,  6.2345,  6.2631,  6.2917,  6.3204,  6.3490,
     7  6.3776,  6.4062,  6.4348,  6.4634,  6.4920,  6.5270,  6.5644,
     8  6.6019,  6.6393,  6.6768,  6.7142,  6.7517,  6.7891,  6.8266,
     9  6.8640,  6.9015,  6.9389,  6.9764,  7.0199,  7.0738,  7.1277/
      data (ed3   (i),i=  64, 101)/
     1  7.1816,  7.2354,  7.2893,  7.3432,  7.3971,  7.4510,  7.5071,
     2  7.5853,  7.6635,  7.7417,  7.8200,  7.8982,  7.9764,  8.0718,
     3  8.1747,  8.2776,  8.3805,  8.4834,  8.6185,  8.7598,  8.9012,
     4  9.0556,  9.2402,  9.4248,  9.6371,  9.8683, 10.1476, 10.4903,
     5 10.8506, 11.2939, 11.7750, 12.2494, 12.7329, 13.2751, 13.9702,
     6 14.8156, 16.1838, 32.0000/
!            15-25 m
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.1893,  0.3785,  0.5785,  0.7976,  1.0167,  1.2365,
     2  1.4562,  1.6582,  1.8558,  2.0534,  2.2509,  2.4485,  2.6698,
     3  2.8994,  3.1369,  3.3804,  3.6389,  3.9120,  4.1878,  4.4648,
     4  4.7915,  5.1105,  5.4046,  5.5461,  5.6143,  5.6825,  5.7507,
     5  5.8189,  5.8871,  5.9554,  6.0106,  6.0415,  6.0723,  6.1031,
     6  6.1339,  6.1647,  6.1956,  6.2264,  6.2572,  6.2880,  6.3188,
     7  6.3497,  6.3805,  6.4113,  6.4421,  6.4729,  6.5046,  6.5419,
     8  6.5792,  6.6165,  6.6538,  6.6911,  6.7284,  6.7657,  6.8030,
     9  6.8403,  6.8776,  6.9149,  6.9522,  6.9895,  7.0384,  7.0918/
      data (ed4   (i),i=  64, 101)/
     1  7.1453,  7.1988,  7.2523,  7.3057,  7.3592,  7.4127,  7.4661,
     2  7.5289,  7.6075,  7.6862,  7.7649,  7.8435,  7.9222,  8.0012,
     3  8.1072,  8.2133,  8.3193,  8.4254,  8.5420,  8.6839,  8.8258,
     4  8.9676,  9.1545,  9.3547,  9.5665,  9.8093, 10.0703, 10.3985,
     5 10.7422, 11.1334, 11.6536, 12.2122, 12.7289, 13.2369, 13.8949,
     6 14.9333, 16.8211, 41.0000/
!        25-50
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.1562,  0.3124,  0.4686,  0.6371,  0.8086,  0.9801,
     2  1.1585,  1.3378,  1.5148,  1.6702,  1.8256,  1.9810,  2.1427,
     3  2.3053,  2.4679,  2.6473,  2.8307,  3.0153,  3.2145,  3.4136,
     4  3.6364,  3.8776,  4.1196,  4.3627,  4.6003,  4.8307,  5.0687,
     5  5.3283,  5.5260,  5.6026,  5.6793,  5.7560,  5.8327,  5.9094,
     6  5.9861,  6.0299,  6.0663,  6.1028,  6.1392,  6.1757,  6.2122,
     7  6.2486,  6.2851,  6.3216,  6.3580,  6.3945,  6.4309,  6.4674,
     8  6.5043,  6.5449,  6.5854,  6.6260,  6.6666,  6.7072,  6.7477,
     9  6.7883,  6.8289,  6.8694,  6.9100,  6.9506,  6.9911,  7.0444/
      data (ed5   (i),i=  64, 101)/
     1  7.1011,  7.1578,  7.2146,  7.2713,  7.3281,  7.3848,  7.4415,
     2  7.4983,  7.5744,  7.6512,  7.7279,  7.8046,  7.8814,  7.9581,
     3  8.0501,  8.1603,  8.2706,  8.3809,  8.4911,  8.6389,  8.7900,
     4  8.9410,  9.1176,  9.3106,  9.5046,  9.7576, 10.0130, 10.3275,
     5 10.6916, 11.1271, 11.5971, 12.0947, 12.6100, 13.1466, 13.7987,
     6 14.6733, 16.3022, 41.0000/
!        50-100
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.1170,  0.2341,  0.3511,  0.4681,  0.5953,  0.7264,
     2  0.8574,  0.9885,  1.1167,  1.2447,  1.3727,  1.5007,  1.6220,
     3  1.7432,  1.8645,  1.9858,  2.1091,  2.2326,  2.3562,  2.4798,
     4  2.6132,  2.7486,  2.8839,  3.0228,  3.1826,  3.3424,  3.5025,
     5  3.6800,  3.8575,  4.0402,  4.2439,  4.4476,  4.6589,  4.8728,
     6  5.0855,  5.2966,  5.5035,  5.5989,  5.6943,  5.7897,  5.8852,
     7  5.9806,  6.0360,  6.0812,  6.1264,  6.1716,  6.2168,  6.2620,
     8  6.3072,  6.3524,  6.3976,  6.4428,  6.4880,  6.5358,  6.5846,
     9  6.6335,  6.6823,  6.7311,  6.7800,  6.8288,  6.8776,  6.9264/
      data (ed6   (i),i=  64, 101)/
     1  6.9753,  7.0316,  7.0957,  7.1598,  7.2238,  7.2879,  7.3520,
     2  7.4161,  7.4801,  7.5588,  7.6440,  7.7292,  7.8144,  7.8996,
     3  7.9848,  8.0916,  8.2031,  8.3146,  8.4261,  8.5514,  8.7037,
     4  8.8560,  9.0111,  9.2141,  9.4170,  9.6571,  9.9229, 10.2194,
     5 10.5333, 10.8971, 11.3557, 11.8788, 12.4648, 12.9627, 13.6247,
     6 14.4729, 16.1683, 47.0000/
!       100-150
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0914,  0.1829,  0.2743,  0.3657,  0.4571,  0.5479,
     2  0.6380,  0.7282,  0.8183,  0.9084,  0.9986,  1.0898,  1.1811,
     3  1.2723,  1.3636,  1.4549,  1.5433,  1.6291,  1.7148,  1.8005,
     4  1.8862,  1.9720,  2.0630,  2.1566,  2.2502,  2.3438,  2.4375,
     5  2.5408,  2.6636,  2.7864,  2.9091,  3.0319,  3.1543,  3.2768,
     6  3.3993,  3.5252,  3.6668,  3.8084,  3.9500,  4.1015,  4.2584,
     7  4.4153,  4.5848,  4.7690,  4.9532,  5.1399,  5.3275,  5.5093,
     8  5.6248,  5.7403,  5.8559,  5.9714,  6.0446,  6.1040,  6.1633,
     9  6.2226,  6.2819,  6.3412,  6.4005,  6.4599,  6.5197,  6.5805/
      data (ed7   (i),i=  64, 101)/
     1  6.6413,  6.7021,  6.7629,  6.8237,  6.8845,  6.9453,  7.0081,
     2  7.0887,  7.1692,  7.2498,  7.3304,  7.4109,  7.4915,  7.5891,
     3  7.6888,  7.7885,  7.8882,  7.9878,  8.1275,  8.2728,  8.4180,
     4  8.5735,  8.7424,  8.9113,  9.1112,  9.3455,  9.6049,  9.9130,
     5 10.2551, 10.6318, 11.0723, 11.6418, 12.2728, 12.9082, 13.6841,
     6 14.7043, 16.2589, 32.5000/
!       100-177.8
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0871,  0.1742,  0.2614,  0.3485,  0.4356,  0.5237,
     2  0.6143,  0.7050,  0.7957,  0.8864,  0.9771,  1.0658,  1.1540,
     3  1.2421,  1.3302,  1.4183,  1.5062,  1.5909,  1.6755,  1.7602,
     4  1.8449,  1.9295,  2.0152,  2.1063,  2.1973,  2.2884,  2.3794,
     5  2.4704,  2.5789,  2.6957,  2.8125,  2.9293,  3.0455,  3.1607,
     6  3.2760,  3.3912,  3.5078,  3.6470,  3.7862,  3.9255,  4.0726,
     7  4.2289,  4.3851,  4.5462,  4.7207,  4.8952,  5.0749,  5.2627,
     8  5.4505,  5.5866,  5.7042,  5.8218,  5.9394,  6.0301,  6.0921,
     9  6.1541,  6.2162,  6.2782,  6.3402,  6.4022,  6.4643,  6.5266/
      data (ed8   (i),i=  64, 101)/
     1  6.5895,  6.6523,  6.7151,  6.7779,  6.8407,  6.9036,  6.9664,
     2  7.0376,  7.1185,  7.1994,  7.2803,  7.3612,  7.4420,  7.5291,
     3  7.6316,  7.7342,  7.8367,  7.9393,  8.0610,  8.2105,  8.3600,
     4  8.5112,  8.6884,  8.8655,  9.0565,  9.2909,  9.5330,  9.8393,
     5 10.1780, 10.5628, 11.0120, 11.5374, 12.1962, 12.8664, 13.6414,
     6 14.6690, 16.1228, 43.0000/
!       177.8-316.2 m
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0702,  0.1405,  0.2107,  0.2809,  0.3511,  0.4214,
     2  0.4916,  0.5621,  0.6326,  0.7032,  0.7737,  0.8443,  0.9148,
     3  0.9854,  1.0563,  1.1272,  1.1982,  1.2692,  1.3402,  1.4111,
     4  1.4821,  1.5493,  1.6151,  1.6810,  1.7468,  1.8127,  1.8785,
     5  1.9444,  2.0111,  2.0827,  2.1544,  2.2260,  2.2976,  2.3693,
     6  2.4409,  2.5163,  2.6095,  2.7026,  2.7958,  2.8890,  2.9821,
     7  3.0793,  3.1774,  3.2754,  3.3735,  3.4716,  3.5830,  3.6998,
     8  3.8166,  3.9334,  4.0576,  4.1916,  4.3256,  4.4595,  4.5977,
     9  4.7378,  4.8778,  5.0212,  5.1878,  5.3545,  5.5168,  5.6492/
      data (ed9   (i),i=  64, 101)/
     1  5.7817,  5.9141,  6.0291,  6.1118,  6.1945,  6.2773,  6.3600,
     2  6.4427,  6.5279,  6.6187,  6.7095,  6.8003,  6.8911,  6.9819,
     3  7.0882,  7.1984,  7.3085,  7.4187,  7.5386,  7.6857,  7.8328,
     4  7.9799,  8.1465,  8.3162,  8.4859,  8.6754,  8.8667,  9.1000,
     5  9.4297,  9.7792, 10.1757, 10.6365, 11.1483, 11.9815, 12.7875,
     6 13.6833, 15.2957, 34.5000/
!       316.2-562.  m
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0593,  0.1186,  0.1778,  0.2371,  0.2964,  0.3557,
     2  0.4150,  0.4743,  0.5354,  0.5980,  0.6606,  0.7232,  0.7857,
     3  0.8483,  0.9109,  0.9735,  1.0380,  1.1040,  1.1700,  1.2359,
     4  1.3019,  1.3678,  1.4338,  1.4998,  1.5567,  1.6136,  1.6704,
     5  1.7273,  1.7842,  1.8411,  1.8980,  1.9549,  2.0130,  2.0762,
     6  2.1393,  2.2025,  2.2656,  2.3288,  2.3919,  2.4551,  2.5220,
     7  2.5984,  2.6747,  2.7511,  2.8274,  2.9038,  2.9802,  3.0608,
     8  3.1430,  3.2251,  3.3073,  3.3895,  3.4716,  3.5681,  3.6722,
     9  3.7763,  3.8804,  3.9844,  4.0988,  4.2149,  4.3310,  4.4471/
      data (ed10  (i),i=  64, 101)/
     1  4.5836,  4.7371,  4.8907,  5.0485,  5.2168,  5.3850,  5.5492,
     2  5.7044,  5.8597,  6.0111,  6.1262,  6.2414,  6.3565,  6.4717,
     3  6.5906,  6.7107,  6.8308,  6.9508,  7.0883,  7.2378,  7.3872,
     4  7.5383,  7.6944,  7.8505,  8.0099,  8.2421,  8.4744,  8.7451,
     5  9.0244,  9.3511,  9.7638, 10.2717, 10.9210, 11.9344, 12.9703,
     6 13.9042, 15.7898, 45.5000/
!       562.-1000.  m
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0615,  0.1231,  0.1846,  0.2462,  0.3077,  0.3693,
     2  0.4308,  0.4924,  0.5507,  0.6085,  0.6664,  0.7242,  0.7821,
     3  0.8400,  0.8978,  0.9557,  1.0149,  1.0786,  1.1424,  1.2061,
     4  1.2698,  1.3336,  1.3973,  1.4610,  1.5202,  1.5723,  1.6244,
     5  1.6765,  1.7286,  1.7807,  1.8328,  1.8849,  1.9370,  1.9891,
     6  2.0466,  2.1055,  2.1645,  2.2234,  2.2824,  2.3413,  2.4003,
     7  2.4592,  2.5218,  2.5928,  2.6637,  2.7346,  2.8056,  2.8765,
     8  2.9474,  3.0220,  3.1068,  3.1916,  3.2764,  3.3613,  3.4461,
     9  3.5361,  3.6349,  3.7338,  3.8326,  3.9315,  4.0367,  4.1563/
      data (ed11  (i),i=  64, 101)/
     1  4.2758,  4.3954,  4.5190,  4.6702,  4.8215,  4.9728,  5.1072,
     2  5.2380,  5.3688,  5.4996,  5.6669,  5.8343,  6.0013,  6.1321,
     3  6.2629,  6.3936,  6.5266,  6.6693,  6.8120,  6.9546,  7.0941,
     4  7.2321,  7.3700,  7.5107,  7.6954,  7.8800,  8.0976,  8.3766,
     5  8.6946,  9.0400,  9.3619,  9.7472, 10.2488, 10.9549, 12.1528,
     6 13.6111, 15.1348, 33.5000/
!        1000-1778 m
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0563,  0.1126,  0.1689,  0.2252,  0.2815,  0.3378,
     2  0.3941,  0.4504,  0.5065,  0.5604,  0.6144,  0.6683,  0.7223,
     3  0.7762,  0.8302,  0.8842,  0.9381,  0.9921,  1.0562,  1.1220,
     4  1.1879,  1.2537,  1.3196,  1.3854,  1.4513,  1.5142,  1.5689,
     5  1.6237,  1.6784,  1.7331,  1.7878,  1.8425,  1.8973,  1.9520,
     6  2.0072,  2.0661,  2.1249,  2.1838,  2.2426,  2.3015,  2.3604,
     7  2.4192,  2.4781,  2.5452,  2.6171,  2.6891,  2.7610,  2.8330,
     8  2.9049,  2.9768,  3.0538,  3.1331,  3.2123,  3.2916,  3.3709,
     9  3.4502,  3.5344,  3.6269,  3.7194,  3.8119,  3.9044,  3.9969/
      data (ed12  (i),i=  64, 101)/
     1  4.1211,  4.2464,  4.3718,  4.4971,  4.6150,  4.7327,  4.8504,
     2  4.9682,  5.1417,  5.3360,  5.5224,  5.6663,  5.8102,  5.9541,
     3  6.0980,  6.2418,  6.3857,  6.5400,  6.7342,  6.9285,  7.1227,
     4  7.3170,  7.5125,  7.7283,  7.9442,  8.1920,  8.4510,  8.7423,
     5  9.0668,  9.5420,  9.9305, 10.4557, 10.8575, 11.3514, 12.5862,
     6 13.6148, 17.1147, 45.5000/
!          1778-3162 m
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0527,  0.1054,  0.1581,  0.2108,  0.2635,  0.3162,
     2  0.3688,  0.4215,  0.4742,  0.5389,  0.6150,  0.6911,  0.7672,
     3  0.8433,  0.9194,  0.9956,  1.0717,  1.1478,  1.2239,  1.3000,
     4  1.3761,  1.4522,  1.5232,  1.5855,  1.6477,  1.7100,  1.7723,
     5  1.8345,  1.8968,  1.9591,  2.0261,  2.1022,  2.1783,  2.2544,
     6  2.3306,  2.4067,  2.4828,  2.5662,  2.6519,  2.7375,  2.8231,
     7  2.9087,  2.9944,  3.0800,  3.1656,  3.2512,  3.3369,  3.4225,
     8  3.5108,  3.6250,  3.7392,  3.8533,  3.9675,  4.0980,  4.2350,
     9  4.3720,  4.5045,  4.5730,  4.6415,  4.7100,  4.7785,  4.8470/
      data (ed13  (i),i=  64, 101)/
     1  4.9155,  4.9840,  5.0875,  5.2017,  5.3158,  5.4300,  5.7650,
     2  6.1500,  6.3783,  6.5533,  6.6675,  6.7817,  6.8958,  7.0600,
     3  7.5223,  7.5845,  7.6468,  7.7091,  7.7714,  7.8336,  7.8959,
     4  7.9582,  8.0750,  8.3033,  8.5949,  9.1400,  9.4825,  9.6625,
     5  9.8337, 10.0100, 10.3525, 12.0598, 12.7875, 13.2599, 13.9449,
     6 15.0198, 18.3896, 23.5000/
!         3162-5600 m (same as above)
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.0600,  0.1200,  0.1800,  0.2400,  0.3000,  0.3600,
     2  0.4200,  0.4800,  0.5267,  0.5667,  0.6067,  0.6467,  0.6867,
     3  0.7267,  0.7667,  0.8067,  0.8467,  0.8867,  0.9267,  0.9667,
     4  1.0067,  1.0467,  1.0867,  1.1267,  1.1667,  1.2067,  1.2467,
     5  1.2867,  1.3267,  1.3667,  1.4067,  1.4467,  1.4867,  1.5400,
     6  1.6000,  1.6600,  1.7200,  1.7800,  1.8400,  1.9000,  1.9600,
     7  2.0200,  2.0800,  2.1400,  2.2000,  2.2600,  2.3200,  2.3800,
     8  2.4400,  2.5000,  2.9200,  3.3400,  3.7600,  4.1800,  4.6000,
     9  5.0200,  5.4400,  5.8600,  6.1600,  6.4000,  6.6400,  6.8800/
      data (ed14  (i),i=  64, 101)/
     1  7.1200,  7.3600,  7.6000,  7.8400,  8.1000,  8.4000,  8.7000,
     2  9.0000,  9.3000,  9.6000,  9.9000, 10.2000, 10.5000, 10.7400,
     3 10.9800, 11.2200, 11.4600, 11.7000, 11.9400, 12.1800, 12.4200,
     4 12.6600, 12.9000, 13.1400, 13.3800, 13.6200, 13.8600, 14.1000,
     5 14.3400, 14.7199, 15.3799, 16.0399, 16.6999, 17.3599, 18.0199,
     6 18.6799, 19.3399, 20.0000/
       end
!          block data which gives de (energy loss in scinti for
!          a standard gamma 1ry shower.  scinti is assumed under
!          0.5cmpb+0.1cm fe. scinti is 3.5 cm thick).
!       from e100v at 600 g/cm**2:  pb.5fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
         block data degbb
      include "Zdegb"
!        0-5 m
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.0738,  0.1477,  0.2215,  0.2953,  0.3691,  0.4430,
     2  0.5424,  0.7291,  0.9157,  1.1274,  1.3599,  1.6185,  1.9170,
     3  2.2224,  2.5397,  2.9413,  3.3393,  3.7596,  4.2263,  4.6791,
     4  5.0852,  5.5406,  5.8684,  6.0782,  6.2089,  6.3396,  6.4702,
     5  6.5928,  6.7131,  6.8333,  6.9535,  7.0807,  7.2123,  7.3439,
     6  7.4754,  7.6294,  7.7886,  7.9477,  8.1206,  8.3002,  8.4799,
     7  8.6760,  8.8742,  9.0950,  9.3550,  9.6142,  9.8725, 10.1511,
     8 10.4496, 10.7772, 11.1056, 11.4239, 11.7289, 12.0251, 12.2800,
     9 12.5329, 12.7742, 13.0148, 13.2472, 13.4797, 13.6983, 13.9156/
      data (ed1   (i),i=  64, 101)/
     1 14.1340, 14.3532, 14.5819, 14.8302, 15.0859, 15.3579, 15.6388,
     2 15.9293, 16.2546, 16.5988, 16.9641, 17.3602, 17.7710, 18.2188,
     3 18.7069, 19.2197, 19.7583, 20.2570, 20.7728, 21.3754, 22.0388,
     4 22.6537, 23.3577, 24.3015, 25.1532, 26.0827, 27.1849, 28.2882,
     5 29.5552, 31.0501, 32.9881, 34.7921, 37.2846, 40.2374, 44.0689,
     6 49.6488, 60.5412,124.0000/
!        5-10 m
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.0547,  0.1095,  0.1642,  0.2190,  0.2737,  0.3284,
     2  0.3832,  0.4379,  0.4927,  0.6100,  0.7369,  0.8639,  0.9909,
     3  1.1724,  1.3581,  1.5529,  1.7770,  2.0011,  2.2522,  2.5043,
     4  2.8351,  3.1815,  3.5488,  3.9566,  4.3233,  4.7087,  5.1190,
     5  5.5268,  5.8401,  6.0624,  6.1898,  6.3172,  6.4446,  6.5610,
     6  6.6689,  6.7769,  6.8848,  6.9928,  7.1138,  7.2358,  7.3577,
     7  7.4797,  7.6151,  7.7532,  7.8913,  8.0354,  8.2011,  8.3669,
     8  8.5336,  8.7045,  8.8754,  9.0613,  9.2873,  9.5144,  9.7591,
     9 10.0042, 10.2737, 10.5456, 10.8300, 11.1225, 11.4272, 11.7148/
      data (ed2   (i),i=  64, 101)/
     1 11.9971, 12.2774, 12.5501, 12.7932, 13.0379, 13.2914, 13.5431,
     2 13.7863, 14.0292, 14.2708, 14.5126, 14.7565, 15.0004, 15.2644,
     3 15.5345, 15.8556, 16.1797, 16.5093, 16.9911, 17.4156, 17.8568,
     4 18.3094, 18.8073, 19.4079, 20.0710, 20.6831, 21.3597, 22.1528,
     5 22.9861, 24.0487, 25.0710, 26.4454, 28.1873, 30.1716, 33.0149,
     6 36.8021, 43.9864, 85.0000/
!        10-15 m
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.0416,  0.0832,  0.1247,  0.1663,  0.2079,  0.2495,
     2  0.2911,  0.3327,  0.3742,  0.4158,  0.4574,  0.4990,  0.6090,
     3  0.7207,  0.8324,  0.9442,  1.0812,  1.2434,  1.4057,  1.5832,
     4  1.7819,  1.9806,  2.2058,  2.4339,  2.6827,  2.9399,  3.2183,
     5  3.5033,  3.8106,  4.1241,  4.4479,  4.7770,  5.1140,  5.4651,
     6  5.7511,  6.0152,  6.1564,  6.2976,  6.4388,  6.5626,  6.6730,
     7  6.7834,  6.8938,  7.0050,  7.1338,  7.2627,  7.3916,  7.5206,
     8  7.6505,  7.7803,  7.9102,  8.0489,  8.2073,  8.3656,  8.5276,
     9  8.7094,  8.8912,  9.0991,  9.3458,  9.5833,  9.8052, 10.0315/
      data (ed3   (i),i=  64, 101)/
     1 10.2887, 10.5500, 10.8300, 11.1242, 11.4402, 11.7575, 12.0747,
     2 12.3907, 12.7087, 13.0245, 13.3057, 13.5811, 13.8434, 14.0962,
     3 14.3349, 14.5835, 14.8544, 15.1476, 15.4666, 15.7927, 16.1472,
     4 16.5526, 16.9808, 17.4695, 18.0180, 18.7308, 19.5051, 20.2249,
     5 20.9745, 21.9077, 22.9905, 24.2317, 25.8952, 27.8448, 30.1300,
     6 33.5203, 40.1259,107.5000/
!            15-25 m
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.0382,  0.0765,  0.1147,  0.1530,  0.1912,  0.2294,
     2  0.2677,  0.3059,  0.3441,  0.3824,  0.4206,  0.4589,  0.4971,
     3  0.5884,  0.6841,  0.7797,  0.8754,  0.9710,  1.1056,  1.2571,
     4  1.4086,  1.5730,  1.7570,  1.9410,  2.1291,  2.3192,  2.5109,
     5  2.7341,  2.9572,  3.2012,  3.4501,  3.7426,  4.0486,  4.3689,
     6  4.6892,  5.0088,  5.3044,  5.5913,  5.8608,  6.0689,  6.2112,
     7  6.3536,  6.4959,  6.6063,  6.7158,  6.8253,  6.9348,  7.0495,
     8  7.1718,  7.2942,  7.4166,  7.5458,  7.6898,  7.8337,  7.9777,
     9  8.1396,  8.3049,  8.4701,  8.6549,  8.8439,  9.0377,  9.2544/
      data (ed4   (i),i=  64, 101)/
     1  9.4711,  9.6967,  9.9238, 10.1720, 10.4308, 10.7083, 10.9926,
     2 11.3073, 11.6282, 11.9576, 12.2774, 12.5862, 12.8729, 13.1623,
     3 13.4538, 13.7317, 14.0068, 14.2778, 14.5561, 14.8677, 15.1971,
     4 15.5484, 15.9669, 16.3593, 16.7936, 17.3007, 17.8788, 18.5625,
     5 19.3250, 20.1580, 21.0951, 22.2919, 23.7341, 25.4084, 27.6309,
     6 30.8772, 36.4194, 85.0000/
!        25-50
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.0323,  0.0646,  0.0969,  0.1292,  0.1615,  0.1938,
     2  0.2261,  0.2584,  0.2907,  0.3230,  0.3553,  0.3877,  0.4200,
     3  0.4523,  0.4846,  0.5437,  0.6273,  0.7110,  0.7946,  0.8783,
     4  0.9619,  1.0636,  1.1803,  1.2969,  1.4136,  1.5395,  1.6914,
     5  1.8434,  1.9953,  2.1618,  2.3288,  2.4957,  2.6949,  2.8949,
     6  3.1087,  3.3379,  3.5757,  3.8346,  4.1055,  4.3976,  4.6872,
     7  4.9755,  5.2619,  5.5420,  5.7919,  6.0259,  6.1808,  6.3358,
     8  6.4907,  6.6172,  6.7418,  6.8665,  6.9911,  7.1169,  7.2429,
     9  7.3688,  7.4947,  7.6327,  7.7711,  7.9096,  8.0582,  8.2260/
      data (ed5   (i),i=  64, 101)/
     1  8.3939,  8.5725,  8.7698,  8.9671,  9.1865,  9.4105,  9.6551,
     2  9.9136, 10.1913, 10.4785, 10.7452, 11.0136, 11.3657, 11.7081,
     3 12.0457, 12.3909, 12.7398, 13.0840, 13.4100, 13.7178, 14.0195,
     4 14.3319, 14.6483, 14.9696, 15.3254, 15.7340, 16.2068, 16.7057,
     5 17.2538, 17.9755, 18.8161, 19.7417, 20.9022, 22.3770, 24.3230,
     6 26.8755, 31.5055, 76.9999/
!        50-100
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.0280,  0.0559,  0.0839,  0.1119,  0.1399,  0.1678,
     2  0.1958,  0.2238,  0.2518,  0.2797,  0.3077,  0.3357,  0.3637,
     3  0.3916,  0.4196,  0.4476,  0.4756,  0.5086,  0.5766,  0.6447,
     4  0.7127,  0.7808,  0.8488,  0.9169,  0.9849,  1.0782,  1.1786,
     5  1.2790,  1.3793,  1.4797,  1.5941,  1.7121,  1.8301,  1.9481,
     6  2.0798,  2.2223,  2.3648,  2.5084,  2.6727,  2.8370,  3.0016,
     7  3.2022,  3.4028,  3.6240,  3.8644,  4.0983,  4.3237,  4.5501,
     8  4.7800,  5.0105,  5.2548,  5.4991,  5.7347,  5.9703,  6.1402,
     9  6.3007,  6.4612,  6.6091,  6.7529,  6.8968,  7.0400,  7.1819/
      data (ed6   (i),i=  64, 101)/
     1  7.3237,  7.4656,  7.6283,  7.7977,  7.9672,  8.1480,  8.3316,
     2  8.5178,  8.7324,  8.9470,  9.1901,  9.4425,  9.7179,  9.9999,
     3 10.3142, 10.6370, 10.9721, 11.3142, 11.6756, 12.0633, 12.4738,
     4 12.8581, 13.2501, 13.6383, 14.0108, 14.3973, 14.7706, 15.1738,
     5 15.6636, 16.2263, 16.8703, 17.5766, 18.4598, 19.7243, 21.2656,
     6 23.5299, 27.6254, 69.0000/
!       100-150
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0247,  0.0494,  0.0741,  0.0988,  0.1234,  0.1481,
     2  0.1728,  0.1975,  0.2222,  0.2469,  0.2716,  0.2963,  0.3210,
     3  0.3456,  0.3703,  0.3950,  0.4197,  0.4444,  0.4691,  0.4938,
     4  0.5454,  0.6061,  0.6668,  0.7275,  0.7882,  0.8489,  0.9096,
     5  0.9703,  1.0438,  1.1294,  1.2150,  1.3007,  1.3863,  1.4719,
     6  1.5669,  1.6665,  1.7660,  1.8656,  1.9652,  2.0787,  2.1998,
     7  2.3209,  2.4420,  2.5786,  2.7295,  2.8804,  3.0367,  3.2135,
     8  3.3903,  3.5677,  3.7458,  3.9240,  4.1135,  4.3115,  4.5104,
     9  4.7278,  4.9451,  5.1748,  5.4086,  5.6296,  5.8424,  6.0465/
      data (ed7   (i),i=  64, 101)/
     1  6.2255,  6.4046,  6.5849,  6.7667,  6.9485,  7.1201,  7.2878,
     2  7.4554,  7.6321,  7.8120,  7.9920,  8.1924,  8.3938,  8.6216,
     3  8.8792,  9.1509,  9.4353,  9.7451, 10.0706, 10.4296, 10.8055,
     4 11.1929, 11.5957, 12.0308, 12.5277, 12.9692, 13.4656, 13.9243,
     5 14.3728, 14.8507, 15.3955, 16.1013, 16.8869, 17.7893, 19.0609,
     6 20.8426, 24.2707, 57.0000/
!       100-177.8
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0241,  0.0482,  0.0723,  0.0964,  0.1206,  0.1447,
     2  0.1688,  0.1929,  0.2170,  0.2411,  0.2652,  0.2893,  0.3134,
     3  0.3375,  0.3617,  0.3858,  0.4099,  0.4340,  0.4581,  0.4822,
     4  0.5158,  0.5761,  0.6363,  0.6966,  0.7568,  0.8171,  0.8773,
     5  0.9376,  0.9978,  1.0805,  1.1640,  1.2475,  1.3310,  1.4145,
     6  1.4980,  1.5930,  1.6883,  1.7835,  1.8788,  1.9741,  2.0871,
     7  2.2066,  2.3262,  2.4457,  2.5803,  2.7273,  2.8743,  3.0244,
     8  3.1922,  3.3601,  3.5299,  3.7096,  3.8892,  4.0742,  4.2678,
     9  4.4614,  4.6642,  4.8692,  5.0871,  5.3277,  5.5623,  5.7817/
      data (ed8   (i),i=  64, 101)/
     1  6.0009,  6.1843,  6.3676,  6.5498,  6.7288,  6.9078,  7.0853,
     2  7.2614,  7.4375,  7.6198,  7.8057,  7.9915,  8.2016,  8.4129,
     3  8.6536,  8.9148,  9.2028,  9.5038,  9.8153, 10.1482, 10.5138,
     4 10.9256, 11.3404, 11.7745, 12.2596, 12.7559, 13.2443, 13.7279,
     5 14.1833, 14.6483, 15.1787, 15.8347, 16.6511, 17.4975, 18.7856,
     6 20.6377, 24.0126, 57.0000/
!       177.8-316.2 m
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0212,  0.0424,  0.0636,  0.0848,  0.1060,  0.1271,
     2  0.1483,  0.1695,  0.1907,  0.2119,  0.2331,  0.2543,  0.2755,
     3  0.2967,  0.3179,  0.3390,  0.3602,  0.3814,  0.4026,  0.4238,
     4  0.4450,  0.4662,  0.4874,  0.5218,  0.5755,  0.6293,  0.6830,
     5  0.7368,  0.7906,  0.8443,  0.8981,  0.9519,  1.0077,  1.0818,
     6  1.1558,  1.2298,  1.3038,  1.3779,  1.4519,  1.5313,  1.6205,
     7  1.7097,  1.7989,  1.8882,  1.9774,  2.0736,  2.1723,  2.2709,
     8  2.3695,  2.4682,  2.5826,  2.7047,  2.8267,  2.9487,  3.0809,
     9  3.2204,  3.3598,  3.4993,  3.6759,  3.8527,  4.0308,  4.2148/
      data (ed9   (i),i=  64, 101)/
     1  4.3989,  4.5992,  4.8193,  5.0429,  5.2817,  5.5188,  5.7368,
     2  5.9548,  6.1599,  6.3616,  6.5613,  6.7565,  6.9518,  7.1533,
     3  7.3568,  7.5691,  7.8022,  8.0380,  8.2894,  8.5525,  8.8764,
     4  9.2125,  9.5612,  9.9355, 10.3767, 10.8585, 11.4101, 12.0542,
     5 12.6278, 13.1989, 13.8526, 14.5298, 15.2546, 16.0804, 17.1816,
     6 18.8716, 22.0776, 49.5000/
!       316.2-562.  m
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0193,  0.0386,  0.0579,  0.0773,  0.0966,  0.1159,
     2  0.1352,  0.1545,  0.1738,  0.1931,  0.2124,  0.2318,  0.2511,
     3  0.2704,  0.2897,  0.3090,  0.3283,  0.3476,  0.3669,  0.3863,
     4  0.4056,  0.4249,  0.4442,  0.4635,  0.4828,  0.5054,  0.5541,
     5  0.6029,  0.6516,  0.7004,  0.7491,  0.7978,  0.8466,  0.8953,
     6  0.9440,  0.9928,  1.0574,  1.1249,  1.1923,  1.2597,  1.3271,
     7  1.3945,  1.4620,  1.5328,  1.6079,  1.6831,  1.7582,  1.8333,
     8  1.9085,  1.9836,  2.0620,  2.1414,  2.2207,  2.3000,  2.3794,
     9  2.4587,  2.5531,  2.6639,  2.7747,  2.8855,  2.9963,  3.1443/
      data (ed10  (i),i=  64, 101)/
     1  3.2935,  3.4427,  3.5998,  3.7619,  3.9240,  4.1097,  4.3163,
     2  4.5214,  4.7136,  4.9058,  5.1172,  5.3468,  5.5760,  5.8043,
     3  6.0287,  6.2293,  6.4299,  6.6416,  6.8591,  7.0832,  7.3194,
     4  7.5652,  7.8426,  8.1453,  8.4814,  8.8394,  9.2513,  9.7428,
     5 10.3262, 11.0277, 11.6899, 12.5096, 13.3907, 14.3696, 15.4002,
     6 17.0735, 19.7820, 42.5000/
!       562.-1000.  m
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0166,  0.0332,  0.0498,  0.0663,  0.0829,  0.0995,
     2  0.1161,  0.1327,  0.1493,  0.1659,  0.1825,  0.1990,  0.2156,
     3  0.2322,  0.2488,  0.2654,  0.2820,  0.2986,  0.3152,  0.3317,
     4  0.3483,  0.3649,  0.3815,  0.3981,  0.4147,  0.4313,  0.4479,
     5  0.4644,  0.4810,  0.4976,  0.5398,  0.5862,  0.6326,  0.6791,
     6  0.7255,  0.7719,  0.8184,  0.8648,  0.9112,  0.9577,  1.0060,
     7  1.0740,  1.1420,  1.2099,  1.2779,  1.3459,  1.4138,  1.4818,
     8  1.5550,  1.6300,  1.7050,  1.7801,  1.8551,  1.9302,  2.0066,
     9  2.1013,  2.1961,  2.2908,  2.3856,  2.4803,  2.5844,  2.6910/
      data (ed11  (i),i=  64, 101)/
     1  2.7976,  2.9042,  3.0130,  3.1415,  3.2700,  3.3985,  3.5313,
     2  3.6801,  3.8290,  3.9779,  4.1536,  4.3340,  4.5220,  4.7979,
     3  5.0620,  5.2936,  5.5265,  5.7701,  6.0116,  6.2178,  6.4239,
     4  6.6600,  6.9135,  7.1716,  7.4322,  7.7393,  8.0743,  8.4571,
     5  8.8544,  9.3725,  9.9317, 10.8959, 11.5916, 12.4715, 13.4359,
     6 14.7928, 17.1376, 46.5000/
!        1000-1778 m
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0157,  0.0313,  0.0470,  0.0626,  0.0783,  0.0939,
     2  0.1096,  0.1252,  0.1409,  0.1565,  0.1722,  0.1878,  0.2035,
     3  0.2191,  0.2348,  0.2504,  0.2661,  0.2817,  0.2974,  0.3130,
     4  0.3287,  0.3443,  0.3600,  0.3757,  0.3913,  0.4070,  0.4226,
     5  0.4383,  0.4539,  0.4696,  0.4852,  0.5025,  0.5479,  0.5932,
     6  0.6386,  0.6839,  0.7293,  0.7746,  0.8200,  0.8654,  0.9107,
     7  0.9561,  1.0020,  1.0646,  1.1272,  1.1898,  1.2524,  1.3150,
     8  1.3776,  1.4402,  1.5032,  1.5734,  1.6437,  1.7139,  1.7841,
     9  1.8544,  1.9246,  1.9949,  2.0937,  2.1947,  2.2958,  2.3968/
      data (ed12  (i),i=  64, 101)/
     1  2.4979,  2.6282,  2.7591,  2.8900,  3.0224,  3.1629,  3.3034,
     2  3.4439,  3.5824,  3.7195,  3.8567,  3.9938,  4.2500,  4.5067,
     3  4.6543,  4.8020,  4.9497,  5.1583,  5.3983,  5.8018,  6.1491,
     4  6.3891,  6.6348,  6.8852,  7.1356,  7.3861,  7.7616,  8.3222,
     5  9.0942,  9.6622,  9.9822, 11.0628, 12.1999, 12.9949, 14.2398,
     6 16.6918, 19.1597, 45.5000/
!          1778-3162 m
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0136,  0.0272,  0.0408,  0.0544,  0.0680,  0.0815,
     2  0.0951,  0.1087,  0.1223,  0.1359,  0.1495,  0.1631,  0.1767,
     3  0.1903,  0.2039,  0.2175,  0.2311,  0.2446,  0.2582,  0.2718,
     4  0.2854,  0.2990,  0.3126,  0.3262,  0.3398,  0.3534,  0.3670,
     5  0.3806,  0.3942,  0.4077,  0.4213,  0.4349,  0.4485,  0.4621,
     6  0.4757,  0.4893,  0.5102,  0.5585,  0.6067,  0.6550,  0.7032,
     7  0.7515,  0.7997,  0.8480,  0.8962,  0.9445,  0.9927,  1.1025,
     8  1.2231,  1.3437,  1.4644,  1.5971,  1.7350,  1.8729,  2.0068,
     9  2.0945,  2.1823,  2.2700,  2.3577,  2.4454,  2.5365,  2.6330/
      data (ed13  (i),i=  64, 101)/
     1  2.7295,  2.8260,  2.9225,  3.0380,  3.2310,  3.4240,  3.6170,
     2  3.8100,  4.0025,  4.1633,  4.3242,  4.4850,  4.6458,  4.8067,
     3  4.9675,  5.1925,  5.4337,  5.5875,  5.7081,  5.8287,  5.9494,
     4  6.1866,  6.5062,  6.7475,  6.9887,  7.4600,  7.7212,  7.9625,
     5  8.4075,  8.7600,  9.2449, 10.1050, 10.5875, 11.2099, 12.6574,
     6 14.3496, 18.6397, 22.5000/
!         3162-5600 m (same as above)
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.0136,  0.0272,  0.0408,  0.0544,  0.0680,  0.0815,
     2  0.0951,  0.1087,  0.1223,  0.1359,  0.1495,  0.1631,  0.1767,
     3  0.1903,  0.2039,  0.2175,  0.2311,  0.2446,  0.2582,  0.2718,
     4  0.2854,  0.2990,  0.3126,  0.3262,  0.3398,  0.3534,  0.3670,
     5  0.3806,  0.3942,  0.4077,  0.4213,  0.4349,  0.4485,  0.4621,
     6  0.4757,  0.4893,  0.5102,  0.5585,  0.6067,  0.6550,  0.7032,
     7  0.7515,  0.7997,  0.8480,  0.8962,  0.9445,  0.9927,  1.1025,
     8  1.2231,  1.3437,  1.4644,  1.5971,  1.7350,  1.8729,  2.0068,
     9  2.0945,  2.1823,  2.2700,  2.3577,  2.4454,  2.5365,  2.6330/
      data (ed14  (i),i=  64, 101)/
     1  2.7295,  2.8260,  2.9225,  3.0380,  3.2310,  3.4240,  3.6170,
     2  3.8100,  4.0025,  4.1633,  4.3242,  4.4850,  4.6458,  4.8067,
     3  4.9675,  5.1925,  5.4337,  5.5875,  5.7081,  5.8287,  5.9494,
     4  6.1866,  6.5062,  6.7475,  6.9887,  7.4600,  7.7212,  7.9625,
     5  8.4075,  8.7600,  9.2449, 10.1050, 10.5875, 11.2099, 12.6574,
     6 14.3496, 18.6397, 22.5000/
!
       end
      block data degb2b
!          block data which gives de (energy loss in scinti for
!          a standard gamma 1ry shower.  scinti is assumed under
!          0.5cmpb+0.1cm fe. scinti is 3.5 cm thick).
!
!          cos=0.8
!
!       from e100v at 600 g/cm**2:  pb.5fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
      include "Zdegb2"
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.0623,  0.1246,  0.1870,  0.2493,  0.3116,  0.3739,
     2  0.4362,  0.4986,  0.6407,  0.7847,  0.9287,  1.1027,  1.3061,
     3  1.5102,  1.7299,  1.9496,  2.2148,  2.4935,  2.8868,  3.3258,
     4  3.7513,  4.1625,  4.5753,  4.9662,  5.3571,  5.8081,  6.2333,
     5  6.5853,  6.8615,  7.1293,  7.3888,  7.6237,  7.8403,  8.0482,
     6  8.2317,  8.4152,  8.6110,  8.8171,  9.0270,  9.2659,  9.5053,
     7  9.7717, 10.0394, 10.3156, 10.5934, 10.8748, 11.1590, 11.4457,
     8 11.7870, 12.1463, 12.5180, 13.0108, 13.4738, 13.8890, 14.3437,
     9 14.7610, 15.1603, 15.5595, 15.8977, 16.1944, 16.4731, 16.7666/
      data (ed1   (i),i=  64, 101)/
     1 17.0611, 17.3534, 17.6744, 18.0259, 18.3975, 18.7626, 19.1485,
     2 19.5948, 20.1499, 20.7491, 21.3122, 21.9543, 22.4912, 23.1627,
     3 23.7428, 24.3711, 25.1317, 25.8658, 26.5928, 27.5444, 28.5733,
     4 29.4191, 30.3874, 31.5761, 33.1691, 34.6272, 35.9777, 37.3999,
     5 39.6568, 42.2798, 44.7998, 47.3141, 50.3844, 54.8496, 61.6744,
     6 71.8987, 86.9658,213.5000/
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.0494,  0.0987,  0.1481,  0.1975,  0.2468,  0.2962,
     2  0.3456,  0.3949,  0.4443,  0.4937,  0.5990,  0.7126,  0.8262,
     3  0.9398,  1.0752,  1.2354,  1.3956,  1.5668,  1.7588,  1.9508,
     4  2.1679,  2.3936,  2.6570,  2.9540,  3.2554,  3.5737,  3.9598,
     5  4.2831,  4.6038,  4.9348,  5.3171,  5.6924,  6.0496,  6.4007,
     6  6.6917,  6.9591,  7.1863,  7.4063,  7.5886,  7.7431,  7.8976,
     7  8.0591,  8.2347,  8.4102,  8.5987,  8.8007,  9.0029,  9.2149,
     8  9.4268,  9.6613,  9.9078, 10.1565, 10.4066, 10.6728, 10.9486,
     9 11.2668, 11.6180, 12.0241, 12.3899, 12.7613, 13.1427, 13.5338/
      data (ed2   (i),i=  64, 101)/
     1 13.8884, 14.2707, 14.6735, 15.0872, 15.5010, 15.9147, 16.2486,
     2 16.5590, 16.8586, 17.1782, 17.5177, 17.8996, 18.2641, 18.6277,
     3 19.0018, 19.4779, 20.0115, 20.6233, 21.1899, 21.8467, 22.4400,
     4 23.2153, 23.9776, 24.8694, 25.8085, 26.9288, 28.0060, 29.2910,
     5 31.0060, 32.3089, 33.9869, 35.6129, 38.6611, 41.8829, 46.7165,
     6 52.7974, 61.4355,180.5000/
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.0424,  0.0848,  0.1272,  0.1696,  0.2121,  0.2545,
     2  0.2969,  0.3393,  0.3817,  0.4241,  0.4665,  0.5206,  0.6184,
     3  0.7162,  0.8140,  0.9118,  1.0144,  1.1615,  1.3086,  1.4558,
     4  1.6102,  1.7678,  1.9254,  2.1144,  2.3317,  2.5528,  2.7870,
     5  3.0357,  3.4315,  3.7254,  3.9979,  4.3437,  4.6547,  4.9364,
     6  5.3065,  5.6735,  6.0102,  6.2828,  6.5519,  6.8077,  7.0503,
     7  7.2530,  7.4558,  7.6429,  7.8255,  8.0093,  8.2158,  8.4224,
     8  8.6153,  8.8000,  8.9847,  9.1826,  9.3817,  9.5763,  9.7641,
     9  9.9520, 10.2029, 10.4754, 10.7257, 10.9739, 11.2917, 11.6154/
      data (ed3   (i),i=  64, 101)/
     1 11.9351, 12.3785, 12.7946, 13.1927, 13.5760, 13.9019, 14.3577,
     2 14.8287, 15.2730, 15.6702, 16.0239, 16.3776, 16.7338, 17.0833,
     3 17.4093, 17.8077, 18.2466, 18.6812, 19.1076, 19.5769, 20.0974,
     4 20.6938, 21.3578, 22.0636, 22.7151, 23.5142, 24.3778, 25.3593,
     5 26.5095, 28.0681, 29.6021, 31.2665, 33.6247, 35.6108, 38.8747,
     6 43.9986, 53.5618, 98.0000/
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.0370,  0.0739,  0.1109,  0.1478,  0.1848,  0.2217,
     2  0.2587,  0.2956,  0.3326,  0.3695,  0.4065,  0.4434,  0.4804,
     3  0.5388,  0.6215,  0.7042,  0.7869,  0.8695,  0.9522,  1.0508,
     4  1.1709,  1.2911,  1.4112,  1.5383,  1.6852,  1.8320,  1.9788,
     5  2.1571,  2.3408,  2.5291,  2.7478,  2.9666,  3.2184,  3.4762,
     6  3.7610,  4.0408,  4.2827,  4.5344,  4.8734,  5.1880,  5.4880,
     7  5.8176,  6.1610,  6.5130,  6.7476,  6.9823,  7.2072,  7.4313,
     8  7.6158,  7.7827,  7.9496,  8.1312,  8.3193,  8.5075,  8.6995,
     9  8.8915,  9.0922,  9.3042,  9.5197,  9.7775, 10.0368, 10.3060/
      data (ed4   (i),i=  64, 101)/
     1 10.5811, 10.8716, 11.1731, 11.4834, 11.8397, 12.2025, 12.5895,
     2 13.0562, 13.4570, 13.8404, 14.2172, 14.6003, 15.0140, 15.4533,
     3 15.8804, 16.2741, 16.6634, 17.0661, 17.4790, 17.9343, 18.3458,
     4 18.8057, 19.3302, 19.8974, 20.5018, 21.1031, 21.7815, 22.6499,
     5 23.6730, 24.7725, 26.0478, 27.5668, 29.4837, 31.6472, 34.4412,
     6 38.1554, 44.7317, 76.0000/
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.0316,  0.0633,  0.0949,  0.1265,  0.1581,  0.1898,
     2  0.2214,  0.2530,  0.2847,  0.3163,  0.3479,  0.3796,  0.4112,
     3  0.4428,  0.4744,  0.5146,  0.5909,  0.6672,  0.7435,  0.8198,
     4  0.8961,  0.9724,  1.0686,  1.1761,  1.2836,  1.3912,  1.4987,
     5  1.6266,  1.7548,  1.8830,  2.0132,  2.1637,  2.3143,  2.4649,
     6  2.6453,  2.8348,  3.0288,  3.2531,  3.4773,  3.7119,  3.9477,
     7  4.2259,  4.5162,  4.8083,  5.0932,  5.3648,  5.6348,  5.9033,
     8  6.1694,  6.4342,  6.6839,  6.9286,  7.1330,  7.3207,  7.5078,
     9  7.6836,  7.8593,  8.0408,  8.2451,  8.4495,  8.6610,  8.8748/
      data (ed5   (i),i=  64, 101)/
     1  9.0926,  9.3158,  9.5448,  9.8012, 10.0554, 10.3020, 10.5656,
     2 10.8989, 11.2331, 11.5717, 11.9271, 12.3086, 12.7168, 13.1609,
     3 13.6231, 14.0568, 14.5375, 15.0417, 15.4998, 15.9879, 16.3994,
     4 16.8456, 17.2874, 17.7414, 18.2299, 18.7748, 19.3710, 19.9628,
     5 20.7542, 21.6316, 22.7377, 23.9290, 25.3144, 27.3054, 29.9146,
     6 33.5090, 39.4486, 94.0000/
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.0286,  0.0572,  0.0859,  0.1145,  0.1431,  0.1717,
     2  0.2003,  0.2290,  0.2576,  0.2862,  0.3148,  0.3434,  0.3721,
     3  0.4007,  0.4293,  0.4579,  0.4866,  0.5334,  0.5965,  0.6595,
     4  0.7226,  0.7856,  0.8486,  0.9117,  0.9747,  1.0555,  1.1480,
     5  1.2405,  1.3331,  1.4256,  1.5213,  1.6299,  1.7384,  1.8470,
     6  1.9556,  2.0745,  2.2006,  2.3266,  2.4527,  2.5989,  2.7572,
     7  2.9155,  3.0876,  3.2755,  3.4634,  3.6750,  3.8923,  4.1159,
     8  4.3455,  4.5812,  4.8292,  5.0870,  5.3666,  5.6259,  5.8665,
     9  6.1082,  6.3511,  6.5871,  6.8124,  7.0349,  7.2441,  7.4532/
      data (ed6   (i),i=  64, 101)/
     1  7.6553,  7.8553,  8.0588,  8.2713,  8.4838,  8.7037,  8.9242,
     2  9.1671,  9.4217,  9.6844,  9.9506, 10.2502, 10.5649, 10.9117,
     3 11.2645, 11.6339, 12.0341, 12.4626, 12.9647, 13.4005, 13.8492,
     4 14.3707, 14.9255, 15.4186, 15.9713, 16.4590, 16.9897, 17.5735,
     5 18.2673, 18.9747, 19.7913, 20.8251, 21.9812, 23.5992, 25.7454,
     6 28.3082, 33.5062, 90.5000/
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0258,  0.0517,  0.0775,  0.1033,  0.1291,  0.1550,
     2  0.1808,  0.2066,  0.2325,  0.2583,  0.2841,  0.3099,  0.3358,
     3  0.3616,  0.3874,  0.4133,  0.4391,  0.4649,  0.4907,  0.5356,
     4  0.5912,  0.6468,  0.7024,  0.7580,  0.8136,  0.8691,  0.9247,
     5  0.9803,  1.0513,  1.1308,  1.2103,  1.2898,  1.3693,  1.4488,
     6  1.5334,  1.6270,  1.7205,  1.8141,  1.9077,  2.0017,  2.1200,
     7  2.2383,  2.3567,  2.4750,  2.6223,  2.7773,  2.9324,  3.0889,
     8  3.2466,  3.4042,  3.5790,  3.7804,  3.9817,  4.2111,  4.4433,
     9  4.6653,  4.8839,  5.1233,  5.3860,  5.6409,  5.8896,  6.1342/
      data (ed7   (i),i=  64, 101)/
     1  6.3755,  6.6188,  6.8642,  7.0977,  7.3164,  7.5329,  7.7387,
     2  7.9445,  8.1542,  8.3654,  8.5887,  8.8331,  9.0919,  9.3819,
     3  9.6896, 10.0099, 10.3430, 10.6885, 11.0527, 11.4704, 11.8940,
     4 12.3413, 12.8645, 13.4610, 14.1055, 14.7172, 15.3203, 15.8827,
     5 16.5156, 17.2146, 17.9747, 18.8423, 19.9060, 21.3488, 22.9891,
     6 25.5396, 30.8156, 85.0000/
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0254,  0.0508,  0.0762,  0.1016,  0.1270,  0.1524,
     2  0.1778,  0.2032,  0.2286,  0.2540,  0.2793,  0.3047,  0.3301,
     3  0.3555,  0.3809,  0.4063,  0.4317,  0.4571,  0.4825,  0.5175,
     4  0.5737,  0.6300,  0.6862,  0.7424,  0.7986,  0.8548,  0.9111,
     5  0.9673,  1.0332,  1.1126,  1.1919,  1.2713,  1.3507,  1.4300,
     6  1.5110,  1.6038,  1.6966,  1.7894,  1.8822,  1.9750,  2.0799,
     7  2.1894,  2.2989,  2.4084,  2.5247,  2.6764,  2.8281,  2.9798,
     8  3.1371,  3.2954,  3.4536,  3.6405,  3.8393,  4.0429,  4.2667,
     9  4.4904,  4.7105,  4.9304,  5.1790,  5.4409,  5.6988,  5.9555/
      data (ed8   (i),i=  64, 101)/
     1  6.1964,  6.4340,  6.6664,  6.8969,  7.1168,  7.3283,  7.5405,
     2  7.7560,  7.9716,  8.1888,  8.4062,  8.6421,  8.8921,  9.1598,
     3  9.4409,  9.7568, 10.0876, 10.4348, 10.8012, 11.2157, 11.6666,
     4 12.1041, 12.5895, 13.1835, 13.8376, 14.4879, 15.0823, 15.7052,
     5 16.3034, 16.9784, 17.7171, 18.5960, 19.5946, 20.9554, 22.7447,
     6 25.3057, 30.4748, 85.0000/
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0215,  0.0430,  0.0646,  0.0861,  0.1076,  0.1291,
     2  0.1507,  0.1722,  0.1937,  0.2152,  0.2368,  0.2583,  0.2798,
     3  0.3013,  0.3229,  0.3444,  0.3659,  0.3874,  0.4090,  0.4305,
     4  0.4520,  0.4735,  0.4951,  0.5390,  0.5895,  0.6401,  0.6907,
     5  0.7413,  0.7919,  0.8424,  0.8930,  0.9436,  0.9942,  1.0620,
     6  1.1321,  1.2023,  1.2724,  1.3425,  1.4126,  1.4827,  1.5619,
     7  1.6441,  1.7262,  1.8084,  1.8905,  1.9727,  2.0700,  2.1749,
     8  2.2797,  2.3846,  2.4894,  2.6021,  2.7157,  2.8292,  2.9428,
     9  3.0704,  3.2121,  3.3538,  3.4956,  3.6754,  3.8564,  4.0393/
      data (ed9   (i),i=  64, 101)/
     1  4.2297,  4.4201,  4.6365,  4.8718,  5.1034,  5.3305,  5.5622,
     2  5.8073,  6.0526,  6.2987,  6.5460,  6.7985,  7.0457,  7.2719,
     3  7.4982,  7.7306,  7.9631,  8.2097,  8.4590,  8.7841,  9.1173,
     4  9.4388,  9.8133, 10.2379, 10.6872, 11.1693, 11.8145, 12.4971,
     5 13.2897, 14.2101, 15.1767, 16.0614, 17.0730, 18.2063, 19.7089,
     6 22.0560, 26.0170, 75.0000/
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0194,  0.0388,  0.0582,  0.0776,  0.0970,  0.1164,
     2  0.1357,  0.1551,  0.1745,  0.1939,  0.2133,  0.2327,  0.2521,
     3  0.2715,  0.2909,  0.3103,  0.3297,  0.3491,  0.3685,  0.3878,
     4  0.4072,  0.4266,  0.4460,  0.4654,  0.4848,  0.5101,  0.5565,
     5  0.6030,  0.6495,  0.6959,  0.7424,  0.7889,  0.8353,  0.8818,
     6  0.9283,  0.9747,  1.0311,  1.0993,  1.1675,  1.2357,  1.3039,
     7  1.3721,  1.4403,  1.5094,  1.5847,  1.6600,  1.7354,  1.8107,
     8  1.8860,  1.9613,  2.0448,  2.1368,  2.2289,  2.3209,  2.4130,
     9  2.5062,  2.6198,  2.7333,  2.8468,  2.9603,  3.0963,  3.2444/
      data (ed10  (i),i=  64, 101)/
     1  3.3925,  3.5437,  3.7033,  3.8629,  4.0241,  4.1957,  4.3672,
     2  4.5473,  4.7567,  4.9660,  5.2026,  5.4445,  5.6974,  5.9535,
     3  6.2229,  6.4952,  6.7813,  7.0613,  7.3209,  7.5833,  7.8518,
     4  8.1518,  8.4904,  8.7956,  9.1389,  9.5596,  9.9652, 10.4810,
     5 11.0506, 11.7495, 12.5639, 13.7462, 14.9085, 16.0059, 17.2288,
     6 19.4078, 22.1510, 49.0000/
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0173,  0.0346,  0.0519,  0.0692,  0.0864,  0.1037,
     2  0.1210,  0.1383,  0.1556,  0.1729,  0.1902,  0.2075,  0.2248,
     3  0.2421,  0.2593,  0.2766,  0.2939,  0.3112,  0.3285,  0.3458,
     4  0.3631,  0.3804,  0.3977,  0.4149,  0.4322,  0.4495,  0.4668,
     5  0.4841,  0.5036,  0.5482,  0.5927,  0.6373,  0.6819,  0.7265,
     6  0.7710,  0.8156,  0.8602,  0.9048,  0.9493,  0.9939,  1.0506,
     7  1.1091,  1.1677,  1.2263,  1.2849,  1.3434,  1.4020,  1.4606,
     8  1.5208,  1.5845,  1.6482,  1.7118,  1.7755,  1.8392,  1.9029,
     9  1.9665,  2.0353,  2.1095,  2.1838,  2.2581,  2.3324,  2.4067/
      data (ed11  (i),i=  64, 101)/
     1  2.4810,  2.5743,  2.6742,  2.7740,  2.8739,  2.9738,  3.1036,
     2  3.2442,  3.3848,  3.5280,  3.6828,  3.8377,  3.9926,  4.1977,
     3  4.4054,  4.6275,  4.8618,  5.1071,  5.3682,  5.6587,  5.9794,
     4  6.2342,  6.4846,  6.8298,  7.1625,  7.4776,  7.8031,  8.1812,
     5  8.6315,  9.1166,  9.8025, 10.7026, 11.8660, 13.1460, 14.6956,
     6 16.3948, 20.4078, 41.0000/
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0151,  0.0302,  0.0454,  0.0605,  0.0756,  0.0907,
     2  0.1058,  0.1210,  0.1361,  0.1512,  0.1663,  0.1815,  0.1966,
     3  0.2117,  0.2268,  0.2419,  0.2571,  0.2722,  0.2873,  0.3024,
     4  0.3175,  0.3327,  0.3478,  0.3629,  0.3780,  0.3931,  0.4083,
     5  0.4234,  0.4385,  0.4536,  0.4687,  0.4839,  0.4990,  0.5410,
     6  0.5850,  0.6289,  0.6729,  0.7168,  0.7607,  0.8047,  0.8486,
     7  0.8926,  0.9365,  0.9805,  1.0386,  1.1080,  1.1775,  1.2469,
     8  1.3164,  1.3858,  1.4552,  1.5250,  1.5953,  1.6656,  1.7359,
     9  1.8062,  1.8766,  1.9469,  2.0188,  2.0959,  2.1729,  2.2500/
      data (ed12  (i),i=  64, 101)/
     1  2.3271,  2.4041,  2.4812,  2.5708,  2.6646,  2.7583,  2.8521,
     2  2.9458,  3.0579,  3.1951,  3.3323,  3.4695,  3.6562,  3.8571,
     3  4.0406,  4.1812,  4.3219,  4.4625,  4.6586,  4.8750,  5.0989,
     4  5.3333,  5.5677,  5.8021,  6.0625,  6.4643,  7.0078,  7.3593,
     5  7.7250,  8.0937,  8.4453,  9.2916, 10.2915, 11.1665, 12.6561,
     6 14.4165, 17.3745, 30.5000/
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0129,  0.0259,  0.0388,  0.0518,  0.0647,  0.0776,
     2  0.0906,  0.1035,  0.1165,  0.1294,  0.1424,  0.1553,  0.1682,
     3  0.1812,  0.1941,  0.2071,  0.2200,  0.2329,  0.2459,  0.2588,
     4  0.2718,  0.2847,  0.2976,  0.3106,  0.3235,  0.3365,  0.3494,
     5  0.3624,  0.3753,  0.3882,  0.4012,  0.4141,  0.4271,  0.4400,
     6  0.4529,  0.4659,  0.4788,  0.4918,  0.5213,  0.5800,  0.6387,
     7  0.6973,  0.7560,  0.8147,  0.8733,  0.9320,  0.9907,  1.0740,
     8  1.1620,  1.2500,  1.3380,  1.4260,  1.5100,  1.5729,  1.6357,
     9  1.6986,  1.7614,  1.8243,  1.8871,  1.9500,  2.0112,  2.0662/
      data (ed13  (i),i=  64, 101)/
     1  2.1212,  2.1762,  2.2312,  2.2862,  2.3412,  2.3962,  2.4512,
     2  2.5100,  2.5980,  2.6860,  2.7740,  2.8620,  2.9500,  3.0345,
     3  3.1145,  3.1945,  3.2745,  3.3545,  3.4345,  3.5200,  3.6300,
     4  3.7400,  3.8500,  3.9600,  4.1120,  4.2880,  4.4640,  4.6750,
     5  4.8950,  5.2300,  6.1799,  7.9399,  8.7000,  8.9933, 10.3599,
     6 13.9194, 18.1199, 22.5000/
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.0130,  0.0260,  0.0390,  0.0520,  0.0650,  0.0780,
     2  0.0910,  0.1040,  0.1170,  0.1300,  0.1430,  0.1560,  0.1690,
     3  0.1820,  0.1950,  0.2080,  0.2210,  0.2340,  0.2470,  0.2600,
     4  0.2730,  0.2860,  0.2990,  0.3120,  0.3250,  0.3380,  0.3510,
     5  0.3640,  0.3770,  0.3900,  0.4030,  0.4160,  0.4290,  0.4420,
     6  0.4550,  0.4680,  0.4810,  0.4940,  0.5350,  0.6000,  0.6650,
     7  0.7300,  0.7950,  0.8600,  0.9250,  0.9900,  1.1650,  1.3600,
     8  1.5550,  1.7500,  1.9450,  2.1400,  2.3350,  2.5100,  2.5750,
     9  2.6400,  2.7050,  2.7700,  2.8350,  2.9000,  2.9650,  3.0300/
      data (ed14  (i),i=  64, 101)/
     1  3.0950,  3.1600,  3.2250,  3.2900,  3.3550,  3.4200,  3.4850,
     2  3.5250,  3.5575,  3.5900,  3.6225,  3.6550,  3.6875,  3.7200,
     3  3.7525,  3.7850,  3.8175,  3.8500,  3.8825,  3.9150,  3.9475,
     4  3.9800,  4.0250,  4.0900,  4.1550,  4.2200,  4.2850,  4.3500,
     5  4.4150,  4.4800,  4.5900,  4.7200,  4.8500,  4.9800,  5.1100,
     6  5.2400,  5.3700,  5.5000/
!
       end
      block data degb3b
!          block data which gives de (energy loss in scinti for
!          a standard gamma 1ry shower.  scinti is assumed under
!          0.5cmpb+0.1cm fe. scinti is 3.5 cm thick).
!
!          cos=0.7
!
!       from e100i2 at 400 g/cm**2:  pb.5fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
      include "Zdegb3"
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.0741,  0.1481,  0.2222,  0.2963,  0.3703,  0.4444,
     2  0.5408,  0.7047,  0.8685,  1.0449,  1.2722,  1.4995,  1.7542,
     3  2.0097,  2.2860,  2.5767,  2.9173,  3.3075,  3.7391,  4.2355,
     4  4.7416,  5.2041,  5.6556,  6.1026,  6.5942,  7.0562,  7.4785,
     5  7.9009,  8.3030,  8.6802,  9.0331,  9.3397,  9.6501,  9.9647,
     6 10.2637, 10.5726, 10.9285, 11.2899, 11.6638, 12.0544, 12.4520,
     7 12.9017, 13.3421, 13.8293, 14.2803, 14.7280, 15.2111, 15.6945,
     8 16.1720, 16.6472, 17.1264, 17.6064, 18.0145, 18.4294, 18.8232,
     9 19.2266, 19.6403, 20.0571, 20.5105, 20.9149, 21.3624, 21.8199/
      data (ed1   (i),i=  64, 101)/
     1 22.3198, 22.8987, 23.5516, 24.1283, 24.7512, 25.4772, 26.1443,
     2 26.8504, 27.6388, 28.5490, 29.3766, 30.2004, 31.1803, 32.2186,
     3 33.2331, 34.3442, 35.4232, 36.8652, 38.3315, 39.5876, 40.9409,
     4 42.6783, 44.4056, 46.2191, 48.0895, 50.4347, 53.1562, 55.8877,
     5 58.9560, 62.0479, 66.1565, 70.8894, 76.4905, 83.2994, 92.6823,
     6106.2884,130.9890,385.4998/
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.0535,  0.1071,  0.1606,  0.2142,  0.2677,  0.3212,
     2  0.3748,  0.4283,  0.4819,  0.5772,  0.6940,  0.8107,  0.9274,
     3  1.0609,  1.2217,  1.3825,  1.5514,  1.7420,  1.9327,  2.1452,
     4  2.3697,  2.6128,  2.8815,  3.1821,  3.5086,  3.8607,  4.2078,
     5  4.5574,  4.9405,  5.2950,  5.6548,  6.0292,  6.3992,  6.7492,
     6  7.0995,  7.4711,  7.8145,  8.1428,  8.4558,  8.7650,  9.0625,
     7  9.3248,  9.5920,  9.8692, 10.1419, 10.4106, 10.7104, 11.0266,
     8 11.3536, 11.6930, 12.0476, 12.4410, 12.8119, 13.1818, 13.5650,
     9 14.0061, 14.4493, 14.8887, 15.3148, 15.7207, 16.1285, 16.5737/
      data (ed2   (i),i=  64, 101)/
     1 17.0316, 17.5364, 18.0330, 18.4372, 18.8783, 19.2904, 19.7251,
     2 20.1986, 20.6555, 21.1152, 21.6935, 22.2598, 22.8291, 23.4059,
     3 24.0120, 24.7325, 25.5015, 26.2727, 27.0328, 28.0015, 28.9589,
     4 30.0406, 31.0464, 32.2792, 33.8102, 35.4209, 36.9449, 38.5744,
     5 40.4788, 42.4971, 44.9924, 48.1566, 51.8411, 56.0407, 61.5012,
     6 71.3553, 86.6334,192.5000/
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.0461,  0.0922,  0.1384,  0.1845,  0.2306,  0.2767,
     2  0.3228,  0.3690,  0.4151,  0.4612,  0.5152,  0.6110,  0.7067,
     3  0.8024,  0.8982,  0.9939,  1.1315,  1.2719,  1.4124,  1.5592,
     4  1.7165,  1.8739,  2.0379,  2.2282,  2.4184,  2.6458,  2.9011,
     5  3.1664,  3.4381,  3.7185,  4.0016,  4.3001,  4.6054,  4.9242,
     6  5.2389,  5.5566,  5.8954,  6.2184,  6.5382,  6.8880,  7.2096,
     7  7.5195,  7.8553,  8.1699,  8.4685,  8.7579,  9.0469,  9.3398,
     8  9.6296,  9.9157, 10.1794, 10.4338, 10.7149, 11.0069, 11.3701,
     9 11.7355, 12.1032, 12.4736, 12.8813, 13.3068, 13.7244, 14.1191/
      data (ed3   (i),i=  64, 101)/
     1 14.4894, 14.9342, 15.3559, 15.8151, 16.2962, 16.7317, 17.1685,
     2 17.6538, 18.1005, 18.5543, 18.9987, 19.4538, 19.9268, 20.4124,
     3 20.9394, 21.5400, 22.1492, 22.7981, 23.4875, 24.3477, 25.2058,
     4 25.9810, 27.0518, 28.0879, 29.2442, 30.5416, 31.9237, 33.4805,
     5 35.4439, 37.2008, 39.0993, 41.6290, 44.1362, 47.6653, 52.6859,
     6 60.2074, 73.4935,183.0000/
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.0394,  0.0788,  0.1181,  0.1575,  0.1969,  0.2363,
     2  0.2756,  0.3150,  0.3544,  0.3938,  0.4331,  0.4725,  0.5263,
     3  0.6134,  0.7005,  0.7875,  0.8746,  0.9617,  1.0653,  1.1818,
     4  1.2984,  1.4149,  1.5434,  1.7043,  1.8651,  2.0277,  2.1997,
     5  2.3716,  2.5504,  2.7493,  2.9481,  3.1813,  3.4266,  3.6806,
     6  3.9384,  4.2123,  4.4912,  4.8075,  5.1286,  5.4555,  5.7877,
     7  6.1076,  6.4042,  6.7058,  7.0102,  7.3269,  7.6325,  7.9249,
     8  8.2036,  8.4775,  8.7621,  9.0433,  9.3033,  9.5664,  9.8398,
     9 10.1094, 10.3739, 10.6606, 10.9677, 11.3090, 11.6453, 11.9704/
      data (ed4   (i),i=  64, 101)/
     1 12.3420, 12.7274, 13.1183, 13.5071, 13.9260, 14.3485, 14.7567,
     2 15.1673, 15.6148, 16.1120, 16.5619, 17.0790, 17.5650, 18.0543,
     3 18.5606, 19.0836, 19.5906, 20.0976, 20.6866, 21.3199, 21.9606,
     4 22.6276, 23.3600, 24.2345, 25.2986, 26.4143, 27.6010, 28.9135,
     5 30.5287, 31.9845, 33.8675, 36.0436, 38.5204, 42.0090, 46.0380,
     6 52.0335, 62.8465,167.5000/
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.0333,  0.0666,  0.0998,  0.1331,  0.1664,  0.1997,
     2  0.2329,  0.2662,  0.2995,  0.3328,  0.3660,  0.3993,  0.4326,
     3  0.4659,  0.4991,  0.5737,  0.6494,  0.7250,  0.8007,  0.8763,
     4  0.9520,  1.0403,  1.1504,  1.2605,  1.3706,  1.4807,  1.6040,
     5  1.7301,  1.8562,  1.9824,  2.1224,  2.2647,  2.4070,  2.5666,
     6  2.7586,  2.9506,  3.1580,  3.3707,  3.5919,  3.8260,  4.0657,
     7  4.3212,  4.5844,  4.8658,  5.1462,  5.4256,  5.7125,  6.0022,
     8  6.3106,  6.6086,  6.8900,  7.1564,  7.4132,  7.6763,  7.9427,
     9  8.2218,  8.5040,  8.7578,  9.0120,  9.2735,  9.5362,  9.8070/
      data (ed5   (i),i=  64, 101)/
     1 10.0835, 10.3743, 10.6839, 11.0078, 11.3333, 11.6809, 12.0511,
     2 12.4172, 12.7892, 13.1770, 13.5890, 14.0252, 14.5042, 14.9287,
     3 15.4203, 15.9617, 16.5414, 17.0878, 17.6256, 18.1937, 18.8189,
     4 19.4224, 19.9906, 20.5760, 21.3463, 22.1372, 22.9944, 23.9409,
     5 24.9725, 26.2488, 27.7451, 29.3941, 31.4538, 34.1653, 37.4372,
     6 42.6952, 51.8619,160.5000/
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.0276,  0.0553,  0.0829,  0.1106,  0.1382,  0.1659,
     2  0.1935,  0.2212,  0.2488,  0.2765,  0.3041,  0.3317,  0.3594,
     3  0.3870,  0.4147,  0.4423,  0.4700,  0.4976,  0.5582,  0.6219,
     4  0.6856,  0.7493,  0.8130,  0.8767,  0.9405,  1.0059,  1.0971,
     5  1.1882,  1.2794,  1.3705,  1.4617,  1.5644,  1.6757,  1.7869,
     6  1.8982,  2.0107,  2.1377,  2.2647,  2.3917,  2.5230,  2.6794,
     7  2.8358,  2.9923,  3.1772,  3.3636,  3.5558,  3.7636,  3.9714,
     8  4.1946,  4.4204,  4.6573,  4.9004,  5.1559,  5.4201,  5.6769,
     9  5.9304,  6.1974,  6.4697,  6.7269,  6.9823,  7.2557,  7.5289/
      data (ed6   (i),i=  64, 101)/
     1  7.7891,  8.0493,  8.3099,  8.5734,  8.8449,  9.1247,  9.4158,
     2  9.7215, 10.0343, 10.3568, 10.6967, 11.0529, 11.4227, 11.8219,
     3 12.2340, 12.6639, 13.1267, 13.6142, 14.1129, 14.6468, 15.2020,
     4 15.7864, 16.3651, 17.0393, 17.7199, 18.4014, 19.1176, 19.9402,
     5 20.8146, 21.7633, 22.8669, 24.1888, 25.6719, 27.7691, 30.4833,
     6 34.5744, 41.7298,129.0000/
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0250,  0.0500,  0.0750,  0.1000,  0.1251,  0.1501,
     2  0.1751,  0.2001,  0.2251,  0.2501,  0.2751,  0.3001,  0.3251,
     3  0.3501,  0.3752,  0.4002,  0.4252,  0.4502,  0.4752,  0.5005,
     4  0.5567,  0.6130,  0.6692,  0.7254,  0.7817,  0.8379,  0.8942,
     5  0.9504,  1.0093,  1.0878,  1.1662,  1.2447,  1.3231,  1.4016,
     6  1.4800,  1.5697,  1.6632,  1.7567,  1.8502,  1.9437,  2.0444,
     7  2.1557,  2.2671,  2.3785,  2.4898,  2.6295,  2.7719,  2.9144,
     8  3.0685,  3.2403,  3.4121,  3.5939,  3.7862,  3.9784,  4.1994,
     9  4.4240,  4.6594,  4.9002,  5.1521,  5.4117,  5.6668,  5.9196/
      data (ed7   (i),i=  64, 101)/
     1  6.1741,  6.4294,  6.6774,  6.9227,  7.1836,  7.4516,  7.7138,
     2  7.9747,  8.2784,  8.5788,  8.8589,  9.1664,  9.5019,  9.8262,
     3 10.1678, 10.5312, 10.9136, 11.3177, 11.7556, 12.2074, 12.6683,
     4 13.1814, 13.7490, 14.3375, 14.9205, 15.5867, 16.2489, 16.9897,
     5 17.7267, 18.5309, 19.4170, 20.4699, 21.6706, 23.1266, 25.3316,
     6 28.4387, 33.9453, 85.5000/
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0245,  0.0490,  0.0734,  0.0979,  0.1224,  0.1469,
     2  0.1714,  0.1958,  0.2203,  0.2448,  0.2693,  0.2937,  0.3182,
     3  0.3427,  0.3672,  0.3917,  0.4161,  0.4406,  0.4651,  0.4896,
     4  0.5320,  0.5877,  0.6434,  0.6991,  0.7548,  0.8105,  0.8662,
     5  0.9220,  0.9777,  1.0470,  1.1254,  1.2038,  1.2822,  1.3607,
     6  1.4391,  1.5207,  1.6135,  1.7063,  1.7992,  1.8920,  1.9848,
     7  2.0899,  2.1975,  2.3050,  2.4126,  2.5263,  2.6670,  2.8077,
     8  2.9484,  3.1085,  3.2798,  3.4512,  3.6379,  3.8308,  4.0260,
     9  4.2383,  4.4506,  4.6817,  4.9185,  5.1638,  5.4136,  5.6671/
      data (ed8   (i),i=  64, 101)/
     1  5.9226,  6.1771,  6.4313,  6.6835,  6.9350,  7.2000,  7.4697,
     2  7.7244,  7.9772,  8.2772,  8.5785,  8.8710,  9.1910,  9.5330,
     3  9.8765, 10.2366, 10.6102, 10.9934, 11.4148, 11.8555, 12.2843,
     4 12.7448, 13.2672, 13.8330, 14.4171, 15.0541, 15.7699, 16.5012,
     5 17.2841, 18.0981, 18.9852, 19.9876, 21.2239, 22.6045, 24.8076,
     6 28.0326, 33.6201, 96.0000/
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0214,  0.0429,  0.0643,  0.0858,  0.1072,  0.1286,
     2  0.1501,  0.1715,  0.1930,  0.2144,  0.2358,  0.2573,  0.2787,
     3  0.3002,  0.3216,  0.3430,  0.3645,  0.3859,  0.4074,  0.4288,
     4  0.4502,  0.4717,  0.4931,  0.5350,  0.5864,  0.6378,  0.6893,
     5  0.7407,  0.7922,  0.8436,  0.8950,  0.9465,  0.9979,  1.0674,
     6  1.1377,  1.2080,  1.2783,  1.3486,  1.4189,  1.4891,  1.5696,
     7  1.6519,  1.7342,  1.8164,  1.8987,  1.9810,  2.0753,  2.1731,
     8  2.2709,  2.3687,  2.4666,  2.5784,  2.6975,  2.8165,  2.9356,
     9  3.0674,  3.2142,  3.3609,  3.5095,  3.6922,  3.8749,  4.0669/
      data (ed9   (i),i=  64, 101)/
     1  4.2787,  4.4906,  4.7120,  4.9338,  5.1591,  5.3858,  5.6278,
     2  5.8856,  6.1447,  6.4050,  6.6783,  6.9591,  7.2379,  7.5163,
     3  7.7941,  8.0807,  8.3927,  8.7158,  9.0498,  9.4159,  9.8117,
     4 10.2564, 10.7350, 11.2293, 11.7703, 12.3987, 13.0630, 13.7348,
     5 14.4578, 15.4096, 16.4211, 17.4890, 18.7904, 20.1395, 21.9085,
     6 24.3727, 28.6159, 79.0000/
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0186,  0.0372,  0.0558,  0.0744,  0.0930,  0.1116,
     2  0.1302,  0.1488,  0.1674,  0.1860,  0.2046,  0.2232,  0.2418,
     3  0.2604,  0.2790,  0.2976,  0.3162,  0.3348,  0.3534,  0.3720,
     4  0.3906,  0.4092,  0.4278,  0.4464,  0.4650,  0.4836,  0.5055,
     5  0.5535,  0.6014,  0.6494,  0.6974,  0.7453,  0.7933,  0.8412,
     6  0.8892,  0.9371,  0.9851,  1.0474,  1.1163,  1.1853,  1.2542,
     7  1.3231,  1.3920,  1.4609,  1.5308,  1.6021,  1.6734,  1.7447,
     8  1.8160,  1.8872,  1.9585,  2.0329,  2.1115,  2.1902,  2.2688,
     9  2.3475,  2.4261,  2.5067,  2.6183,  2.7298,  2.8413,  2.9528/
      data (ed10  (i),i=  64, 101)/
     1  3.0783,  3.2139,  3.3495,  3.4851,  3.6421,  3.8018,  3.9614,
     2  4.1348,  4.3127,  4.4905,  4.7228,  4.9581,  5.2088,  5.4628,
     3  5.7078,  5.9512,  6.2403,  6.5451,  6.8767,  7.1982,  7.5146,
     4  7.8551,  8.2163,  8.6136,  9.0644,  9.4645, 10.0810, 10.6699,
     5 11.3417, 12.1957, 13.1398, 14.2668, 15.5740, 16.9307, 18.6483,
     6 20.9586, 25.3980, 55.0000/
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0165,  0.0329,  0.0494,  0.0658,  0.0823,  0.0988,
     2  0.1152,  0.1317,  0.1481,  0.1646,  0.1811,  0.1975,  0.2140,
     3  0.2304,  0.2469,  0.2633,  0.2798,  0.2963,  0.3127,  0.3292,
     4  0.3456,  0.3621,  0.3786,  0.3950,  0.4115,  0.4279,  0.4444,
     5  0.4609,  0.4773,  0.4938,  0.5275,  0.5718,  0.6160,  0.6602,
     6  0.7044,  0.7487,  0.7929,  0.8371,  0.8814,  0.9256,  0.9698,
     7  1.0202,  1.0838,  1.1473,  1.2109,  1.2744,  1.3379,  1.4015,
     8  1.4650,  1.5305,  1.5983,  1.6660,  1.7338,  1.8016,  1.8693,
     9  1.9371,  2.0056,  2.0832,  2.1607,  2.2383,  2.3159,  2.3935/
      data (ed11  (i),i=  64, 101)/
     1  2.4710,  2.5630,  2.6636,  2.7641,  2.8646,  2.9652,  3.0873,
     2  3.2207,  3.3542,  3.4877,  3.6309,  3.7750,  3.9192,  4.0800,
     3  4.2619,  4.4439,  4.6651,  4.9039,  5.1602,  5.4283,  5.7133,
     4  6.0046,  6.3134,  6.6612,  7.0599,  7.4153,  7.8234,  8.2704,
     5  8.7371,  9.2930, 10.0109, 10.6651, 11.6719, 12.6895, 14.2377,
     6 16.2048, 20.0432, 39.0000/
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0149,  0.0299,  0.0448,  0.0598,  0.0747,  0.0897,
     2  0.1046,  0.1196,  0.1345,  0.1495,  0.1644,  0.1793,  0.1943,
     3  0.2092,  0.2242,  0.2391,  0.2541,  0.2690,  0.2840,  0.2989,
     4  0.3139,  0.3288,  0.3437,  0.3587,  0.3736,  0.3886,  0.4035,
     5  0.4185,  0.4334,  0.4484,  0.4633,  0.4783,  0.4932,  0.5245,
     6  0.5695,  0.6145,  0.6594,  0.7044,  0.7494,  0.7944,  0.8393,
     7  0.8843,  0.9293,  0.9743,  1.0273,  1.0912,  1.1551,  1.2189,
     8  1.2828,  1.3467,  1.4105,  1.4744,  1.5380,  1.6015,  1.6649,
     9  1.7283,  1.7918,  1.8552,  1.9187,  1.9821,  2.0513,  2.1228/
      data (ed12  (i),i=  64, 101)/
     1  2.1943,  2.2658,  2.3373,  2.4088,  2.4803,  2.5723,  2.6721,
     2  2.7719,  2.8717,  2.9715,  3.1006,  3.2415,  3.3823,  3.5282,
     3  3.6993,  3.8703,  4.0368,  4.1889,  4.3409,  4.4930,  4.7769,
     4  5.0528,  5.2809,  5.5165,  5.9330,  6.2436,  6.5361,  6.8451,
     5  7.1991,  7.6573,  8.1776,  8.6266,  9.3399, 10.4358, 12.2513,
     6 14.0848, 16.7096, 30.5000/
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0138,  0.0277,  0.0415,  0.0553,  0.0691,  0.0830,
     2  0.0968,  0.1106,  0.1244,  0.1383,  0.1521,  0.1659,  0.1797,
     3  0.1936,  0.2074,  0.2212,  0.2350,  0.2489,  0.2627,  0.2765,
     4  0.2903,  0.3042,  0.3180,  0.3318,  0.3457,  0.3595,  0.3733,
     5  0.3871,  0.4010,  0.4148,  0.4286,  0.4424,  0.4563,  0.4701,
     6  0.4839,  0.4977,  0.5475,  0.6043,  0.6611,  0.7179,  0.7746,
     7  0.8314,  0.8882,  0.9450,  1.0017,  1.0547,  1.1077,  1.1607,
     8  1.2137,  1.2667,  1.3197,  1.3727,  1.4257,  1.4787,  1.5317,
     9  1.5847,  1.6377,  1.6907,  1.7437,  1.7967,  1.8497,  1.9027/
      data (ed13  (i),i=  64, 101)/
     1  1.9557,  2.0173,  2.1233,  2.2293,  2.3353,  2.4413,  2.5592,
     2  2.6917,  2.8242,  2.9567,  3.0892,  3.2217,  3.3542,  3.4867,
     3  3.6100,  3.7323,  3.8546,  3.9769,  4.1290,  4.2880,  4.4470,
     4  4.6325,  4.8312,  5.0300,  5.2287,  5.4275,  5.6443,  5.8714,
     5  6.2300,  6.6950,  7.0925,  7.4900,  8.2749,  8.8800, 10.4597,
     6 11.9099, 13.4099, 21.0000/
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.0087,  0.0175,  0.0263,  0.0350,  0.0438,  0.0525,
     2  0.0613,  0.0700,  0.0787,  0.0875,  0.0962,  0.1050,  0.1137,
     3  0.1225,  0.1312,  0.1400,  0.1487,  0.1575,  0.1662,  0.1750,
     4  0.1837,  0.1925,  0.2012,  0.2100,  0.2187,  0.2275,  0.2362,
     5  0.2450,  0.2537,  0.2625,  0.2712,  0.2800,  0.2887,  0.2975,
     6  0.3062,  0.3150,  0.3237,  0.3325,  0.3412,  0.3500,  0.3587,
     7  0.3675,  0.3762,  0.3850,  0.3937,  0.4025,  0.4112,  0.4200,
     8  0.4287,  0.4375,  0.4462,  0.4550,  0.4637,  0.4725,  0.4812,
     9  0.4900,  0.4987,  0.5450,  0.5975,  0.6500,  0.7025,  0.7550/
      data (ed14  (i),i=  64, 101)/
     1  0.8075,  0.8600,  0.9125,  0.9650,  1.0350,  1.1400,  1.2450,
     2  1.3500,  1.4550,  1.6200,  1.8300,  2.0400,  2.2500,  2.4600,
     3  2.6700,  2.8800,  3.0900,  3.3000,  3.5100,  3.7200,  3.9300,
     4  4.1400,  4.3500,  4.5300,  4.6350,  4.7400,  4.8450,  4.9500,
     5  5.2750,  5.8000,  6.3250,  6.8500,  7.3750,  7.9000,  8.4250,
     6  8.9500,  9.4750, 10.0000/
       end
      block data deg2b
!          block data which gives de (energy loss in scinti for
!          a standard gamma 1ry shower.  scinti is assumed under
!          0.1cm fe. scinti is 3.5 cm thick).
!
!          cos=0.8
!
!       from e100v at 600 g/cm**2:      fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
      include "Zdeg2"
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.2573,  0.5151,  0.7838,  1.0424,  1.2598,  1.4773,
     2  1.7124,  1.9496,  2.1998,  2.4535,  2.7486,  3.0578,  3.3899,
     3  3.7304,  4.0994,  4.5700,  5.1024,  5.5167,  5.9138,  6.2383,
     4  6.5237,  6.6929,  6.8620,  7.0106,  7.0684,  7.1262,  7.1840,
     5  7.2418,  7.2996,  7.3574,  7.4152,  7.4730,  7.5239,  7.5688,
     6  7.6137,  7.6586,  7.7035,  7.7483,  7.7932,  7.8381,  7.8830,
     7  7.9278,  7.9727,  8.0179,  8.0634,  8.1090,  8.1545,  8.2000,
     8  8.2456,  8.2911,  8.3367,  8.3822,  8.4278,  8.4733,  8.5276,
     9  8.5943,  8.6610,  8.7276,  8.7943,  8.8609,  8.9276,  8.9943/
      data (ed1   (i),i=  64, 101)/
     1  9.0693,  9.1451,  9.2208,  9.2966,  9.3724,  9.4482,  9.5351,
     2  9.6458,  9.7564,  9.8671,  9.9778, 10.1141, 10.2568, 10.3995,
     3 10.5520, 10.7276, 10.9032, 11.0965, 11.3113, 11.5318, 11.7928,
     4 12.0671, 12.3933, 12.7926, 13.2450, 13.6808, 14.0969, 14.5905,
     5 15.0798, 15.5482, 16.0257, 16.6885, 17.2325, 18.0426, 18.8906,
     6 20.1514, 23.0778, 35.0000/
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.1879,  0.3759,  0.5812,  0.8204,  1.0641,  1.3215,
     2  1.5672,  1.7865,  2.0053,  2.2095,  2.4136,  2.6469,  2.9015,
     3  3.2045,  3.5346,  3.8382,  4.1495,  4.4695,  4.7677,  5.0637,
     4  5.3597,  5.6888,  6.0311,  6.2655,  6.5000,  6.6273,  6.7546,
     5  6.8819,  7.0046,  7.0676,  7.1305,  7.1935,  7.2565,  7.3195,
     6  7.3824,  7.4454,  7.5064,  7.5544,  7.6025,  7.6505,  7.6985,
     7  7.7466,  7.7946,  7.8426,  7.8907,  7.9387,  7.9867,  8.0398,
     8  8.0947,  8.1496,  8.2046,  8.2595,  8.3145,  8.3694,  8.4244,
     9  8.4793,  8.5394,  8.6025,  8.6656,  8.7288,  8.7919,  8.8551/
      data (ed2   (i),i=  64, 101)/
     1  8.9182,  8.9814,  9.0609,  9.1474,  9.2338,  9.3202,  9.4066,
     2  9.4931,  9.6037,  9.7165,  9.8292,  9.9420, 10.0608, 10.1861,
     3 10.3114, 10.4367, 10.5945, 10.7855, 10.9764, 11.2140, 11.4581,
     4 11.7204, 11.9865, 12.2584, 12.5566, 13.0546, 13.5096, 13.9481,
     5 14.5494, 15.1490, 15.7574, 16.4302, 16.9795, 17.6647, 18.5663,
     6 19.8670, 22.9147, 41.0000/
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.1900,  0.3800,  0.5861,  0.8198,  1.0500,  1.2684,
     2  1.4868,  1.6961,  1.9047,  2.1095,  2.3109,  2.5147,  2.7532,
     3  2.9916,  3.2562,  3.5206,  3.7719,  4.0354,  4.4185,  4.7520,
     4  5.0787,  5.4275,  5.8137,  6.0975,  6.2815,  6.4655,  6.5935,
     5  6.7087,  6.8238,  6.9389,  7.0323,  7.1010,  7.1697,  7.2385,
     6  7.3072,  7.3759,  7.4447,  7.5095,  7.5582,  7.6069,  7.6556,
     7  7.7042,  7.7529,  7.8016,  7.8503,  7.8990,  7.9477,  7.9964,
     8  8.0514,  8.1069,  8.1624,  8.2179,  8.2734,  8.3289,  8.3844,
     9  8.4399,  8.4955,  8.5631,  8.6318,  8.7006,  8.7693,  8.8381/
      data (ed3   (i),i=  64, 101)/
     1  8.9068,  8.9755,  9.0568,  9.1450,  9.2332,  9.3214,  9.4095,
     2  9.4977,  9.6069,  9.7166,  9.8263,  9.9360, 10.0560, 10.1903,
     3 10.3246, 10.4590, 10.6449, 10.8536, 11.0704, 11.3064, 11.5448,
     4 11.7934, 12.0617, 12.4268, 12.7832, 13.1415, 13.5076, 13.9250,
     5 14.4078, 14.9882, 15.4322, 16.0444, 16.6430, 17.3287, 18.4305,
     6 19.8031, 22.3857, 40.5000/
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.1641,  0.3282,  0.4923,  0.6861,  0.8814,  1.0778,
     2  1.2761,  1.4743,  1.6472,  1.8162,  1.9853,  2.1740,  2.3645,
     3  2.5584,  2.7607,  2.9631,  3.2008,  3.4465,  3.6807,  3.9118,
     4  4.1666,  4.4359,  4.7238,  5.0184,  5.3284,  5.6330,  5.9312,
     5  6.1347,  6.3098,  6.4850,  6.5995,  6.7082,  6.8170,  6.9258,
     6  7.0224,  7.0928,  7.1631,  7.2335,  7.3039,  7.3742,  7.4446,
     7  7.5121,  7.5689,  7.6258,  7.6826,  7.7395,  7.7963,  7.8532,
     8  7.9100,  7.9669,  8.0252,  8.0854,  8.1457,  8.2060,  8.2662,
     9  8.3265,  8.3868,  8.4470,  8.5089,  8.5822,  8.6554,  8.7287/
      data (ed4   (i),i=  64, 101)/
     1  8.8020,  8.8753,  8.9485,  9.0260,  9.1134,  9.2008,  9.2881,
     2  9.3755,  9.4629,  9.5651,  9.6783,  9.7915,  9.9047, 10.0246,
     3 10.1802, 10.3358, 10.4914, 10.6902, 10.8915, 11.1012, 11.3206,
     4 11.5527, 11.8420, 12.1190, 12.3811, 12.7032, 13.0962, 13.5743,
     5 14.0676, 14.5980, 15.1532, 15.8299, 16.4800, 17.2968, 18.4784,
     6 19.9943, 22.5401, 38.0000/
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.1469,  0.2939,  0.4408,  0.5924,  0.7471,  0.9019,
     2  1.0608,  1.2269,  1.3930,  1.5524,  1.6997,  1.8469,  1.9941,
     3  2.1357,  2.2770,  2.4183,  2.5726,  2.7449,  2.9171,  3.1113,
     4  3.3259,  3.5375,  3.7368,  3.9361,  4.1439,  4.3559,  4.5769,
     5  4.8172,  5.0574,  5.2969,  5.5331,  5.7510,  5.9689,  6.1414,
     6  6.3064,  6.4713,  6.5837,  6.6851,  6.7865,  6.8878,  6.9892,
     7  7.0701,  7.1486,  7.2271,  7.3056,  7.3841,  7.4626,  7.5347,
     8  7.6009,  7.6671,  7.7334,  7.7996,  7.8658,  7.9321,  7.9983,
     9  8.0678,  8.1374,  8.2070,  8.2766,  8.3462,  8.4158,  8.4853/
      data (ed5   (i),i=  64, 101)/
     1  8.5643,  8.6457,  8.7271,  8.8085,  8.8900,  8.9714,  9.0625,
     2  9.1588,  9.2551,  9.3515,  9.4478,  9.5622,  9.6980,  9.8339,
     3  9.9697, 10.1243, 10.2843, 10.4444, 10.6366, 10.8460, 11.0704,
     4 11.3363, 11.6063, 11.8827, 12.2034, 12.5566, 12.9099, 13.3236,
     5 13.7715, 14.2890, 14.8150, 15.3595, 16.1091, 16.9421, 17.8909,
     6 19.2940, 21.6796, 36.5000/
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.1112,  0.2224,  0.3337,  0.4449,  0.5585,  0.6746,
     2  0.7906,  0.9066,  1.0244,  1.1497,  1.2751,  1.4004,  1.5215,
     3  1.6267,  1.7319,  1.8370,  1.9422,  2.0487,  2.1571,  2.2654,
     4  2.3738,  2.4821,  2.6137,  2.7499,  2.8861,  3.0255,  3.1811,
     5  3.3368,  3.4925,  3.6601,  3.8283,  3.9965,  4.1813,  4.3665,
     6  4.5619,  4.7836,  5.0052,  5.2170,  5.4288,  5.6394,  5.8494,
     7  6.0397,  6.1799,  6.3202,  6.4605,  6.5756,  6.6809,  6.7862,
     8  6.8915,  6.9968,  7.0836,  7.1699,  7.2561,  7.3423,  7.4285,
     9  7.5145,  7.5990,  7.6836,  7.7682,  7.8528,  7.9373,  8.0226/
      data (ed6   (i),i=  64, 101)/
     1  8.1101,  8.1975,  8.2849,  8.3723,  8.4598,  8.5548,  8.6564,
     2  8.7580,  8.8596,  8.9612,  9.0710,  9.1858,  9.3006,  9.4154,
     3  9.5411,  9.6978,  9.8544, 10.0129, 10.1958, 10.3787, 10.5837,
     4 10.8318, 11.0904, 11.3709, 11.6870, 12.0357, 12.4042, 12.8235,
     5 13.2989, 13.8359, 14.4124, 15.0972, 15.7295, 16.4098, 17.3542,
     6 18.8141, 20.9159, 38.5000/
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0805,  0.1611,  0.2416,  0.3222,  0.4027,  0.4833,
     2  0.5767,  0.6734,  0.7701,  0.8669,  0.9636,  1.0605,  1.1575,
     3  1.2545,  1.3514,  1.4484,  1.5366,  1.6149,  1.6932,  1.7715,
     4  1.8498,  1.9281,  2.0070,  2.0941,  2.1811,  2.2681,  2.3551,
     5  2.4421,  2.5375,  2.6496,  2.7616,  2.8736,  2.9856,  3.1009,
     6  3.2165,  3.3322,  3.4479,  3.5885,  3.7496,  3.9107,  4.0740,
     7  4.2399,  4.4058,  4.5739,  4.7448,  4.9158,  5.0970,  5.2881,
     8  5.4792,  5.6639,  5.8478,  6.0271,  6.1843,  6.3415,  6.4987,
     9  6.6164,  6.7339,  6.8513,  6.9687,  7.0797,  7.1883,  7.2968/
      data (ed7   (i),i=  64, 101)/
     1  7.4054,  7.5124,  7.6087,  7.7050,  7.8012,  7.8975,  7.9937,
     2  8.1111,  8.2300,  8.3488,  8.4677,  8.5855,  8.7029,  8.8204,
     3  8.9378,  9.0754,  9.2359,  9.3963,  9.5666,  9.7549,  9.9432,
     4 10.1612, 10.3918, 10.6286, 10.8708, 11.1398, 11.4397, 11.8146,
     5 12.2547, 12.7941, 13.4267, 14.0980, 14.8348, 15.6297, 16.5820,
     6 17.9386, 19.9419, 41.5000/
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0783,  0.1567,  0.2350,  0.3134,  0.3917,  0.4700,
     2  0.5568,  0.6488,  0.7408,  0.8328,  0.9247,  1.0174,  1.1132,
     3  1.2090,  1.3048,  1.4005,  1.4963,  1.5734,  1.6497,  1.7260,
     4  1.8024,  1.8787,  1.9550,  2.0350,  2.1204,  2.2058,  2.2911,
     5  2.3765,  2.4618,  2.5597,  2.6677,  2.7757,  2.8837,  2.9917,
     6  3.1066,  3.2221,  3.3376,  3.4530,  3.5869,  3.7335,  3.8801,
     7  4.0294,  4.1911,  4.3527,  4.5157,  4.6917,  4.8678,  5.0477,
     8  5.2389,  5.4301,  5.6226,  5.8159,  6.0073,  6.1606,  6.3139,
     9  6.4672,  6.5938,  6.7132,  6.8325,  6.9519,  7.0643,  7.1721/
      data (ed8   (i),i=  64, 101)/
     1  7.2799,  7.3877,  7.4954,  7.5950,  7.6941,  7.7933,  7.8925,
     2  7.9916,  8.1093,  8.2286,  8.3480,  8.4673,  8.5893,  8.7122,
     3  8.8351,  8.9581,  9.1085,  9.2731,  9.4378,  9.6243,  9.8241,
     4 10.0283, 10.2644, 10.5005, 10.7607, 11.0264, 11.3537, 11.7201,
     5 12.1481, 12.6744, 13.2796, 13.9712, 14.7417, 15.5301, 16.4904,
     6 17.7968, 19.6727, 41.5000/
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0693,  0.1387,  0.2080,  0.2773,  0.3467,  0.4160,
     2  0.4853,  0.5575,  0.6304,  0.7034,  0.7763,  0.8493,  0.9222,
     3  0.9952,  1.0655,  1.1356,  1.2058,  1.2759,  1.3461,  1.4162,
     4  1.4863,  1.5483,  1.6083,  1.6684,  1.7284,  1.7884,  1.8484,
     5  1.9085,  1.9685,  2.0338,  2.1050,  2.1762,  2.2474,  2.3187,
     6  2.3899,  2.4611,  2.5422,  2.6354,  2.7286,  2.8217,  2.9149,
     7  3.0084,  3.1052,  3.2020,  3.2988,  3.3956,  3.4924,  3.6122,
     8  3.7340,  3.8558,  3.9776,  4.1158,  4.2577,  4.3997,  4.5455,
     9  4.7005,  4.8555,  5.0130,  5.2031,  5.3932,  5.5734,  5.7407/
      data (ed9   (i),i=  64, 101)/
     1  5.9081,  6.0743,  6.2391,  6.4039,  6.5614,  6.7088,  6.8563,
     2  7.0035,  7.1426,  7.2817,  7.4208,  7.5598,  7.6984,  7.8371,
     3  7.9757,  8.1381,  8.3055,  8.4729,  8.6498,  8.8286,  9.0089,
     4  9.2232,  9.4376,  9.6973,  9.9755, 10.3247, 10.6808, 11.0402,
     5 11.4293, 11.9142, 12.5240, 13.2442, 14.0495, 14.9062, 16.0288,
     6 17.5638, 20.1651, 38.5000/
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0606,  0.1212,  0.1819,  0.2425,  0.3031,  0.3637,
     2  0.4243,  0.4849,  0.5442,  0.6029,  0.6616,  0.7204,  0.7791,
     3  0.8379,  0.8966,  0.9553,  1.0162,  1.0837,  1.1512,  1.2188,
     4  1.2863,  1.3538,  1.4214,  1.4889,  1.5469,  1.6031,  1.6593,
     5  1.7155,  1.7717,  1.8279,  1.8840,  1.9402,  1.9964,  2.0537,
     6  2.1110,  2.1683,  2.2256,  2.2829,  2.3403,  2.3976,  2.4549,
     7  2.5162,  2.5925,  2.6687,  2.7449,  2.8211,  2.8973,  2.9736,
     8  3.0551,  3.1395,  3.2238,  3.3082,  3.3925,  3.4769,  3.5868,
     9  3.7062,  3.8257,  3.9451,  4.0607,  4.1731,  4.2855,  4.3979/
      data (ed10  (i),i=  64, 101)/
     1  4.5127,  4.6528,  4.7928,  4.9329,  5.0903,  5.2636,  5.4370,
     2  5.6392,  5.8579,  6.0634,  6.2445,  6.4256,  6.6060,  6.7859,
     3  6.9659,  7.1363,  7.3045,  7.4728,  7.6518,  7.8329,  8.0145,
     4  8.2028,  8.3910,  8.5998,  8.8367,  9.1040,  9.4384,  9.7209,
     5  9.9917, 10.4306, 10.9442, 11.5663, 12.2526, 13.0426, 14.1380,
     6 15.9148, 17.9567, 32.5000/
!     data (ed11  (i),i=   1,  63)/
!    1  0.0000,  0.0517,  0.1034,  0.1551,  0.2069,  0.2586,  0.3103,
!    2  0.3620,  0.4137,  0.4654,  0.5202,  0.5812,  0.6421,  0.7031,
!    3  0.7640,  0.8250,  0.8860,  0.9469,  1.0069,  1.0604,  1.1138,
!    4  1.1673,  1.2207,  1.2742,  1.3276,  1.3811,  1.4345,  1.4880,
!    5  1.5372,  1.5853,  1.6334,  1.6815,  1.7295,  1.7776,  1.8257,
!    6  1.8737,  1.9218,  1.9699,  2.0210,  2.0772,  2.1333,  2.1895,
!    7  2.2457,  2.3019,  2.3580,  2.4142,  2.4704,  2.5296,  2.5921,
!    8  2.6547,  2.7172,  2.7798,  2.8424,  2.9049,  2.9675,  3.0393,
!    9  3.1211,  3.2030,  3.2849,  3.3667,  3.4486,  3.5391,  3.6445/
!     data (ed11  (i),i=  64, 101)/
!    1  3.7498,  3.8551,  3.9605,  4.0734,  4.1908,  4.3082,  4.4256,
!    2  4.5618,  4.7303,  4.8988,  5.0970,  5.3398,  5.5542,  5.7133,
!    3  5.8725,  6.0347,  6.2094,  6.3841,  6.5709,  6.7816,  6.9923,
!    4  7.2339,  7.4767,  7.7123,  7.9471,  8.1947,  8.4460,  8.7250,
!    5  9.0151,  9.3921,  9.8525, 10.4785, 11.2767, 12.0922, 13.5060,
!    6 15.2191, 18.2934, 32.0000/
!        above one seems too much fluctuated. replaced by ed12
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0587,  0.1174,  0.1762,  0.2349,  0.2936,  0.3523,
     2  0.4110,  0.4697,  0.5317,  0.5971,  0.6626,  0.7280,  0.7934,
     3  0.8589,  0.9243,  0.9897,  1.0501,  1.1096,  1.1691,  1.2286,
     4  1.2881,  1.3475,  1.4070,  1.4665,  1.5213,  1.5700,  1.6187,
     5  1.6674,  1.7162,  1.7649,  1.8136,  1.8623,  1.9111,  1.9598,
     6  2.0085,  2.0572,  2.1060,  2.1547,  2.2034,  2.2521,  2.3008,
     7  2.3496,  2.3983,  2.4470,  2.4957,  2.5536,  2.6123,  2.6710,
     8  2.7297,  2.7885,  2.8472,  2.9059,  2.9646,  3.0371,  3.1306,
     9  3.2241,  3.3175,  3.4110,  3.5046,  3.6000,  3.6954,  3.7908/
      data (ed11  (i),i=  64, 101)/
     1  3.8862,  3.9817,  4.0949,  4.2123,  4.3297,  4.4472,  4.5787,
     2  4.7219,  4.8650,  5.0074,  5.1383,  5.2691,  5.4000,  5.5469,
     3  5.7461,  5.9452,  6.1328,  6.3160,  6.4992,  6.6824,  6.8656,
     4  7.0393,  7.1871,  7.3348,  7.4826,  7.7126,  7.9537,  8.2466,
     5  8.5709,  8.9872,  9.5400,  9.9563, 10.9333, 11.6966, 12.6132,
     6 13.9599, 15.8549, 24.0000/
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0587,  0.1174,  0.1762,  0.2349,  0.2936,  0.3523,
     2  0.4110,  0.4697,  0.5317,  0.5971,  0.6626,  0.7280,  0.7934,
     3  0.8589,  0.9243,  0.9897,  1.0501,  1.1096,  1.1691,  1.2286,
     4  1.2881,  1.3475,  1.4070,  1.4665,  1.5213,  1.5700,  1.6187,
     5  1.6674,  1.7162,  1.7649,  1.8136,  1.8623,  1.9111,  1.9598,
     6  2.0085,  2.0572,  2.1060,  2.1547,  2.2034,  2.2521,  2.3008,
     7  2.3496,  2.3983,  2.4470,  2.4957,  2.5536,  2.6123,  2.6710,
     8  2.7297,  2.7885,  2.8472,  2.9059,  2.9646,  3.0371,  3.1306,
     9  3.2241,  3.3175,  3.4110,  3.5046,  3.6000,  3.6954,  3.7908/
      data (ed12  (i),i=  64, 101)/
     1  3.8862,  3.9817,  4.0949,  4.2123,  4.3297,  4.4472,  4.5787,
     2  4.7219,  4.8650,  5.0074,  5.1383,  5.2691,  5.4000,  5.5469,
     3  5.7461,  5.9452,  6.1328,  6.3160,  6.4992,  6.6824,  6.8656,
     4  7.0393,  7.1871,  7.3348,  7.4826,  7.7126,  7.9537,  8.2466,
     5  8.5709,  8.9872,  9.5400,  9.9563, 10.9333, 11.6966, 12.6132,
     6 13.9599, 15.8549, 24.0000/
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0514,  0.1029,  0.1543,  0.2057,  0.2571,  0.3086,
     2  0.3600,  0.4114,  0.4629,  0.5118,  0.5541,  0.5965,  0.6388,
     3  0.6812,  0.7235,  0.7659,  0.8082,  0.8506,  0.8929,  0.9353,
     4  0.9776,  1.0309,  1.0964,  1.1618,  1.2273,  1.2927,  1.3582,
     5  1.4236,  1.4891,  1.5600,  1.6320,  1.7040,  1.7760,  1.8480,
     6  1.9200,  1.9920,  2.0427,  2.0907,  2.1387,  2.1867,  2.2347,
     7  2.2827,  2.3307,  2.3787,  2.4267,  2.4747,  2.5378,  2.6178,
     8  2.6978,  2.7778,  2.8578,  2.9378,  3.0100,  3.0550,  3.1000,
     9  3.1450,  3.1900,  3.2350,  3.2800,  3.3250,  3.3700,  3.4150/
      data (ed13  (i),i=  64, 101)/
     1  3.4600,  3.5100,  3.6000,  3.6900,  3.7800,  3.8700,  3.9600,
     2  4.0308,  4.0861,  4.1415,  4.1969,  4.2523,  4.3077,  4.3631,
     3  4.4185,  4.4738,  4.6266,  4.8666,  5.1066,  5.3466,  5.5866,
     4  5.8266,  6.0400,  6.1840,  6.3280,  6.4720,  7.0200,  7.2000,
     5  7.3800,  7.7399,  8.2300,  8.6799,  9.3999, 10.1199, 10.8399,
     6 11.7997, 14.8398, 22.0000/
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.1050,  0.2100,  0.3150,  0.4200,  0.5250,  0.6300,
     2  0.7350,  0.8400,  0.9450,  1.0500,  1.1550,  1.2600,  1.3650,
     3  1.4700,  1.5125,  1.5300,  1.5475,  1.5650,  1.5825,  1.6000,
     4  1.6175,  1.6350,  1.6525,  1.6700,  1.6875,  1.7050,  1.7225,
     5  1.7400,  1.7575,  1.7750,  1.7925,  1.8100,  1.8275,  1.8450,
     6  1.8625,  1.8800,  1.8975,  1.9150,  1.9325,  1.9500,  1.9675,
     7  1.9850,  2.0100,  2.0800,  2.1500,  2.2200,  2.2900,  2.3600,
     8  2.4300,  2.5000,  2.5700,  2.6400,  2.7100,  2.7800,  2.8500,
     9  2.9200,  2.9900,  3.0900,  3.1950,  3.3000,  3.4050,  3.5100/
      data (ed14  (i),i=  64, 101)/
     1  3.6150,  3.7200,  3.8250,  3.9300,  4.0350,  4.1400,  4.2450,
     2  4.3500,  4.4550,  4.5400,  4.6100,  4.6800,  4.7500,  4.8200,
     3  4.8900,  4.9600,  5.0300,  5.1000,  5.1700,  5.2400,  5.3100,
     4  5.3800,  5.4500,  5.5100,  5.5450,  5.5800,  5.6150,  5.6500,
     5  5.6850,  5.7200,  5.7550,  5.7900,  5.8250,  5.8600,  5.8950,
     6  5.9300,  5.9650,  6.0000/
!
       end
      block data deg3b
!          block data which gives de (energy loss in scinti for
!          a standard gamma 1ry shower.  scinti is assumed under
!          0.1cm fe. scinti is 3.5 cm thick).
!
!          cos=0.7
!
!       from e100i2 at 500 g/cm**2:      fe.1sci3.5 hscint=t
!       for u=0 to 1 step .01  de=in mev
      include "Zdeg3"
      data (ed1   (i),i=   1,  63)/
     1  0.0000,  0.2138,  0.4276,  0.6993,  1.0007,  1.3232,  1.5934,
     2  1.7999,  2.0082,  2.2671,  2.5253,  2.7772,  3.0400,  3.3869,
     3  3.7065,  4.0129,  4.3193,  4.6677,  5.0746,  5.4742,  5.9914,
     4  6.4521,  6.7994,  7.1051,  7.3677,  7.5773,  7.7331,  7.8889,
     5  8.0256,  8.1149,  8.2041,  8.2934,  8.3826,  8.4719,  8.5415,
     6  8.6022,  8.6629,  8.7236,  8.7843,  8.8449,  8.9056,  8.9663,
     7  9.0234,  9.0761,  9.1288,  9.1814,  9.2341,  9.2868,  9.3395,
     8  9.3922,  9.4448,  9.4975,  9.5651,  9.6335,  9.7018,  9.7702,
     9  9.8385,  9.9069,  9.9752, 10.0542, 10.1393, 10.2245, 10.3096/
      data (ed1   (i),i=  64, 101)/
     1 10.3947, 10.4798, 10.5734, 10.6697, 10.7659, 10.8622, 10.9584,
     2 11.0810, 11.2235, 11.3660, 11.5105, 11.6856, 11.8607, 12.0437,
     3 12.2575, 12.4713, 12.7150, 12.9635, 13.2306, 13.5014, 13.8766,
     4 14.2285, 14.6128, 15.1516, 15.6962, 16.3087, 16.8716, 17.3369,
     5 18.0010, 18.5733, 19.1076, 19.6222, 20.3731, 21.3866, 22.2370,
     6 24.0326, 27.1591, 50.0000/
      data (ed2   (i),i=   1,  63)/
     1  0.0000,  0.2181,  0.4363,  0.6557,  0.8756,  1.0830,  1.2741,
     2  1.4651,  1.6529,  1.8398,  2.0291,  2.2320,  2.4349,  2.6677,
     3  2.9146,  3.1571,  3.3972,  3.6762,  3.9841,  4.3761,  4.7535,
     4  5.1335,  5.5297,  5.8611,  6.2269,  6.5640,  6.7768,  6.9896,
     5  7.2024,  7.4152,  7.5921,  7.7452,  7.8982,  8.0266,  8.1059,
     6  8.1852,  8.2645,  8.3439,  8.4232,  8.5020,  8.5665,  8.6310,
     7  8.6954,  8.7599,  8.8244,  8.8889,  8.9533,  9.0175,  9.0809,
     8  9.1442,  9.2076,  9.2710,  9.3344,  9.3978,  9.4611,  9.5306,
     9  9.6097,  9.6887,  9.7678,  9.8469,  9.9260, 10.0057, 10.0950/
      data (ed2   (i),i=  64, 101)/
     1 10.1844, 10.2737, 10.3630, 10.4524, 10.5529, 10.6662, 10.7795,
     2 10.8928, 11.0077, 11.1492, 11.2907, 11.4322, 11.6002, 11.7926,
     3 11.9851, 12.1509, 12.3145, 12.4781, 12.7290, 12.9934, 13.3003,
     4 13.5968, 13.8723, 14.1898, 14.5537, 14.9900, 15.5627, 16.1532,
     5 16.7528, 17.2413, 17.7854, 18.3961, 19.0771, 19.9538, 21.3733,
     6 22.9053, 25.4747, 40.5000/
      data (ed3   (i),i=   1,  63)/
     1  0.0000,  0.1982,  0.3965,  0.6125,  0.8479,  1.0764,  1.2925,
     2  1.5088,  1.7285,  1.9482,  2.1599,  2.3692,  2.5790,  2.7900,
     3  3.0010,  3.2343,  3.4676,  3.7610,  4.0599,  4.3434,  4.6494,
     4  4.9831,  5.3382,  5.6734,  5.9911,  6.2417,  6.4905,  6.7167,
     5  6.9420,  7.1332,  7.3126,  7.4919,  7.6346,  7.7756,  7.9166,
     6  8.0382,  8.1317,  8.2252,  8.3187,  8.4122,  8.5044,  8.5762,
     7  8.6480,  8.7199,  8.7917,  8.8636,  8.9354,  9.0068,  9.0738,
     8  9.1409,  9.2080,  9.2751,  9.3422,  9.4093,  9.4764,  9.5525,
     9  9.6337,  9.7148,  9.7959,  9.8770,  9.9581, 10.0440, 10.1349/
      data (ed3   (i),i=  64, 101)/
     1 10.2258, 10.3168, 10.4077, 10.4986, 10.6042, 10.7101, 10.8160,
     2 10.9219, 11.0351, 11.1689, 11.3028, 11.4366, 11.6035, 11.8003,
     3 11.9970, 12.2546, 12.5129, 12.7689, 13.0264, 13.2982, 13.5772,
     4 13.8768, 14.2126, 14.6036, 15.1224, 15.6461, 16.1167, 16.6637,
     5 17.2094, 17.8017, 18.3964, 19.0826, 19.8689, 20.7824, 21.9573,
     6 23.7723, 26.7721, 52.0000/
      data (ed4   (i),i=   1,  63)/
     1  0.0000,  0.1819,  0.3638,  0.5489,  0.7439,  0.9389,  1.1268,
     2  1.3114,  1.4961,  1.6674,  1.8384,  2.0095,  2.1818,  2.3540,
     3  2.5330,  2.7497,  2.9663,  3.2133,  3.4659,  3.7342,  4.0044,
     4  4.2410,  4.4776,  4.7659,  5.0602,  5.3575,  5.6484,  5.9334,
     5  6.1762,  6.4061,  6.6163,  6.8129,  7.0072,  7.1567,  7.3062,
     6  7.4557,  7.5903,  7.7186,  7.8469,  7.9751,  8.0772,  8.1730,
     7  8.2687,  8.3645,  8.4603,  8.5444,  8.6204,  8.6963,  8.7722,
     8  8.8481,  8.9241,  9.0000,  9.0753,  9.1507,  9.2260,  9.3013,
     9  9.3767,  9.4520,  9.5289,  9.6086,  9.6882,  9.7679,  9.8475/
      data (ed4   (i),i=  64, 101)/
     1  9.9272, 10.0079, 10.1000, 10.1922, 10.2843, 10.3765, 10.4686,
     2 10.5792, 10.6992, 10.8193, 10.9394, 11.0783, 11.2366, 11.3949,
     3 11.5593, 11.7359, 11.9125, 12.1123, 12.3349, 12.5669, 12.8262,
     4 13.1132, 13.4565, 13.8019, 14.1875, 14.6255, 15.0791, 15.6364,
     5 16.1986, 16.7837, 17.3853, 18.1380, 18.8602, 19.7829, 20.8779,
     6 22.7039, 25.3393, 46.5000/
      data (ed5   (i),i=   1,  63)/
     1  0.0000,  0.1371,  0.2741,  0.4112,  0.5563,  0.7162,  0.8762,
     2  1.0394,  1.2136,  1.3879,  1.5514,  1.6958,  1.8401,  1.9844,
     3  2.1370,  2.2907,  2.4444,  2.6176,  2.8018,  2.9861,  3.1706,
     4  3.3552,  3.5472,  3.7660,  3.9847,  4.2172,  4.4507,  4.6917,
     5  4.9347,  5.2061,  5.4879,  5.7600,  6.0253,  6.2424,  6.4596,
     6  6.6402,  6.8124,  6.9846,  7.1363,  7.2858,  7.4354,  7.5651,
     7  7.6796,  7.7942,  7.9087,  8.0202,  8.1196,  8.2191,  8.3185,
     8  8.4180,  8.5158,  8.6059,  8.6959,  8.7860,  8.8761,  8.9662,
     9  9.0560,  9.1456,  9.2353,  9.3249,  9.4146,  9.5046,  9.6031/
      data (ed5   (i),i=  64, 101)/
     1  9.7015,  9.8000,  9.8985,  9.9970, 10.1054, 10.2141, 10.3228,
     2 10.4315, 10.5518, 10.6918, 10.8319, 10.9719, 11.1263, 11.2843,
     3 11.4423, 11.6209, 11.8114, 12.0021, 12.2152, 12.4282, 12.6892,
     4 12.9746, 13.2536, 13.5390, 13.8782, 14.2517, 14.6612, 15.1059,
     5 15.5824, 16.1326, 16.7768, 17.4461, 18.2663, 19.2516, 20.4516,
     6 22.1127, 25.0544, 48.5000/
      data (ed6   (i),i=   1,  63)/
     1  0.0000,  0.1169,  0.2338,  0.3507,  0.4676,  0.5923,  0.7200,
     2  0.8477,  0.9754,  1.0992,  1.2221,  1.3449,  1.4678,  1.5811,
     3  1.6909,  1.8008,  1.9106,  2.0221,  2.1406,  2.2591,  2.3776,
     4  2.4961,  2.6315,  2.7673,  2.9032,  3.0453,  3.2026,  3.3599,
     5  3.5180,  3.6833,  3.8486,  4.0158,  4.2032,  4.3906,  4.5825,
     6  4.7806,  4.9787,  5.2249,  5.4769,  5.6993,  5.9188,  6.1241,
     7  6.3211,  6.5149,  6.6766,  6.8383,  7.0000,  7.1442,  7.2884,
     8  7.4325,  7.5650,  7.6871,  7.8093,  7.9314,  8.0520,  8.1707,
     9  8.2893,  8.4079,  8.5239,  8.6305,  8.7371,  8.8436,  8.9502/
      data (ed6   (i),i=  64, 101)/
     1  9.0591,  9.1700,  9.2809,  9.3919,  9.5031,  9.6265,  9.7500,
     2  9.8734,  9.9969, 10.1390, 10.2816, 10.4242, 10.5769, 10.7412,
     3 10.9055, 11.0773, 11.2594, 11.4416, 11.6520, 11.8757, 12.1240,
     4 12.4031, 12.7207, 13.0591, 13.3984, 13.7723, 14.2079, 14.7054,
     5 15.2408, 15.8756, 16.5659, 17.2674, 18.0927, 19.0785, 20.4732,
     6 22.2080, 25.1992, 50.0000/
      data (ed7   (i),i=   1,  63)/
     1  0.0000,  0.0913,  0.1826,  0.2739,  0.3652,  0.4565,  0.5517,
     2  0.6504,  0.7492,  0.8480,  0.9467,  1.0454,  1.1440,  1.2426,
     3  1.3411,  1.4397,  1.5330,  1.6180,  1.7031,  1.7881,  1.8731,
     4  1.9581,  2.0476,  2.1416,  2.2355,  2.3294,  2.4233,  2.5202,
     5  2.6303,  2.7404,  2.8505,  2.9606,  3.0904,  3.2311,  3.3719,
     6  3.5138,  3.6674,  3.8210,  3.9746,  4.1393,  4.3063,  4.4733,
     7  4.6361,  4.7982,  4.9603,  5.1239,  5.2879,  5.4519,  5.6535,
     8  5.8707,  6.0735,  6.2552,  6.4369,  6.6020,  6.7581,  6.9143,
     9  7.0673,  7.2163,  7.3654,  7.5124,  7.6405,  7.7687,  7.8968/
      data (ed7   (i),i=  64, 101)/
     1  8.0284,  8.1747,  8.3210,  8.4674,  8.6158,  8.7649,  8.9139,
     2  9.0609,  9.2049,  9.3490,  9.4930,  9.6437,  9.7948,  9.9459,
     3 10.1105, 10.2826, 10.4548, 10.6608, 10.8788, 11.1069, 11.3476,
     4 11.6057, 11.8938, 12.2040, 12.5305, 12.8915, 13.3442, 13.8653,
     5 14.4078, 15.0480, 15.7632, 16.4791, 17.2583, 18.2819, 19.4121,
     6 21.0717, 23.4942, 48.0000/
      data (ed8   (i),i=   1,  63)/
     1  0.0000,  0.0875,  0.1750,  0.2626,  0.3501,  0.4376,  0.5281,
     2  0.6259,  0.7238,  0.8216,  0.9195,  1.0163,  1.1084,  1.2005,
     3  1.2926,  1.3848,  1.4769,  1.5618,  1.6444,  1.7270,  1.8095,
     4  1.8921,  1.9746,  2.0616,  2.1506,  2.2395,  2.3284,  2.4174,
     5  2.5075,  2.6142,  2.7208,  2.8274,  2.9340,  3.0514,  3.1861,
     6  3.3208,  3.4555,  3.6008,  3.7513,  3.9018,  4.0599,  4.2326,
     7  4.4053,  4.5749,  4.7405,  4.9062,  5.0744,  5.2459,  5.4175,
     8  5.6030,  5.8014,  5.9999,  6.1714,  6.3430,  6.5129,  6.6658,
     9  6.8186,  6.9715,  7.1277,  7.2846,  7.4415,  7.5827,  7.7147/
      data (ed8   (i),i=  64, 101)/
     1  7.8466,  7.9786,  8.1241,  8.2723,  8.4205,  8.5730,  8.7305,
     2  8.8881,  9.0429,  9.1910,  9.3392,  9.4874,  9.6465,  9.8067,
     3  9.9668, 10.1414, 10.3196, 10.4979, 10.7040, 10.9104, 11.1446,
     4 11.4002, 11.6846, 11.9873, 12.3287, 12.6972, 13.1182, 13.6330,
     5 14.1761, 14.7994, 15.4876, 16.2600, 17.0124, 18.0036, 19.2485,
     6 20.9601, 23.4214, 48.0000/
      data (ed9   (i),i=   1,  63)/
     1  0.0000,  0.0774,  0.1548,  0.2323,  0.3097,  0.3871,  0.4645,
     2  0.5430,  0.6222,  0.7015,  0.7808,  0.8600,  0.9393,  1.0186,
     3  1.0983,  1.1780,  1.2577,  1.3374,  1.4171,  1.4968,  1.5608,
     4  1.6243,  1.6877,  1.7511,  1.8145,  1.8779,  1.9413,  2.0051,
     5  2.0730,  2.1410,  2.2089,  2.2768,  2.3448,  2.4127,  2.4807,
     6  2.5625,  2.6499,  2.7372,  2.8246,  2.9119,  2.9993,  3.0973,
     7  3.1953,  3.2934,  3.3915,  3.4896,  3.6062,  3.7251,  3.8440,
     8  3.9629,  4.0959,  4.2353,  4.3746,  4.5171,  4.6873,  4.8576,
     9  5.0311,  5.2213,  5.4116,  5.6031,  5.7958,  5.9885,  6.1718/
      data (ed9   (i),i=  64, 101)/
     1  6.3545,  6.5365,  6.7159,  6.8953,  7.0671,  7.2282,  7.3893,
     2  7.5527,  7.7210,  7.8893,  8.0586,  8.2298,  8.4011,  8.5846,
     3  8.7850,  8.9854,  9.1865,  9.3876,  9.6008,  9.8296, 10.0599,
     4 10.2949, 10.5397, 10.8518, 11.1639, 11.4760, 11.8394, 12.2537,
     5 12.7690, 13.3734, 14.0339, 14.7598, 15.7133, 16.7018, 18.0847,
     6 19.8387, 23.0823, 46.5000/
      data (ed10  (i),i=   1,  63)/
     1  0.0000,  0.0639,  0.1279,  0.1918,  0.2558,  0.3197,  0.3837,
     2  0.4476,  0.5127,  0.5830,  0.6532,  0.7235,  0.7938,  0.8641,
     3  0.9344,  1.0044,  1.0705,  1.1367,  1.2029,  1.2691,  1.3353,
     4  1.4015,  1.4677,  1.5270,  1.5798,  1.6326,  1.6854,  1.7382,
     5  1.7910,  1.8438,  1.8966,  1.9494,  2.0024,  2.0612,  2.1199,
     6  2.1786,  2.2374,  2.2961,  2.3548,  2.4136,  2.4723,  2.5415,
     7  2.6201,  2.6987,  2.7772,  2.8558,  2.9344,  3.0157,  3.1111,
     8  3.2064,  3.3018,  3.3971,  3.4925,  3.5994,  3.7074,  3.8153,
     9  3.9233,  4.0361,  4.1609,  4.2856,  4.4104,  4.5406,  4.6849/
      data (ed10  (i),i=  64, 101)/
     1  4.8292,  4.9735,  5.1403,  5.3121,  5.4838,  5.6932,  5.9064,
     2  6.0960,  6.2671,  6.4382,  6.6213,  6.8112,  7.0011,  7.1861,
     3  7.3711,  7.5640,  7.7752,  7.9863,  8.2165,  8.4480,  8.6721,
     4  8.8941,  9.1769,  9.5132,  9.8077, 10.1295, 10.5029, 10.9113,
     5 11.4034, 11.8866, 12.6546, 13.5064, 14.5825, 15.6848, 16.9036,
     6 18.4066, 21.4206, 40.5000/
      data (ed11  (i),i=   1,  63)/
     1  0.0000,  0.0566,  0.1133,  0.1699,  0.2265,  0.2831,  0.3398,
     2  0.3964,  0.4530,  0.5102,  0.5701,  0.6301,  0.6900,  0.7499,
     3  0.8098,  0.8697,  0.9297,  0.9896,  1.0496,  1.1097,  1.1698,
     4  1.2299,  1.2899,  1.3500,  1.4101,  1.4702,  1.5227,  1.5678,
     5  1.6129,  1.6580,  1.7030,  1.7481,  1.7932,  1.8383,  1.8834,
     6  1.9285,  1.9736,  2.0228,  2.0778,  2.1329,  2.1879,  2.2430,
     7  2.2980,  2.3530,  2.4081,  2.4631,  2.5223,  2.5900,  2.6576,
     8  2.7252,  2.7929,  2.8605,  2.9281,  2.9957,  3.0824,  3.1704,
     9  3.2584,  3.3464,  3.4344,  3.5236,  3.6165,  3.7093,  3.8021/
      data (ed11  (i),i=  64, 101)/
     1  3.8949,  3.9878,  4.1017,  4.2189,  4.3361,  4.4533,  4.5818,
     2  4.7178,  4.8538,  4.9899,  5.1565,  5.3256,  5.4946,  5.6848,
     3  5.8757,  6.0765,  6.2956,  6.5125,  6.6974,  6.8823,  7.0897,
     4  7.3362,  7.5819,  7.8260,  8.0882,  8.3956,  8.7171,  9.0569,
     5  9.4650,  9.8934, 10.4566, 11.0706, 12.0981, 13.0628, 14.5325,
     6 16.2045, 19.9656, 48.5000/
      data (ed12  (i),i=   1,  63)/
     1  0.0000,  0.0572,  0.1143,  0.1715,  0.2287,  0.2858,  0.3430,
     2  0.4001,  0.4573,  0.5165,  0.5815,  0.6465,  0.7115,  0.7765,
     3  0.8415,  0.9065,  0.9715,  1.0356,  1.0991,  1.1625,  1.2260,
     4  1.2894,  1.3529,  1.4164,  1.4798,  1.5276,  1.5681,  1.6086,
     5  1.6491,  1.6896,  1.7301,  1.7707,  1.8112,  1.8517,  1.8922,
     6  1.9327,  1.9732,  2.0171,  2.0678,  2.1185,  2.1692,  2.2199,
     7  2.2706,  2.3213,  2.3719,  2.4226,  2.4733,  2.5313,  2.5974,
     8  2.6634,  2.7295,  2.7956,  2.8616,  2.9277,  2.9938,  3.0640,
     9  3.1347,  3.2054,  3.2761,  3.3468,  3.4175,  3.4882,  3.5896/
      data (ed12  (i),i=  64, 101)/
     1  3.6971,  3.8045,  3.9120,  4.0185,  4.1205,  4.2225,  4.3245,
     2  4.4266,  4.5309,  4.6414,  4.7518,  4.8622,  4.9726,  5.1102,
     3  5.2567,  5.4033,  5.5472,  5.6862,  5.8252,  5.9641,  6.2392,
     4  6.5466,  6.7909,  7.0429,  7.3415,  7.6512,  7.9736,  8.2740,
     5  8.5784,  8.9008,  9.3985, 10.0426, 10.6499, 11.8418, 12.9548,
     6 14.4828, 17.1464, 40.0000/
      data (ed13  (i),i=   1,  63)/
     1  0.0000,  0.0725,  0.1450,  0.2175,  0.2900,  0.3625,  0.4350,
     2  0.5056,  0.5593,  0.6130,  0.6667,  0.7204,  0.7741,  0.8278,
     3  0.8815,  0.9352,  0.9889,  1.0548,  1.1238,  1.1929,  1.2619,
     4  1.3310,  1.4000,  1.4690,  1.5276,  1.5776,  1.6276,  1.6776,
     5  1.7276,  1.7776,  1.8276,  1.8776,  1.9276,  1.9776,  2.0286,
     6  2.0804,  2.1321,  2.1839,  2.2357,  2.2875,  2.3393,  2.3911,
     7  2.4429,  2.4946,  2.5722,  2.6528,  2.7333,  2.8139,  2.8944,
     8  2.9750,  3.0625,  3.1531,  3.2437,  3.3344,  3.4250,  3.5139,
     9  3.5944,  3.6750,  3.7556,  3.8361,  3.9167,  3.9972,  4.1400/
      data (ed13  (i),i=  64, 101)/
     1  4.2850,  4.4300,  4.5500,  4.6467,  4.7433,  4.8400,  4.9367,
     2  5.0333,  5.1300,  5.2267,  5.3233,  5.4200,  5.5312,  5.7125,
     3  5.8937,  6.0750,  6.2562,  6.4375,  6.6357,  6.8428,  7.0700,
     4  7.3600,  7.5682,  7.7000,  7.8318,  7.9636,  8.3500,  9.1666,
     5  9.5750,  9.8166, 10.3499, 11.1000, 11.7499, 13.5996, 16.1499,
     6 17.0999, 18.3990, 24.0000/
      data (ed14  (i),i=   1,  63)/
     1  0.0000,  0.1600,  0.3200,  0.4800,  0.6400,  0.8000,  0.9600,
     2  1.0150,  1.0350,  1.0550,  1.0750,  1.0950,  1.1150,  1.1350,
     3  1.1550,  1.1750,  1.1950,  1.2150,  1.2350,  1.2550,  1.2750,
     4  1.2950,  1.3150,  1.3350,  1.3550,  1.3750,  1.3950,  1.4150,
     5  1.4350,  1.4550,  1.4750,  1.4950,  1.5400,  1.5933,  1.6467,
     6  1.7000,  1.7533,  1.8067,  1.8600,  1.9133,  1.9667,  2.0200,
     7  2.0733,  2.1267,  2.1800,  2.2333,  2.2867,  2.3400,  2.3933,
     8  2.4467,  2.5000,  2.5400,  2.5800,  2.6200,  2.6600,  2.7000,
     9  2.7400,  2.7800,  2.8200,  2.8600,  2.9000,  2.9400,  2.9800/
      data (ed14  (i),i=  64, 101)/
     1  3.0200,  3.0600,  3.1000,  3.1400,  3.1800,  3.2200,  3.2600,
     2  3.3000,  3.3400,  3.3800,  3.4200,  3.4600,  3.5000,  3.5800,
     3  3.6600,  3.7400,  3.8200,  3.9000,  3.9800,  4.0600,  4.1400,
     4  4.2200,  4.3000,  4.3800,  4.4600,  4.5400,  4.6200,  4.7000,
     5  4.7800,  4.8600,  4.9400,  5.0200,  5.1000,  5.1800,  5.2600,
     6  5.3400,  5.4200,  5.5000/
       end
!        kdigb0:   rho* for pb.5fe.1sc3.5 for gamma shower
!        kdig0:    rho* for fe.1sc3.5  for gamma shower
!        kdipb0:   rho* for pb.5fe.1sc3.5 for proton shower
!        kdip0:    rho* for fe.1sc3.5 for gamma shower
!
!        **********************************************************
!        *
!        * kdigb0:  normalized lateral distribution of particles
!        *          which give de>0 in scintillator of 3.5 cm thick
!        *          uhder .5cmpb and .1cmfe.
!        *          this is for gamma shower
!        **********************************************************
!
! call kdigb0(e0, cosz, s, r, rho)
!
!    e0:  input. 1ry energy in tev
!  cosz:  input. cos of the zenith angle
!     s:  input. age of the shower
!     r:  input. distance from the shower axis in moliere unit.
!                moliere unit should be the one obtained by
!                kmolu.
!   rho:  output. density of particles which give de>0 in scinti.
!                (in unit of (m.u)**-2)
!                if this is multiplied by ne * enfancement factor
!                (which is obtained by keffgb), actual density is
!                obtained.
!                normalization is not so accurate.
!
       subroutine kdigb0(e0, cosz, s, r, rho)
!
           call klee(s, r, rhone)
           call kcfgb(e0, cosz, s, r, cf)
           rho=rhone*cf
       end
!            the next is for fe.1sc3.5; gamma shower
       subroutine kdig0(e0, cosz, s, r, rho)
!
           call klee(s, r, rhone)
           call kcfg(e0, cosz, s, r, cf)
           rho=rhone*cf
       end
!            the next is for pb.5fe.1sc3.5  ; proton shower
       subroutine kdipb0(e0, cosz, s, r, rho)
!
           call klee(s, r, rhone)
           call kcfpb(e0, cosz, s, r, cf)
           rho=rhone*cf
       end
!            the next is for fe.1sc3.5 for proton shower
       subroutine kdip0(e0, cosz, s, r, rho)
!
           call klee(s, r, rhone)
           call kcfp(e0, cosz, s, r, cf)
           rho=rhone*cf
       end
!        kudig: rho(*,>de)  for fe.1sc3.5  for gamma shower
!        kudip:      //     for fe.1sc3.5 for proton shower
!
!        **********************************************************
!        *
!        * kudig:  unnormalized lateral distribution of particles
!        *         which give >de  in scintillator of 3.5 cm thick
!        *         under  .1cmfe.
!        *         this is for gamma shower
!        **********************************************************
!
! call kudig(e0, zob, cosz, s, de, j1, r,  rho)
!
!    e0:  input. 1ry energy in tev
!   zob:  input. observation depth
!  cosz:  input. cos of the zenith angle
!     s:  input. age of the shower
!    de:  input. minimum energy deposit in scintilattor (mev)
!    j1:  input. if all of the above parameters are the same, give 1
!                else 0.
!     r:  input. distance from the shower axis in moliere unit.
!                moliere unit should be the one obtained by
!                kmolu.
!   rho:  output. density of particles which give de>0 in scinti.
!                (in unit of (m.u)**-2)
!                rho is not normalized to 1 but the actual density
!                of particles is obtained by multipling by
!                n(de>0)= ne*enfancement factor
!                where enfancement factor can be obtained by calling
!                kefg
!                if you fit this rho to data and get const c as
!                c*rho(r,s),  then ne can be obtained by ne=c/enf.
!
       subroutine kudig(e0, zob, cosz, s, de, j1, r,  rho)
!
!             get density at r for electron
           call klee(s, r, rhone)
!             get correction factor due to obseravtion conditions
!             (cascade in detectors).
           call kcfg(e0, cosz, s, r, cf)
!             get prob. of energy loss > de
           call kide(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr
       end
!            the next is for fe.1sc3.5 for proton shower
       subroutine kudip(e0, zob, cosz, s, de, j1, r, rho)
           call klee(s, r, rhone)
           call kcfp(e0, cosz, s, r, cf)
           call kide(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr
       end
!    to test kudigb or kudipb
!

!        kudigb:  rho*(>de) for pb.5fe.1sc3.5 for gamma shower
!        kudipb:     //     for pb.5fe.1sc3.5 for proton shower
!
!        **********************************************************
!        *
!        * kudigb: unnormalized lateral distribution of particles
!        *         which give >de  in scintillator of 3.5 cm thick
!        *         under  .5cmpb and .1cmfe.
!        *         this is for gamma shower
!        **********************************************************
!
! call kudigb(e0, zob, cosz, s, de, j1, r,  rho)
!
!    e0:  input. 1ry energy in tev
!   zob:  input. observation depth
!  cosz:  input. cos of the zenith angle
!     s:  input. age of the shower
!    de:  input. minimum energy deposit in scintilattor (mev)
!    j1:  input. if all of the above parameters are the same, give 1
!                else 0.
!     r:  input. distance from the shower axis in moliere unit.
!                moliere unit should be the one obtained by
!                kmolu.
!   rho:  output. density of particles which give de>0 in scinti.
!                (in unit of (m.u)**-2)
!    **** see  note in kudig. ******
!
       subroutine kudigb(e0, zob, cosz, s, de, j1, r, rho)
!
           call klee(s, r, rhone)
           call kcfgb(e0, cosz, s, r, cf)
           call kideb(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr
       end
!            the next is for pb.5fe.1sc3.5  ; proton shower
       subroutine kudipb(e0, zob, cosz, s, de, j1, r,  rho)
           call klee(s, r, rhone)
           call kcfpb(e0, cosz, s, r, cf)
           call kideb(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr
       end

!     to text kcfg:
!      character*70 txt
!      character*16 capx, capy
!      open(13,file='c2s5001.#gd.data')
!      cosz=1.
!      e0=100.
!      do 100 s=.4, 1.8, .1
!          write(txt,'(''s='',f4.2)') s
!          capx='r(m.u)'
!          capy='(fe.1sc3.5)/rho'
!          write(13) txt
!          write(13) capx, capy
!          r=1.e-4
!          do 20 i=1, 58
!             call kcfg(e0, cosz, s, r, cf)
!             write(13) r, cf
!             r=r*10.**.1
!  20      continue
!          write(13) 1.e50, 1.e50
! 100  continue
!      end
!     *************************************************************
!     *
!     *  kcfg: correction factor for lateral distribtuion when
!     *        gamma showers are observed with fe.1sc3.5
!     *
!     *************************************************************
      subroutine kcfg(e0, cosz, s, r, cf)
!       e0: input. 1ry energy in tev.
!                  at present not used.
!     cosz: input. cos of zenith
!        s: input. age of the gamma shower
!                  for s<.4 or >1.6 not accurate.
!        r: input. distance measured in moliere unit.
!                  moliere unit should be at 2r.l above the observation
!                  depth (along 1ry direction).
!       cf: output. correction factor.
!           cf*rho(s,r) gives normalized lateral distribution
!           for particles giving de>0 in scinti.
!           rho is the output from klee.
      dimension rat(35, 11)
      dimension dty1(35), dty2(35), dty3(35), dty4(35), dty5(35)
      dimension dty6(35), dty7(35), dty8(35), dty9(35), dty10(35)
      dimension dty11(35)
      equivalence (rat(1,1), dty1(1))
      equivalence (rat(1,2), dty2(1))
      equivalence (rat(1,3), dty3(1))
      equivalence (rat(1,4), dty4(1))
      equivalence (rat(1,5), dty5(1))
      equivalence (rat(1,6), dty6(1))
      equivalence (rat(1,7), dty7(1))
      equivalence (rat(1,8), dty8(1))
      equivalence (rat(1,9), dty9(1))
      equivalence (rat(1,10), dty10(1))
      equivalence (rat(1,11), dty11(1))
!    gamma  fe.1sc3.5/lee s=.5
!       rho*/rho=cf:  log10(cf) for log10(r)=-3.815 to 1.6 step .160
!    s=0.5
      data (dty1  (i),i=   1,  35)/
     1 -0.114, -0.052, -0.003,  0.015,  0.040,  0.053,  0.060,  0.061,
     2  0.056,  0.056,  0.045,  0.028, -0.001, -0.043, -0.066, -0.077,
     3 -0.076, -0.076, -0.081, -0.074, -0.055, -0.024,  0.031,  0.092,
     4  0.183,  0.304,  0.461,  0.667,  0.818,  0.928,  0.995,  1.050,
     5  1.081,  1.088,  1.082/
!    s=0.6
      data (dty2  (i),i=   1,  35)/
     1 -0.138, -0.095, -0.070, -0.045, -0.014, -0.007,  0.000, -0.012,
     2 -0.011, -0.010, -0.015, -0.008, -0.026, -0.043, -0.066, -0.077,
     3 -0.083, -0.082, -0.087, -0.080, -0.067, -0.048, -0.018,  0.037,
     4  0.110,  0.178,  0.275,  0.420,  0.566,  0.729,  0.862,  0.923,
     5  0.942,  0.943,  0.908/
!    s=0.7
      data (dty3  (i),i=   1,  35)/
     1 -0.240, -0.179, -0.136, -0.105, -0.080, -0.055, -0.048, -0.048,
     2 -0.041, -0.040, -0.039, -0.038, -0.050, -0.055, -0.060, -0.071,
     3 -0.089, -0.100, -0.093, -0.086, -0.067, -0.055, -0.011,  0.049,
     4  0.123,  0.196,  0.299,  0.414,  0.559,  0.675,  0.742,  0.767,
     5  0.737,  0.672,  0.588/
!    s=0.8
      data (dty4  (i),i=   1,  35)/
     1 -0.336, -0.257, -0.202, -0.159, -0.122, -0.091, -0.079, -0.066,
     2 -0.047, -0.046, -0.039, -0.044, -0.050, -0.061, -0.060, -0.071,
     3 -0.089, -0.076, -0.093, -0.092, -0.073, -0.048, -0.023,  0.037,
     4  0.105,  0.184,  0.287,  0.402,  0.517,  0.608,  0.658,  0.628,
     5  0.563,  0.449,  0.347/
!    s=0.9
      data (dty5  (i),i=   1,  35)/
     1 -0.421, -0.330, -0.269, -0.214, -0.158, -0.121, -0.097, -0.072,
     2 -0.065, -0.058, -0.051, -0.056, -0.062, -0.079, -0.084, -0.089,
     3 -0.101, -0.082, -0.087, -0.086, -0.079, -0.054, -0.024,  0.019,
     4  0.074,  0.153,  0.245,  0.348,  0.469,  0.524,  0.489,  0.393,
     5  0.298,  0.208,  0.125/
!    sw=1.0
      data (dty6  (i),i=   1,  34)/
     1 -0.487, -0.402, -0.323, -0.262, -0.201, -0.164, -0.127, -0.108,
     2 -0.089, -0.070, -0.069, -0.063, -0.068, -0.067, -0.078, -0.089,
     3 -0.107, -0.105, -0.104, -0.085, -0.061, -0.036,  0.001,  0.056,
     4  0.117,  0.203,  0.312,  0.397,  0.464,  0.435,  0.351,  0.268,
     5  0.184,  0.125/
!    s=1.1
      data (dty7  (i),i=   1,  35)/
     1 -0.638, -0.540, -0.449, -0.364, -0.297, -0.236, -0.181, -0.138,
     2 -0.113, -0.094, -0.069, -0.069, -0.062, -0.055, -0.066, -0.095,
     3 -0.101, -0.100, -0.093, -0.080, -0.079, -0.061, -0.030,  0.001,
     4  0.050,  0.123,  0.184,  0.282,  0.367,  0.428,  0.392,  0.297,
     5  0.219,  0.154,  0.106/
!    s=1.2
      data (dty8 (i),i=   1,  35)/
     1 -0.740, -0.631, -0.516, -0.424, -0.339, -0.266, -0.211, -0.162,
     2 -0.125, -0.094, -0.075, -0.062, -0.068, -0.073, -0.078, -0.089,
     3 -0.101, -0.112, -0.111, -0.098, -0.085, -0.061, -0.030,  0.007,
     4  0.050,  0.117,  0.178,  0.240,  0.337,  0.380,  0.362,  0.297,
     5  0.219,  0.154,  0.076/
!    s=1.3
      data (dty9 (i),i=   1,  35)/
     1 -0.836, -0.685, -0.564, -0.460, -0.369, -0.302, -0.253, -0.192,
     2 -0.155, -0.118, -0.093, -0.069, -0.074, -0.067, -0.078, -0.095,
     3 -0.113, -0.118, -0.117, -0.122, -0.110, -0.091, -0.066, -0.035,
     4  0.002,  0.069,  0.142,  0.209,  0.294,  0.350,  0.326,  0.285,
     5  0.219,  0.148,  0.088/
!    s=1.4
      data (dty10 (i),i=   1,  35)/
     1 -0.897, -0.763, -0.624, -0.466, -0.339, -0.260, -0.205, -0.144,
     2 -0.107, -0.064, -0.057, -0.044, -0.062, -0.061, -0.072, -0.095,
     3 -0.113, -0.142, -0.153, -0.146, -0.134, -0.109, -0.084, -0.047,
     4 -0.004,  0.051,  0.130,  0.209,  0.252,  0.313,  0.320,  0.267,
     5  0.189,  0.100,  0.052/
!    s=1.5
      data (dty11 (i),i=   1,  35)/
     1 -0.993, -0.878, -0.732, -0.581, -0.442, -0.314, -0.211, -0.138,
     2 -0.083, -0.058, -0.063, -0.062, -0.062, -0.073, -0.084, -0.107,
     3 -0.125, -0.148, -0.165, -0.171, -0.164, -0.163, -0.138, -0.101,
     4 -0.052,  0.009,  0.094,  0.185,  0.258,  0.301,  0.290,  0.243,
     5  0.165,  0.088,  0.046/
!
!         effective s
!cc       rs=1. - 1./(1. + exp(r-8.))
!cc       si=s*( -0.0285 *log10(e0/100.)*rs + 1.)
       si = s           ! not use above

       if(si .lt. .4) then
         si=.4
       elseif(si .gt. 1.6) then
         si=1.6
       endif
       if(r .lt. 1.e-4) then
          ri=1.e-4
       elseif(r .gt. 70.) then
          ri=70.
       else
          ri=r
       endif
!c       if(ri .gt. 8.) then
!c           c = -3.5*(cosz-1.) + 1.
!c           ri=(ri-8.)*c   + 8.
!c       endif
       ri=log10(ri)
!
       call
     * k4ptdis(rat, 35, 11, 35, -3.82, 0.5, .16, .1, ri, si,    ans)
       cf=10.**(ans)
       end
!     to text kcfgb:
!      character*70 txt
!      character*16 capx, capy
!      open(13,file='c2s5001.#gd.data')
!      cosz=1.
!      e0=100.
!      do 100 s=.5, 1.8, .1
!          write(txt,'(''s='',f4.2)') s
!          capx='r(m.u)'
!          capy='(fe.1sc3.5)/rho'
!          write(13) txt
!          write(13) capx, capy
!          r=1.e-4
!          do 20 i=1, 58
!             call kcfgb(e0, cosz, s, r, cf)
!             write(13) r, cf
!             r=r*10.**.1
!  20      continue
!          write(13) 1.e50, 1.e50
! 100  continue
!      end
!     *************************************************************
!     *
!     *  kcfgb: correction factor for lateral distribtuion when
!     *        gamma showers are observed with pb.5fe.1sc3.5
!     *
!     *************************************************************
      subroutine kcfgb(e0, cosz, s, r, cf)
!       e0: input. 1ry energy in tev.
!                  at present not used.
!     cosz: input. cos of zenith
!        s: input. age of the gamma shower
!                  for s<.4 or >1.7 not accurate.
!        r: input. distance measured in moliere unit.
!                  moliere unit should be at 2r.l above the observation
!                  depth (along 1ry direction).
!       cf: output. correction factor.
!           cf*rho(s,r) gives normalized lateral distribution
!           for particles giving de>0 in scinti.
!           rho is the output from klee.
      dimension rat(35, 14)
      dimension dty1(35), dty2(35), dty3(35), dty4(35), dty5(35)
      dimension dty6(35), dty7(35), dty8(35), dty9(35), dty10(35)
      dimension dty11(35), dty12(35), dty13(35), dty14(35)
      equivalence (rat(1,1), dty1(1))
      equivalence (rat(1,2), dty2(1))
      equivalence (rat(1,3), dty3(1))
      equivalence (rat(1,4), dty4(1))
      equivalence (rat(1,5), dty5(1))
      equivalence (rat(1,6), dty6(1))
      equivalence (rat(1,7), dty7(1))
      equivalence (rat(1,8), dty8(1))
      equivalence (rat(1,9), dty9(1))
      equivalence (rat(1,10), dty10(1))
      equivalence (rat(1,11), dty11(1))
      equivalence (rat(1,12), dty12(1))
      equivalence (rat(1,13), dty13(1))
      equivalence (rat(1,14), dty14(1))
!    rho(pb.5fe.1sc3.5)/lee for 10**14 e-; s=0.4
      data (dty1  (i),i=   1,  35)/
     1  0.148,  0.155,  0.162,  0.151,  0.146,  0.129,  0.106,  0.089,
     2  0.060,  0.013, -0.028, -0.087, -0.140, -0.176, -0.199, -0.210,
     3 -0.209, -0.202, -0.195, -0.188, -0.169, -0.156, -0.125, -0.082,
     4 -0.033,  0.010,  0.047,  0.072,  0.097,  0.110,  0.087,  0.052,
     5 -0.013, -0.126, -0.264/
!    s=.5
      data (dty2  (i),i=   1,  35)/
     1  0.115,  0.128,  0.141,  0.154,  0.149,  0.144,  0.150,  0.121,
     2  0.110,  0.068,  0.033, -0.020, -0.068, -0.115, -0.144, -0.162,
     3 -0.173, -0.184, -0.195, -0.177, -0.170, -0.115, -0.078, -0.041,
     4  0.002,  0.051,  0.094,  0.143,  0.174,  0.199,  0.206,  0.140,
     5  0.057, -0.027, -0.267/
!    s=0.6
      data (dty3  (i),i=   1,  35)/
     1  0.063,  0.079,  0.103,  0.112,  0.113,  0.114,  0.100,  0.101,
     2  0.071,  0.034,  0.004, -0.026, -0.056, -0.085, -0.107, -0.122,
     3 -0.167, -0.181, -0.203, -0.195, -0.178, -0.146, -0.099, -0.006,
     4  0.087,  0.196,  0.305,  0.406,  0.491,  0.546,  0.547,  0.479,
     5  0.326,  0.020, -0.279/
!    s=0.7
      data (dty4  (i),i=   1,  35)/
     1 -0.002,  0.017,  0.036,  0.043,  0.043,  0.044,  0.033,  0.022,
     2  0.016,  0.005, -0.012, -0.035, -0.065, -0.088, -0.124, -0.153,
     3 -0.170, -0.176, -0.175, -0.168, -0.161, -0.100, -0.033,  0.041,
     4  0.144,  0.229,  0.339,  0.467,  0.564,  0.650,  0.693,  0.651,
     5  0.531,  0.145, -0.265/
!    s=0.8
      data (dty5  (i),i=   1,  35)/
     1 -0.047, -0.035, -0.022, -0.009, -0.009, -0.008, -0.013, -0.007,
!    2 -0.018, -0.017, -0.029, -0.034, -0.058, -0.075, -0.081, -0.086,
     2 -0.018, -0.017, -0.029, -0.046, -0.070, -0.086, -0.113, -0.130,
!    3 -0.097, -0.091, -0.090, -0.083, -0.071, -0.022,  0.045,  0.124,
     3 -0.155, -0.155, -0.149, -0.142, -0.108, -0.070, -0.005,  0.084,
     4  0.203,  0.306,  0.415,  0.554,  0.633,  0.700,  0.731,  0.719,
     5  0.636,  0.395, -0.158/
!    s=0.9
      data (dty6  (i),i=   1,  35)/
     1 -0.037, -0.021,  0.003,  0.012,  0.013,  0.022,  0.030,  0.031,
     2  0.033, -0.028, -0.019, -0.026, -0.033, -0.039, -0.069, -0.091,
     3 -0.113, -0.135, -0.150, -0.141, -0.155, -0.139, -0.084, -0.014,
     4  0.064,  0.158,  0.259,  0.367,  0.468,  0.523,  0.532,  0.448,
     5  0.296,  0.027, -0.325/
!    s=1.0
      data (dty7  (i),i=   1,  35)/
     1 -0.023, -0.004,  0.015,  0.021,  0.034,  0.035,  0.036,  0.042,
     2  0.043,  0.044,  0.039,  0.028,  0.016, -0.007, -0.042, -0.077,
     3 -0.100, -0.123, -0.128, -0.134, -0.115, -0.102, -0.071,  0.001,
     4  0.074,  0.171,  0.255,  0.352,  0.436,  0.467,  0.486,  0.421,
     5  0.308,  0.015, -0.295/
!    s=1.1
      data (dty8  (i),i=   1,  35)/
     1  0.017,  0.027,  0.036,  0.045,  0.047,  0.057,  0.058,  0.067,
     2  0.069,  0.063,  0.065,  0.051,  0.037,  0.008, -0.029, -0.058,
     3 -0.087, -0.093, -0.099, -0.105, -0.119, -0.102, -0.085, -0.037,
     4  0.034,  0.120,  0.229,  0.323,  0.409,  0.457,  0.466,  0.422,
     5  0.324,  0.094, -0.296/
!    s=1.2
      data (dty9  (i),i=   1,  35)/
     1  0.110,  0.135,  0.144,  0.145,  0.147,  0.149,  0.143,  0.136,
     2  0.123,  0.101,  0.088,  0.066,  0.045,  0.008, -0.021, -0.050,
     3 -0.087, -0.101, -0.115, -0.121, -0.119, -0.117, -0.093, -0.037,
     4  0.026,  0.112,  0.214,  0.308,  0.386,  0.419,  0.405,  0.368,
     5  0.254,  0.064, -0.312/
!    s=1.3
      data (dty10 (i),i=   1,  35)/
     1  0.240,  0.250,  0.244,  0.245,  0.232,  0.233,  0.235,  0.221,
     2  0.200,  0.178,  0.157,  0.120,  0.091,  0.046,  0.002, -0.035,
     3 -0.072, -0.093, -0.115, -0.121, -0.127, -0.118, -0.101, -0.053,
     4  0.018,  0.081,  0.175,  0.262,  0.340,  0.388,  0.397,  0.353,
     5  0.239,  0.041, -0.258/
!    s=1.4
      data (dty11 (i),i=   1,  35)/
     1  0.140,  0.181,  0.190,  0.215,  0.224,  0.218,  0.220,  0.213,
     2  0.200,  0.171,  0.134,  0.097,  0.045,  0.008, -0.029, -0.066,
     3 -0.087, -0.109, -0.115, -0.128, -0.127, -0.117, -0.093, -0.045,
     4 -0.036,  0.051,  0.129,  0.215,  0.302,  0.334,  0.343,  0.291,
     5  0.216, -0.013, -0.319/
!    s=1.5
      data (dty12 (i),i=   1,  35)/
     1  0.171,  0.196,  0.198,  0.215,  0.216,  0.210,  0.204,  0.198,
     2  0.169,  0.148,  0.118,  0.082,  0.045,  0.008, -0.021, -0.050,
     3 -0.095, -0.108, -0.130, -0.144, -0.150, -0.133, -0.124, -0.091,
     4 -0.043,  0.035,  0.083,  0.169,  0.248,  0.288,  0.289,  0.245,
     5  0.170,  0.018, -0.311/
!    s=1.6
      data (dty13 (i),i=   1,  35)/
     1  0.117,  0.150,  0.159,  0.161,  0.170,  0.164,  0.158,  0.152,
     2  0.131,  0.101,  0.072,  0.058,  0.037,  0.008, -0.029, -0.058,
     3 -0.095, -0.124, -0.145, -0.175, -0.173, -0.163, -0.139, -0.099,
     4 -0.059, -0.011,  0.060,  0.138,  0.194,  0.234,  0.236,  0.176,
     5  0.085, -0.075, -0.304/
!    s=1.7
      data (dty14 (i),i=   1,  35)/
     1  0.056,  0.073,  0.082,  0.076,  0.086,  0.079,  0.081,  0.075,
     2  0.069,  0.063,  0.041,  0.012,  0.006, -0.030, -0.037, -0.073,
     3 -0.110, -0.124, -0.137, -0.152, -0.150, -0.141, -0.116, -0.068,
     4 -0.028, -0.011,  0.037,  0.077,  0.125,  0.157,  0.166,  0.130,
     5  0.039, -0.090, -0.304/
!         effective s
!       rs=1. - 1./(1. + exp(r-8.))
!       si=s*( -0.0285 *log10(e0/100.)*rs + 1.)
       si = s
       if(si .lt. .3) then
         si=.4
       elseif(si .gt. 1.8) then
         si=1.7
       endif
       if(r .lt. 1.e-4) then
          ri=1.e-4
       elseif(r .gt. 70.) then
          ri=70.
       else
          ri=r
       endif
!c       if(ri .gt. 8.) then
!c           c=-3.5*(cosz-1.) + 1.
!c           ri=(ri-8.)*c   + 8.
!c       endif
       ri=log10(ri)
!
       call
     * k4ptdis(rat, 35, 14, 35, -3.80, 0.4, .158, .1, ri, si,    ans)
       cf=10.**(ans)
       end
!     to text kcfp:
!      character*70 txt
!      character*16 capx, capy
!      open(13,file='c2s5001.#gd.data')
!      cosz=1.
!      e0=100.
!      do 100 s=.4, 1.8, .1
!          write(txt,'(''s='',f4.2)') s
!          capx='r(m.u)'
!          capy='(fe.1sc3.5)/rho'
!          write(13) txt
!          write(13) capx, capy
!          r=1.e-4
!          do 20 i=1, 58
!             call kcfp(e0, cosz, s, r, cf)
!             write(13) r, cf
!             r=r*10.**.1
!  20      continue
!          write(13) 1.e50, 1.e50
! 100  continue
!      end
!     *************************************************************
!     *
!     *  kcfp: correction factor for lateral distribtuion when
!     *        proton showers are observed with fe.1sc3.5
!     *
!     *************************************************************
      subroutine kcfp(e0, cosz, s, r, cf)
!       e0: input. 1ry energy in tev.
!     cosz: input. cos of zenith
!        s: input. age of the proton shower
!                  for s<.5 or >1.6 not accurate.
!        r: input. distance measured in moliere unit.
!                  moliere unit should be at 2r.l above the observation
!                  depth (along 1ry direction).
!       cf: output. correction factor.
!           cf*rho(s,r) gives normalized lateral distribution
!           for particles giving de>0 in scinti.
!           rho is the output from klee.
      dimension rat(35, 12)
      dimension dty1(35), dty2(35), dty3(35), dty4(35), dty5(35)
      dimension dty6(35), dty7(35), dty8(35), dty9(35), dty10(35)
      dimension dty11(35), dty12(35)
      equivalence (rat(1,1), dty1(1))
      equivalence (rat(1,2), dty2(1))
      equivalence (rat(1,3), dty3(1))
      equivalence (rat(1,4), dty4(1))
      equivalence (rat(1,5), dty5(1))
      equivalence (rat(1,6), dty6(1))
      equivalence (rat(1,7), dty7(1))
      equivalence (rat(1,8), dty8(1))
      equivalence (rat(1,9), dty9(1))
      equivalence (rat(1,10), dty10(1))
      equivalence (rat(1,11), dty11(1))
      equivalence (rat(1,12), dty12(1))
!    proton fe.1sc3.5/lee s=.5
!       rho*/rho=cf:  log10(cf) for log10(r)=-3.84 to 1.6 step .16
!
      data (dty1  (i),i=   1,  35)/
!    1-1.3165,-1.2388,-1.1379,-1.0447,-0.8819,-0.6881,-0.5408,-0.3935,
     1-1.3565,-1.2388,-1.0579,-0.9047,-0.7819,-0.6481,-0.5108,-0.3935,
     2-0.3003,-0.2303,-0.1758,-0.1213,-0.0899,-0.0508,-0.0117, 0.0118,
!    3 0.0509, 0.0978, 0.1523, 0.2145, 0.2923, 0.4241, 0.5559, 0.7419,
     3 0.0509, 0.0978, 0.1523, 0.2145, 0.2923, 0.4241, 0.5559, 0.7119,
!    4 0.9279, 1.1680, 1.3772, 1.6096, 1.8574, 2.1130, 2.2139, 2.2530,
     4 0.9079, 1.0680, 1.2772, 1.5096, 1.7574, 2.0130, 2.1139, 2.1530,
!    5 2.2612, 2.2539, 2.2620/
     5 2.2012, 2.2239, 2.2320/
!      s=.6
      data (dty2  (i),i=   1,  35)/
     1  -1.10,  -0.98,  -0.82,  -0.70,  -0.60,  -0.49,  -0.39,  -0.32,
     2  -0.24,  -0.20,  -0.15,  -0.11,  -0.08,  -0.06,  -0.05,  -0.04,
     3  -0.02,   0.00,   0.03,   0.09,   0.17,   0.28,   0.36,   0.46,
     4   0.58,   0.72,   0.87,   1.03,   1.25,   1.48,   1.66,   1.90,
     5   2.08,   2.12,   2.12/
!    s=.7
      data (dty3  (i),i=   1,  35)/
     1  -1.05,  -0.90,  -0.78,  -0.67,  -0.55,  -0.46,  -0.38,  -0.30,
     2  -0.25,  -0.21,  -0.19,  -0.16,  -0.14,  -0.12,  -0.10,  -0.10,
     3  -0.07,  -0.04,   0.01,   0.07,   0.12,   0.21,   0.29,   0.39,
     4   0.48,   0.60,   0.71,   0.84,   1.01,   1.18,   1.32,   1.48,
     5   1.58,   1.62,   1.64/
!    s=0.8
      data (dty4  (i),i=   1,  35)/
     1  -1.28,  -1.20,  -1.10,  -0.94,  -0.78,  -0.61,  -0.46,  -0.36,
     2  -0.28,  -0.24,  -0.20,  -0.17,  -0.14,  -0.14,  -0.12,  -0.12,
     3  -0.13,  -0.09,  -0.05,   0.00,   0.05,   0.12,   0.21,   0.29,
     4   0.38,   0.47,   0.57,   0.69,   0.81,   0.95,   1.06,   1.19,
     5   1.29,   1.37,   1.39/
!    s=0.9
      data (dty5  (i),i=   1,  35)/
     1  -1.28,  -1.14,  -1.08,  -0.95,  -0.80,  -0.63,  -0.50,  -0.40,
     2  -0.32,  -0.26,  -0.24,  -0.21,  -0.20,  -0.20,  -0.19,  -0.18,
     3  -0.16,  -0.14,  -0.10,  -0.05,   0.00,   0.06,   0.11,   0.18,
     4   0.26,   0.35,   0.45,   0.55,   0.67,   0.82,   0.90,   0.98,
     5   1.03,   1.07,   1.07/
!    s=1.0
      data (dty6  (i),i=   1,  35)/
     1 -1.392, -1.260, -1.105, -0.926, -0.771, -0.616, -0.491, -0.398,
     2 -0.320, -0.272, -0.248, -0.216, -0.207, -0.191, -0.182, -0.181,
     3 -0.165, -0.156, -0.140, -0.108, -0.068,  0.002,  0.057,  0.120,
     4  0.198,  0.292,  0.377,  0.479,  0.596,  0.689,  0.752,  0.791,
     5  0.815,  0.793,  0.740/
!    s=1.1
      data (dty7  (i),i=   1,  35)/
     1  -1.26,  -1.21,  -1.11,  -0.94,  -0.80,  -0.62,  -0.51,  -0.41,
     2  -0.30,  -0.24,  -0.20,  -0.17,  -0.15,  -0.13,  -0.11,  -0.11,
     3  -0.10,  -0.11,  -0.10,  -0.11,  -0.09,  -0.04,   0.01,   0.07,
     4   0.14,   0.23,   0.33,   0.42,   0.53,   0.60,   0.64,   0.62,
     5   0.59,   0.54,   0.45/
!    s=1.2
      data (dty8  (i),i=   1,  35)/
     1 -1.476, -1.391, -1.282, -1.073, -1.010, -0.816, -0.653, -0.506,
     2 -0.412, -0.326, -0.271, -0.216, -0.192, -0.176, -0.159, -0.151,
     3 -0.126, -0.125, -0.117, -0.100, -0.084, -0.060, -0.020,  0.043,
     4  0.105,  0.199,  0.277,  0.371,  0.441,  0.512,  0.544,  0.537,
     5  0.476,  0.369,  0.262/
!    s=1.3
      data (dty9  (i),i=   1,  35)/
     1 -1.507, -1.414, -1.351, -1.296, -1.126, -1.001, -0.877, -0.691,
     2 -0.536, -0.396, -0.310, -0.239, -0.177, -0.137, -0.098, -0.096,
     3 -0.103, -0.118, -0.124, -0.131, -0.099, -0.075, -0.035,  0.012,
     4  0.075,  0.160,  0.254,  0.332,  0.380,  0.442,  0.459,  0.413,
     5  0.322,  0.207,  0.116/
!    s=1.4
      data (dty10 (i),i=   1,  35)/
     1  -1.46,  -1.38,  -1.33,  -1.30,  -1.27,  -1.17,  -0.96,  -0.83,
     2  -0.66,  -0.52,  -0.41,  -0.31,  -0.24,  -0.20,  -0.15,  -0.15,
     3  -0.13,  -0.13,  -0.14,  -0.13,  -0.15,  -0.12,  -0.09,  -0.04,
     4   0.02,   0.08,   0.17,   0.23,   0.29,   0.33,   0.32,   0.28,
     5   0.19,   0.07,  -0.02/
!    s=1.5
      data (dty11 (i),i=   1,  35)/
     1  -1.63,    -1.49,  -1.44,  -1.40,  -1.38,  -1.30,
     2  -1.21,  -0.99,  -0.83,  -0.69,  -0.53,  -0.40,  -0.29,  -0.23,
     3  -0.17,  -0.14,  -0.14,  -0.13,  -0.16,  -0.19,  -0.19,  -0.18,
     4  -0.15,  -0.11,  -0.06,  -0.01,   0.05,   0.12,   0.18,   0.23,
     5   0.21,   0.16,   0.06,  -0.05,  -0.13/
!    s=1.6
      data (dty12 (i),i=   1,  35)/
     1  -1.46,  -1.45,  -1.43,  -1.43,  -1.40,  -1.34,  -1.27,  -1.19,
     2  -1.02,  -0.85,  -0.68,  -0.54,  -0.40,  -0.29,  -0.23,  -0.18,
     3  -0.16,  -0.16,  -0.17,  -0.19,  -0.20,  -0.18,  -0.16,  -0.14,
     4  -0.11,  -0.06,   0.02,   0.07,   0.11,   0.12,   0.10,   0.03,
     5  -0.07,  -0.14,  -0.20/
!
!         effective s
!c       rs=1. - 1./(1. + exp(r-8.))
!c       si=s*( -0.0285 *log10(e0/100.)*rs + 1.)
       si = s
       if(si .lt. .4) then
         si=.4
       elseif(si .gt. 1.7) then
         si=1.7
       endif
       if(r .lt. 1.e-4) then
          ri=1.e-4
       elseif(r .gt. 70.) then
          ri=70.
       else
          ri=r
       endif
!c       if(ri .gt. 8.) then
!c           c=-3.5*(cosz-1.) + 1.
!c           ri=(ri-8.)*c   + 8.
!c       endif
       ri=log10(ri)
!
       call
     * k4ptdis(rat, 35, 12, 35, -3.84, 0.5, .16, .1, ri, si,    ans)
       cf=10.**(ans)
       end
!     to test kcfpb:

!      e0=100.
!      do 100 s=.4, 1.8, .1
!          write(txt,'(''s='',f4.2)') s
!          capx='r(m.u)'
!          capy='(fe.1sc3.5)/rho'
!          write(13) txt
!          write(13) capx, capy
!          r=1.e-4
!          do 20 i=1, 58
!             call kcfpb(e0, cosz, s, r, cf)
!             write(13) r, cf
!             r=r*10.**.1
!  20      continue
!          write(13) 1.e50, 1.e50
! 100  continue
!      end
!     *************************************************************
!     *
!     *  kcfpb: correction factor for lateral distribtuion when
!     *        proton showers are observed with pb.5fe.1sc3.5
!     *
!     *************************************************************
      subroutine kcfpb(e0, cosz, s, r, cf)
!       e0: input. 1ry energy in tev.
!                  at present not used.
!     cosz: input. cos of zenith
!        s: input. age of the proton shower
!                  for s<.4 or >1.7 not accurate.
!        r: input. distance measured in moliere unit.
!                  moliere unit should be at 2r.l above the observation
!                  depth (along 1ry direction).
!       cf: output. correction factor.
!           cf*rho(s,r) gives normalized lateral distribution
!           for particles giving de>0 in scinti.
!           rho is the output from klee.
      dimension rat(35, 13)
      dimension dty1(35), dty2(35), dty3(35), dty4(35), dty5(35)
      dimension dty6(35), dty7(35), dty8(35), dty9(35), dty10(35)
      dimension dty11(35), dty12(35), dty13(35)
      equivalence (rat(1,1), dty1(1))
      equivalence (rat(1,2), dty2(1))
      equivalence (rat(1,3), dty3(1))
      equivalence (rat(1,4), dty4(1))
      equivalence (rat(1,5), dty5(1))
      equivalence (rat(1,6), dty6(1))
      equivalence (rat(1,7), dty7(1))
      equivalence (rat(1,8), dty8(1))
      equivalence (rat(1,9), dty9(1))
      equivalence (rat(1,10), dty10(1))
      equivalence (rat(1,11), dty11(1))
      equivalence (rat(1,12), dty12(1))
      equivalence (rat(1,13), dty13(1))
!       rho*/rho=cf:  log10(cf) for log10(r)=-3.84 to 1.6 step .16
!    proton 10**14 ev rho(pb.5fe.1sc3.5)/lee s=0.4
      data (dty1  (i),i=   1,  35)/
     1 -1.398, -1.320, -1.176, -1.020, -0.905, -0.761, -0.641, -0.545,
     2 -0.461, -0.383, -0.335, -0.275, -0.221, -0.173, -0.107, -0.065,
     3 -0.023,  0.014,  0.074,  0.224,  0.368,  0.542,  0.734,  0.884,
     4  1.071,  1.245,  1.401,  1.635,  1.809,  1.947,  2.068,  2.116,
     5  2.152,  2.152,  2.158/
!    s=0.5
      data (dty2  (i),i=   1,  35)/
     1 -1.002, -0.857, -0.725, -0.647, -0.575, -0.515, -0.461, -0.407,
     2 -0.359, -0.317, -0.263, -0.215, -0.149, -0.095, -0.047, -0.017,
     3 -0.011, -0.005,  0.026,  0.116,  0.212,  0.368,  0.512,  0.668,
     4  0.818,  0.992,  1.155,  1.323,  1.491,  1.611,  1.725,  1.809,
     5  1.839,  1.857,  1.863/
!    s=0.6
      data (dty3  (i),i=   1,  35)/
     1 -0.899, -0.779, -0.677, -0.575, -0.473, -0.395, -0.329, -0.287,
     2 -0.227, -0.185, -0.131, -0.107, -0.077, -0.047, -0.029, -0.023,
     3 -0.017, -0.011,  0.008,  0.044,  0.074,  0.128,  0.230,  0.350,
     4  0.500,  0.686,  0.872,  1.047,  1.209,  1.341,  1.449,  1.551,
     5  1.629,  1.659,  1.665/
!    s=0.7
      data (dty4  (i),i=   1,  35)/
     1 -0.917, -0.743, -0.617, -0.503, -0.389, -0.293, -0.209, -0.149,
     2 -0.089, -0.053, -0.035, -0.023, -0.035, -0.041, -0.047, -0.065,
     3 -0.065, -0.053, -0.041, -0.017,  0.020,  0.080,  0.164,  0.296,
     4  0.422,  0.578,  0.728,  0.878,  1.059,  1.197,  1.323,  1.425,
     5  1.509,  1.551,  1.551/
!    s=0.8
      data (dty5  (i),i=   1,  35)/
     1 -0.881, -0.749, -0.623, -0.503, -0.395, -0.311, -0.233, -0.167,
     2 -0.119, -0.089, -0.065, -0.059, -0.059, -0.065, -0.065, -0.077,
     3 -0.083, -0.107, -0.107, -0.089, -0.041,  0.038,  0.092,  0.176,
     4  0.266,  0.386,  0.518,  0.644,  0.806,  0.998,  1.137,  1.263,
     5  1.341,  1.353,  1.365/
!    s=.9
      data (dty6  (i),i=   1,  35)/
     1 -1.194, -1.008, -0.833, -0.647, -0.497, -0.365, -0.269, -0.191,
     2 -0.125, -0.083, -0.053, -0.053, -0.047, -0.059, -0.077, -0.083,
     3 -0.077, -0.077, -0.089, -0.107, -0.095, -0.053,  0.008,  0.098,
     4  0.182,  0.284,  0.386,  0.500,  0.602,  0.716,  0.830,  0.920,
     5  1.005,  1.059,  1.065/
!    s=1.0
      data (dty7  (i),i=   1,  35)/
     1 -1.386, -1.218, -1.014, -0.827, -0.641, -0.485, -0.359, -0.251,
     2 -0.173, -0.107, -0.071, -0.041, -0.047, -0.047, -0.065, -0.071,
     3 -0.077, -0.089, -0.101, -0.113, -0.107, -0.083, -0.035,  0.026,
     4  0.116,  0.212,  0.338,  0.458,  0.542,  0.608,  0.656,  0.698,
     5  0.728,  0.752,  0.758/
!    s=1.1
      data (dty8  (i),i=   1,  35)/
     1 -1.386, -1.188, -1.020, -0.821, -0.635, -0.491, -0.371, -0.269,
     2 -0.197, -0.137, -0.095, -0.065, -0.047, -0.053, -0.065, -0.077,
     3 -0.095, -0.107, -0.113, -0.125, -0.113, -0.089, -0.053,  0.002,
     4  0.074,  0.176,  0.272,  0.362,  0.458,  0.518,  0.554,  0.566,
     5  0.554,  0.500,  0.410/
!    s=1.2
      data (dty9  (i),i=   1,  35)/
     1 -1.404, -1.284, -1.152, -0.977, -0.797, -0.635, -0.473, -0.365,
     2 -0.263, -0.185, -0.125, -0.095, -0.071, -0.065, -0.077, -0.089,
     3 -0.095, -0.101, -0.107, -0.119, -0.119, -0.107, -0.083, -0.029,
     4  0.038,  0.098,  0.188,  0.284,  0.362,  0.434,  0.458,  0.446,
     5  0.416,  0.326,  0.194/
!    s=1.3
      data (dty10 (i),i=   1,  35)/
     1 -1.398, -1.344, -1.295, -1.163, -0.953, -0.744, -0.581, -0.425,
     2 -0.317, -0.233, -0.173, -0.143, -0.125, -0.112, -0.118, -0.118,
     3 -0.117, -0.123, -0.135, -0.140, -0.140, -0.128, -0.115, -0.067,
     4 -0.007,  0.065,  0.143,  0.216,  0.294,  0.348,  0.360,  0.325,
     5  0.253,  0.158,  0.026/
!    s=1.4
      data (dty11 (i),i=   1,  35)/
     1 -1.470, -1.391, -1.307, -1.205, -1.031, -0.863, -0.713, -0.557,
     2 -0.413, -0.305, -0.215, -0.161, -0.125, -0.106, -0.094, -0.100,
     3 -0.105, -0.111, -0.117, -0.140, -0.128, -0.110, -0.097, -0.079,
     4 -0.013,  0.035,  0.107,  0.192,  0.270,  0.294,  0.288,  0.253,
     5  0.181,  0.050, -0.082/
!    s=1.5
      data (dty12 (i),i=   1,  35)/
     1 -1.446, -1.355, -1.295, -1.247, -1.163, -1.073, -0.875, -0.659,
     2 -0.485, -0.347, -0.257, -0.191, -0.142, -0.112, -0.112, -0.106,
     3 -0.111, -0.117, -0.135, -0.140, -0.134, -0.128, -0.103, -0.067,
     4 -0.019,  0.017,  0.066,  0.168,  0.216,  0.246,  0.234,  0.181,
     5  0.091, -0.058, -0.201/
!    s=1.6
      data (dty13 (i),i=   1,  35)/
     1 -1.559, -1.499, -1.445, -1.403, -1.307, -1.217, -1.084, -0.749,
     2 -0.533, -0.395, -0.305, -0.227, -0.184, -0.154, -0.142, -0.160,
     3 -0.153, -0.165, -0.165, -0.158, -0.158, -0.152, -0.127, -0.097,
     4 -0.055, -0.001,  0.060,  0.108,  0.162,  0.210,  0.205,  0.151,
     5  0.050, -0.106, -0.297/
!         effective s
!c       rs=1. - 1./(1. + exp(r-8.))
!c       si=s*( -0.0285 *log10(e0/100.)*rs + 1.)
       si = s
       if(si .lt. .3) then
         si=.3
       elseif(si .gt. 1.7) then
         si=1.7
       endif
       if(r .lt. 1.e-4) then
          ri=1.e-4
       elseif(r .gt. 70.) then
          ri=70.
       else
          ri=r
       endif
!c       if(ri .gt. 8.) then
!c           c=-3.5*(cosz-1.) + 1.
!c           ri=(ri-8.)*c   + 8.
!c       endif
       ri=log10(ri)
!
       call
     * k4ptdis(rat, 35, 13, 35, -3.80, 0.4, .158, .1, ri, si,    ans)
       cf=10.**(ans)
       end
!        kdig: rho(*,>de)   for fe.1sc3.5  for gamma shower
!        kdip:       //     for fe.1sc3.5 for proton shower
!
!        **********************************************************
!        *
!        * kdig:   normalized lateral distribution of particles
!        *         which give >de  in scintillator of 3.5 cm thick
!        *         under  .1cmfe.
!        *         this is for gamma shower
!        **********************************************************
!
! call kdig(e0, zob, cosz, s, de,  j1, r,  rho)
!
!    e0:  input. 1ry energy in tev
!   zob:  input. observation depth
!  cosz:  input. cos of the zenith angle
!     s:  input. age of the shower
!    de:  input. minimum energy deposit in scintilattor (mev)
!    j1:  input. if all of the above parameters are the same as the
!                previous call, give 1
!                else 0.
!     r:  input. distance from the shower axis in moliere unit.
!                moliere unit should be the one obtained by
!                kmolu.
!   rho:  output. density of particles which give de>0 in scinti.
!                (in unit of (m.u)**-2)
!                rho is normalized so that int(rho*2pi r dr)=1.
!                the actual density is obtained by multipling by
!                n(>de)= ne*enfancement factor*m
!                where m is obtained by  integrating rho*cf*p(>de)
!                *2pirdr.
!
       subroutine kdig(e0, zob, cosz, s, de, j1,  r,  rho)
!
          external kcfg, kide
           if(j1 .eq. 0) then
              call knrml(e0, zob, cosz, s, de, kcfg, kide, sum)
           endif
           call klee(s, r, rhone)
           call kcfg(e0, cosz, s, r, cf)
           call kide(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr/sum
       end
!            the next is for fe.1sc3.5 for proton shower
       subroutine kdip(e0, zob, cosz, s, de, j1,  r, rho)
          external kcfp, kide
           if(j1 .eq. 0) then
              call knrml(e0, zob, cosz, s, de, kcfp, kide, sum)
           endif
           call klee(s, r, rhone)
           call kcfp(e0, cosz, s, r, cf)
           call kide(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr/sum
       end
!    to test kdigb or  kdipb
!
!        kdigb:   rho*(>de) for pb.5fe.1sc3.5 for gamma shower
!        kdipb:      //     for pb.5fe.1sc3.5 for proton shower
!
!        **********************************************************
!        *
!        * kdigb:  normalized lateral distribution of particles
!        *         which give >de  in scintillator of 3.5 cm thick
!        *         under  .5cmpb and .1cmfe.
!        *         this is for gamma shower
!        **********************************************************
!
! call kdigb(e0, zob, cosz, s, de,  j1, r,  rho)
!
!    e0:  input. 1ry energy in tev
!   zob:  input. observation depth
!  cosz:  input. cos of the zenith angle
!     s:  input. age of the shower
!    de:  input. minimum energy deposit in scintilattor (mev)
!    j1:  input. if all of the above parameters are the same as the
!                previous call give 1, else 0
!     r:  input. distance from the shower axis in moliere unit.
!                moliere unit should be the one obtained by
!                kmolu.
!   rho:  output. density of particles which give de>0 in scinti.
!                (in unit of (m.u)**-2)
!
       subroutine kdigb(e0, zob, cosz, s, de, j1, r,  rho)
!
         external kcfgb, kideb
           if(j1 .eq. 0) then
              call knrml(e0, zob, cosz, s, de, kcfgb, kideb, sum)
           endif
           call klee(s, r, rhone)
           call kcfgb(e0, cosz, s, r, cf)
           call kideb(e0, zob, s, cosz, j1, r, de, fr)
           rho=rhone*cf*fr/sum
       end
!            the next is for pb.5fe.1sc3.5  ; proton shower
       subroutine kdipb(e0, zob, cosz, s, de, j1,  r,  rho)
         external kcfpb, kideb
          if(j1 .eq. 0) then
              call knrml(e0, zob, cosz, s, de, kcfpb, kideb, sum)
          endif
          call klee(s, r, rhone)
          call kcfpb(e0, cosz, s, r, cf)
          call kideb(e0, zob, s, cosz, j1, r, de, fr)
          rho=rhone*cf*fr/sum
       end
!         ***********************************************************
!         *
!         * kefg: enfancement factor for gamma showers
!         *        ne'/ne for     fe.1sc3.5 case.  ne=# of electrons
!         *        with > 1mev.
!         *        ne' is the # of particles giving de>0 in
!         *        the scinti.
!         * kefp: the same as above for proton shower
!         *
!         *       note that this is obtained by emin(g)=2mev.  since
!         *       single ptcl de=7 mev,  we need lower emin(g) if the
!         *       threshold should be less than .2 ptcl level.
!         *       to have emin(g)=1 mev case, we need to increase the
!         *       ef by  factor .125(s-1.)+1.15
!         *       (lateral is affected also slightly)
!         *       kideg must be modified also.
!         *
!         ***********************************************************
!
!    call kefg(cosz, s, ef)
!  cosz:input.  cos of zenith angle
!     s:input.  age of the shower
!    ef:output. enfancement factor.
!
          subroutine kefg(cosz, s, ef)
!               for cosz=1.
              r= 1.012 + .4645*s
!                cosz correction (verified upto cos=.7)
!                for s< 1. should be examined.)
              ef=1. + (r-1.)/cosz
          end
          subroutine kefp(cosz,s, ef)
!               use same as kefg
!               for cosz=1.
              r= 1.012 + .4645*s
!                cosz correction
!                for s< 1. should be examined.)
              ef=1. + (r-1.)/cosz
          end
!         ***********************************************************
!         *
!         * kefgb: enfancement factor for gamma showers
!         *        ne'/ne for pb.5fe.1sc3.5 case.  ne=# of electrons
!         *        with > 1mev.
!         *        ne' is the # of particles giving de>0 in
!         *        the scinti.
!         * kefpb: the same as above for proton shower
!         *
!         *       note that this is obtained by emin(g)=2mev.  since
!         *       single ptcl de=7 mev,  we need lower emin(g) if the
!         *       threshold should be less than .2 ptcl level.
!         *       to have emin(g)=1 mev case, we need to increase the
!         *       ef by  factor 1.1
!         *       (lateral is affected also slightly)
!         *       kidegb must be modified also.
!         ***********************************************************
!
!    call kefgb(cosz, s, ef)
!  cosz:input.  cos of zenith angle
!     s:input.  age of the shower
!    ef:output. enfancement factor.
!
          subroutine kefgb(cosz, s, ef)
!               for cosz=1.
              r=( .383*s -0.1389)*s + 1.79
!                cosz correction ( verified uptp cos=0.7)
              ef=1. - (1.-cosz)* 0.575 + (r-1.)/cosz
          end
          subroutine kefpb(cosz,s, ef)
!               use same as kefgb
!               for cosz=1.
              r=( .383*s -0.1389)*s + 1.79
!                cosz correction
              ef=1. - (1.-cosz)* 0.575 + (r-1.)/cosz
          end
!       **********************************************************
!       *
!       *  kfrac: get fraction of a.s particles with
!       *         scintillator output > pmin( equivalent ptcl #)
!       *
!       **********************************************************
!  call kfrac(jsc, k, e0, zob, cosz,  s, pmin, frac)
!   jsc: input.  1---> fe.1sc3.5
!                2---> pb.5fe.1sc3.5
!     k: input.  0---> gamma 1ry
!                1---> proton 1ry
!    e0: input. 1ry energy in tev
!   zob: input. observation depth (vertical) (in g/cm**2)
!  cosz: input. cos of 1ry zenith angle
!     s: input. age of the shower
!  pmin: input. minimum of scintillator output in equivalent ptcl #.
!
!  frac: output. fraction of a.s ptcls with scintillator output >
!                pmin
!        frac= integral of ( 2pi r  rho'  p(>de) dr )
!
        subroutine kfrac(jsc, k, e0, zob, cosz,  s, pmin,  frac)
      include "Zascns"
          external kcfp, kide
          external kcfg, kcfpb
          external kcfgb, kideb
          if(pmin .eq. 0.) then
              frac=1.
          else
              if(jsc .eq. 1) then
!                     fe.1sc3.5
                  demin=pmin*eqvo1
                  if(k .eq. 0) then
                      call knrml(e0, zob, cosz,  s, demin, kcfg,
     *                kide,  frac )
                  elseif(k .eq. 1) then
                      call knrml(e0, zob, cosz,   s, demin, kcfp,
     *                kide,   frac )
                  endif
               elseif(jsc .eq. 2) then
                   demin=pmin*eqvo2
                   if(k .eq. 0) then
                       call knrml(e0, zob, cosz,  s, demin, kcfgb,
     *             kideb, frac )
                   elseif(k .eq. 1) then
                       call knrml(e0, zob, cosz,  s, demin, kcfpb,
     *             kideb, frac )
                   endif
               endif
           endif
        end
!      *********************************************************
!      *
!      * kide: get fraction of particles which gives energy
!      *        deposit in scintillater >= given value.
!      ***************************************************
!        scinti : 3.5 cm thick under  .1 cm fe.
!
       subroutine kide(e0, zob, s, cosz, j1, rr, de, fr)
!        e0: input.  1ry energy of gamma in tev
!       zob: input.  observation depth (g/cm**2) (vetical)
!         s: input.  age of the shower
!      cosz: input.  cos of the zenith angle of the shower
!        j1: input.  0--> some of the above parameters are not equal to
!                         those in previous call.
!                    ^=0-->all above parameters are equal to those
!                          in the previous call.
!       de: input.   energy deposit in scintillater.  in mev
!       rr: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zascns"
            data ssave/5./
            save ssave, rcnv, um1, um2
!
            if(j1 .eq. 0) then
!                 new parameters
                if(abs(s/ssave-1.) .gt. smarg)  then
                   ssave=s
!                     um1=m.u (2 r.l above the observation depht,
!                     along the 1ry direction) (in m)
                   call kmolu(zob, cosz, um1)
!                     um2=m.u  (same as above) for the depth where
!                    the standard shower takes the same age (=s) as the
!                     currently considered shower.
                   call stzss(s, z)
                   call kmolu(z, cosz, um2)
!                     ssmu is in Zascns (standard shower m.u)
                   rcnv= sqrt( ssmu * um2)/um1
                endif
            endif
            if(de .gt. 0.) then
!                  effective r
                r=rr* rcnv
                if(e0 .lt. .1) then
                    r=r+10.
                endif
                if(cosz .gt. .9) then
!                      use vertical one
                    deo=de*cosz
                    call kide1(deo, r, fr)
                elseif(cosz .gt. .75) then
!                      use cos=0.8
                    deo=de*cosz/0.8
                    call kide2(deo, r, fr)
                else
!                      use cos=.7
                    deo=de*cosz/0.7
                    call kide3(deo, r, fr)
                endif
            else
                fr=1.
            endif
        end
!      *********************************************************
!      *
!      * kideb: get fraction of particles which gives energy
!      *        deposit in scintillator >= given value.
!      ***************************************************
!        scinti : 3.5 cm thick under 0.5cmpb and .1 cm fe.
!
       subroutine kideb(e0, zob, s, cosz, j1, rr, de, fr)
!        e0: input.  1ry energy of gamma in tev
!       zob: input.  observation depth (g/cm**2) (vetical)
!         s: input.  age of the shower
!      cosz: input.  cos of the zenith angle of the shower
!        j1: input.  0--> all above parameters are not equal to
!                         those in previous call.
!                    ^=0-->all above parameters are equal to those
!                          in the previous call.
!       de: input.   energy deposit in scintillater.  in mev
!       rr: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zascns"
!
            data ssave/5./
            save ssave, um1, um2, rcnv
            if(j1 .eq. 0) then
!                 new parameters
                if(abs(s/ssave-1.) .gt. smarg) then
                    ssave=s
!                      um1=m.u (2 r.l above the observation depht,
!                      along the 1ry direction) (in m)
                    call kmolu(zob, cosz, um1)
!                     um2=m.u  (same as above) for the dpeth where
!                    the standard shower takes the same age (=s) as the
!                     currently considered shower.
                    call stzss(s, z)
                    call kmolu(z, cosz, um2)
                    rcnv= sqrt( ssmu * um2)/um1
                endif
            endif
            if(de .gt. 0.) then
!                  effective r; ssmu is in Zascns (standard shower m.u)
                r=rr* rcnv
                if(e0 .lt. .1) then
                    r=r+10.
                endif
                if(cosz .gt. .9) then
!                      use vertical one
                    deo=de*cosz
                    call kideb1(deo, r, fr)
                elseif(cosz .gt. .75) then
!                      use cos=0.8
                    deo=de*cosz/0.8
                    call kideb2(deo, r, fr)
                else
!                     use cos=0.7
                    deo=de*cosz/0.7
                    call kideb3(deo, r, fr)
                endif
            else
                fr=1.
            endif
        end
      subroutine kideb1(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zdegb"
!
      if(r .gt. 1780.) then
         rr=1333.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j-1)-e2(l,j-1)) * (de-e2(l,j-1))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
      subroutine kideb2(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zdegb2"
!
      if(r .gt. 3162.) then
         rr=2371.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
      subroutine kideb3(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zdegb3"
!
      if(r .gt. 3162.) then
         rr=2371.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
      subroutine kide1(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zdeg"
!
!
      if(r .gt. 1780.) then
!          better not to use r>1780
         rr=1333.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j-1)-e2(l,j-1)) * (de-e2(l,j-1))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
      subroutine kide2(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
      include "Zdeg2"
!
!
      if(r .gt. 1780.) then
         rr=1333.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j-1)-e2(l,j-1)) * (de-e2(l,j-1))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
      subroutine kide3(de, r, fr)
!       de: input.   energy deposit in scintillater.  in mev
!        r: input.   distance from the core in m
!       fr: output.  fraction of particles > de at r.
!
!             cos=.7
      include "Zdeg3"
!
!
      if(r .gt. 1780.) then
         rr=1333.
      else
         rr=r
      endif
      if(rr .lt. 15.) then
          j=rr/5. + 1
      elseif(rr .lt. 25.) then
          j=4
      elseif(rr .lt. 50.) then
          j=5
      elseif(rr .lt. 150.) then
          j=(rr-50.)/50.+6
      endif
      if(rr .ge. 150.) then
          rl=log10(rr)
          j=(rl-2.)*4. +1
          call kfrges(e2(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e2(l+1,j)-e2(l,j)) * (de-e2(l,j)) + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 1) then
                  call kfrges(e1(1,7), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,7)-e1(l,7)) * (de-e1(l,7)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/13.9* (rr-139.)+ fr
              else
                  call kfrges(e2(1, j-1), 1, 101, de, l, icon)
                  tmp=0.01/(e2(l+1,j-1)-e2(l,j-1)) * (de-e2(l,j-1))
     *             + (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr-fr2)/.25 * (rl- (j-1)*.25-2.125) + fr
              endif
          endif
      else
          call kfrges(e1(1, j), 1, 101, de, l, icon)
          if(icon .ne. 0) then
              fr=0.
          else
              tmp=0.01/(e1(l+1,j)-e1(l,j)) * (de-e1(l,j))
     *        + (l-1)*0.01
              fr=1.-tmp
              if(j .eq. 2 )then
                  call kfrges(e1(1,1), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,1)-e1(l,1)) * (de-e1(l,1)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-7.5) + fr
              elseif(j .eq. 1 )then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr= (fr2-fr)/5. * (rr-2.5) + fr
              elseif(j .eq. 3) then
                  call kfrges(e1(1,2), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,2)-e1(l,2)) * (de-e1(l,2)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/5. * (rr-12.5)+ fr
              elseif(j .eq. 4) then
                  call kfrges(e1(1,3), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,3)-e1(l,3)) * (de-e1(l,3)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/7.5 * (rr-20.)+ fr
              elseif(j .eq. 5) then
                  call kfrges(e1(1,4), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,4)-e1(l,4)) * (de-e1(l,4)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/17.5* (rr-37.5)+ fr
              elseif(j .eq. 6) then
                  call kfrges(e1(1,5), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,5)-e1(l,5)) * (de-e1(l,5)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/37.5* (rr-75.)+ fr
              elseif(j .eq. 7) then
                  call kfrges(e1(1,6), 1, 101, de, l, icon)
                  tmp=0.01/(e1(l+1,6)-e1(l,6)) * (de-e1(l,6)) +
     *            (l-1)*0.01
                  fr2=1.-tmp
                  fr=-(fr2-fr)/50.* (rr-125.)+ fr
               endif
          endif
      endif
      end
!<<<<<<<<<<<<<<<<<<<<<<<<<<< kklibg <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
!     ****************************************************************
!     *                                                              *
!     * kintp3s:  lagrange's 3-point interpolation                    *
!     *                                                              *
!     ************************ tested 87.03.07 ***************k.k ****
!
!    /usage/   call kintp3s(f, intv, n, x1,h,x, ans)
!
!     f:  table of some function values to be interpolated
!  intv:  f is used with step intv
!     n:  # of available f
!    x1:  f containes the function values at x1, x1+h,...x1+(n-1)*h
!     h:  interval of argument
!     x:  argument at which the value of the function is to be obtained
!
!   ans:  interpolated value
!
      subroutine kintp3s(f, intv, n, x1, h, x, ans)
!
!      dimension f(intv, n)
!          (  , *) is to avoid possible warning at debug time
       dimension f(intv, *)
!
      if(n .lt. 3) then
          ans=0.
      else
          i=(x-x1)/h
          if(i .lt. 0) then
              i=0
          elseif(i .gt. 0) then
              if(i+3 .gt. n) then
                 i=n-3
              endif
          endif
          p=(x-x1-h*float(i+1))/h
          ta=p-1.
          tb=p+1.
          ans=0.5*p*(ta*f(1, i+1)+tb*f(1, i+3)) - ta*tb*f(1, i+2)
      endif
      end
!     ****************************************************************
!     *                                                              *
!     *  kfrges: find real data (position) .ge. given value           *
!     *                                                              *
!     ***********************  tested 87.06.07  **********************
!
!   /usage/
!          call kfrges(x, intvx, n, c, l, icon)
!
!     x:  data array
! intvx:  interval of data in x
!     n:  !n! is no. of data in x
!     c:  given value.  x  .ge.  c is sought for.
!     l:  position of xf in x.  xf=x(1,m)
!  icon:  0 if found else 1
!
! *** note ***
!         if n>0 search is made for from 1st, else from last
!         if icon=1 resluts, m will be n+1 or 0 dependingon n>0 or
!         n<0.
!
!
      subroutine kfrges(x, intvx, n, c, m, icon)
!
!     dimension x(intvx, n)
!          (  , *) is to avoid possible warning at debug time
      dimension x(intvx, *)
!
      if( n .gt. 0 ) then
          do 10 i=1, n
             if(x(1,i) .ge. c) then
                 m=i
                 icon=0
                 goto 100
             endif
   10     continue
          icon=1
          m=n+1
      elseif(n .lt. 0) then
          do 20 i=-n, 1, -1
              if(x(1,i) .ge. c) then
                  m=i
                  icon=0
                  goto 100
              endif
   20     continue
          m=0
          icon=1
      else
          icon=1
      endif
  100 continue
      end
!     ****************************************************************
!     *                                                              *
!     *   kgausss: generates 2 independent gaussian random variables  *
!     *                                                              *
!     ****************************************************************
!
!  /usage/
!                call kgausss(av, s, x1, x2)
!
!     av:  average of gaussian distribution
!      s:  standard deviation //
!  x1,x2:  obtained 2 independent gaussian random variables
!
!
!   method:
!             generate following two:
!             sqrt(-log(u)) * cos(p) and  sqrt(-log(u)) * sin(p)
!             then, they are independent gaussian radom variables
!             with mean 0 and variance 1.  here, u is uniform random
!             number in (0,1), and p in (0,2pi)
!        *** note ***  establish condition for rndc usage, if want to
!                      select one of rnd or rnd2.
!
!
      subroutine kgausss(av,s,x1,x2)
!
!
!           ..... do until ....
   20    continue
             call rndcsng(u1)
             call rndcsng(u2)
!              generate cos(p) and sin(p)
             u1=u1+u1-1.
             u1s=u1*u1
             u2s=u2*u2
             tmp=u1s+u2s
         if(.not.
     *               (tmp .lt. 1.)
     *   ) goto 20
!            ... end until ...
         call rndcsng(u3)
         al=alog(u3)
         al=sqrt(-al-al)
         cs=(u1s-u2s)/tmp
         sn=u1*u2/tmp
         sn=sn+sn
         x1=al*cs*s+av
         x2=al*sn*s+av
      end
!     ****************************************************************
!     *                                                              *
!     * k4ptdis:  4-point two dimensional interpolation               *
!     *                                                              *
!     ****************************************************************
!
!   /usage/
!
!       call
!              k4ptdis(f, im, jm, iadj,  x0, y0, hx, hy, x, y, ans)
!
!     f is a 2-dimensional table of some function with 2 arguments.
!     f containes the function values at (x0,y0), (x0+hx, y0+hy),...
!     (x0+(im-1)*hx, y0+(jm-1)*hy).
!     iadj is the adjustable dimension.
!     ans gets the value of the funtion at (x,y)
!
!
!
      subroutine k4ptdis(f, im, jm, iadj, x0, y0, hx, hy, x, y, ans)
      dimension f(iadj,jm)
!
      a=(x-x0)/hx
      b=(y-y0)/hy
      i=a
      j=b
      i=min0(max0(i,0)+1,im-1)
      j=min0(max0(j,0)+1,jm-1)
      p=a+1.-i
      q=b+1.-j
      p1=1.-p
      q1=1.-q
      ans=( f(i,j)*p1 + f(i+1,j)*p ) * q1 +
     *                  ( f(i,j+1)*p1 + f(i+1,j+1)*p ) * q
      return
      end
!>>>>>>>>>>>>>>>>>>>>>>>>>>>> kklibg >>>>>>>>>>>>>>>>>>>>>>>>>>>>
!    ----- klee test (lateral of electrons by e primary 1.e14-15ev) ---
          subroutine klee(s, r, rho)
!            normalized electron lateral distribution for electron
!            primary in the atmsopere.
!            normalization is within 3 % accuracy.
!    s: input. age as determined by 1 dimensional cascade
!              .2 < s < 1.9
!    r: input. distance from the core in moliere unit (
!              m.u should be 2 r.l above
!              the depth ).
!              r>5.e-5
!    rho: output. electron density. integral of 2pi*r* rho(r) dr from
!            5.e-5 to inf = 1.
!
            parameter (p2=.15, p3=.6, pi=3.1415, tpi=2*pi)
!
               p1=10.**(  (((-0.75222*s+4.4412)*s-10.447)*s +11.531)*s
     *                     -3.8637 )
               p4= (.49803*s-2.4992)*s+1.8372
               p5=2.4235 - 0.37908*s
               if(r .gt. 0.) then
                  rho= p1 * r**(-p4) * (1.+ r/p2)**(-p3*log10(r)-p5)
     *              /tpi/r
               else
                  rho=0.
               endif
          end
!            get moliere unit (in m) at 2 r.l above dep along cosz
!            direction.
!         dep: input. g/cm**2
!        cosz: input. cos of zenith angle.
!         rmu: output. obtained moliere unit in m
       subroutine kmolu(dep, cosz, rmu)
          real*8 ddep   ! in kg/m2
          real*8 dcosz  
          real*8 dmu
          ddep = dep * 10.
          dcosz = cosz
          call cgetMoliereU(ddep, dcosz, dmu)
          rmu = dmu
       end
!        ***************************************************
!        *
!        * knrml: to get integral of lateral for kdig, kdigb, kdip
!        *        kdipb
!        * lateral for gamma or proton shower as generated
!        *     by pb.5fe.1sc3.5 (kdigb, kdipb) or
!        *     by fe.1sc3.5 (kdig, kdip)
!        *
!        *
!        ***************************************************
!
         subroutine knrml(e0, zob, cosz, s, de, kcfx, kidx, sum)
!
!          kcfx: subroutine name.
!                  kcfg for kdig (lateral for gamma with fe.1sc3.5)
!                  kcfp for kdip (//          proton //)
!                  kcfgb for kdigb (//    for gamma with pb.5fe.1sc3.5)
!                  kcfpb for kdipb (//    for proton with pb.5fe.1sc3.5)
!          kidx: subroutine name
!                  kide for kdig, kdip
!                  kideb for kdigb, kdipb

          external kcfx, kidx

              sum=0.
              sumuni=0.
              call kmolu(zob, cosz, rmu)
              if(s .gt. .65) then
                 r2=1.e-4
                 dr=.1
                 imx= 57
                 jmodx=2
              else
                 r2=3.e-5
                 dr=.05
                 imx=100
                 jmodx=4
              endif
              dr10=10.**dr
              do 100 i=1, imx
                  r1=r2
                  r2=r1*dr10
                  rr=(r1+r2)/2
!                   get ne density
                  call klee(s,rr, rhone)
!                   get correction factor  rho'/rho
                  call kcfx(e0, cosz, s, rr, cf)
!                   get  fraction of particles at rr with >de.
!                     r should be in m
                  if(de .eq. 0.) then
                     fr=1.
                  else
!                         fr changes slowly with r.
                     if(mod(i-1,jmodx) .eq. 0) then
                        call kidx(e0, zob, s, cosz, 0,  rr*rmu, de, fr)
                     endif
                  endif
                  tmp=rhone*cf
                  sumuni=sumuni+ tmp*(r2-r1)*(r1+r2)
                  rhou=tmp*fr
                  sum=sum + rhou*(r2-r1)*(r1+r2)
  100         continue
!             sumuni=sumuni*3.1415
!                sumuni should be 1. but not, so renormalize
!             sum=sum*3.1415/sumuni
              sum=sum/sumuni
         end
!
         subroutine knrml2(e0, zob, cosz, s, discle,  kcfx, kidx, sum)
!
!             rho(r)*<de> 2pir dr is integrated to give sum,
!            where rho(r) is the density of ptcls which give rise
!            to energy deposit in scinti
!          kcfx: subroutine name.
!                  kade for lateral with fe.1sc3.5 (gamma, proton)
!                  kadeb for lateral with pb.5fe.1sc3.5(// )
!          kidx: subroutine name
!                  kdig for lateral by gamma with fe.1sc3.5
!                  kdigb for //                   pb.5fe.1sc3.5
!                  kdip for lateral by proton with fe.1sc3.5
!                  kdipb //                       pb.5fe.1sc3.5

          external kcfx, kidx

              sum=0.
              call kmolu(zob, cosz, rmu)
              if(s .gt. .65) then
                 r2=1.e-4
                 dr=.1
                 imx= 57
                 jmodx=2
              else
                 r2=3.e-5
                 dr=.05
                 imx=100
                 jmodx=4
              endif
              dr10=10.**dr
              do 100 i=1, imx
                  r1=r2
                  r2=r1*dr10
                  rr=(r1+r2)/2
!                   get ptcl density
                  call kidx(e0, zob, cosz, s, discle, 1, rr, rho)
!                   get average <de>
                  call kcfx(e0, zob, s, cosz,   rr*rmu, avde)
                  rhou=rho*avde
                  sum=sum + rhou*(r2-r1)*(r1+r2)
  100         continue
              sum=sum*3.1415
         end
!        **********************************************************
!        *
!        *  STZSS: S(AGE) TO Z(DEPTH) OF THE STANDARD SHOWER
!        *  ZTSSS: Z(DEPTH) TO S(AGE) //
!        *
!        **********************************************************
!
! ** DEPTH  (G/CM**2) SHOULD BE TAKEN AS A SLANT ONE IF INCIDENT
!            IS INCLINED.
!
        SUBROUTINE STZSS(S, Z)
!
!          LOG10(150 (TEV))
           DATA ELGS/2.175/
!
!            GET COG NORMALIZED DETPH (STANDARD IS ELECTRON OF 100 TEV)
!            WITH Z0=50 G/CM**2.(S=1.075)  WE MAY USE GAMMA ROUTINE
!            WITH  150  TEV. (S=1.075===>Z=600)
           CALL STNDG(ELGS, S, Z)
!             GET <COG> DEPTH (EXCLUDE 1ST POINT)
           CALL COGG0(ELGS, COG)
!             ADD 50 G/CM**2
           Z=Z + COG + 50.
           IF(Z .LE. 0.) THEN
               Z=5.
           ENDIF
         END
      SUBROUTINE STNDG(ELG, S, Z)
!            S(AGE) TO NORMALIZED DEPTH (COG NORMALZIED)
!       ELG: INPUT.  LOG10(EG/TEV)
!         S: INPUT.  AGE  (.4 TO 1.7)
!         Z: OUTPUT. NORMALZIED DEPTH (COG SUBTRACTED ; G/CM**2)
!
        IF(S .LT. 0.9) THEN
            A1=-81.
            B1=72.
            C1=0.
            A2=-618.
            B2=588.5
            C2=0.
        ELSE
!           A2=-355.46
!           B2=94.706
!           C2=216.07
!                  CORRECTED BY SMALL AIR SHOWER BY DIRECT SIM.
            A2=-214.5
            B2=-191.1
            C2=355.6
!           IF(S .LT. 1.1) THEN
!                  CORRECTED BY SMALL AIR SHOWER BY DIRECT SIM.
            IF(S .LT. 1.3) THEN
!               A1=-150.3
!               B1=150.3
                A1=-156.5
                B1=156.5
                C1=0.
            ELSE
!               A1=70.52
!               B1=-229.3
!               C1=162.5
!                  CORRECTED BY SMALL AIR SHOWER BY DIRECT SIM.
                A1=-219.5
                B1=205.0
                C1=0.
            ENDIF
        ENDIF
        Z=(( C1*S + B1)*S + A1 )*ELG + (C2*S+B2)*S+ A2
      END
      SUBROUTINE COGG0(EL, COG)
           COG=85.4*EL + 347.5
      END

