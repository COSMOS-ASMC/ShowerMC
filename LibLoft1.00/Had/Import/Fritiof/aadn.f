c$$$$$$$$$$$$$$$$$$ changes
c         lamda, lamda_bar and sigma are decayed
c         hadxscC is added to get total x-section
c         nstab=25 (orig; 23)
c           gauss--->aagausC
c       n and itta combination is enlarged to include
c       those not directly tabulated ones
c$$$$$$$$$$$$$$$$$$$$$$$
      subroutine hadrinC(n,plab,elab,cx,cy,cz,itta)
#include "Zmsg.h"
      integer*2ich,ibar,k1,k2,nzk,nrk,ieii,ikii,nure
      common /gamredC/ redu,amo,amm(15 )
c
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh(268)
      common/reacC/umo(296),plabf(296),siin(296),wk(5184),
     *nrk(2,268),nure(30,2)
      common /abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common /splitC/nzk(460,3),wt(460)
      common /metlspC/ is,its(10),cxs(10),cys(10),
     *czs(10),els(10),pls(10)
     *,cod1,cod2,cod3,cof1,cof2,cof3,sif1,sif2,sif3,ecm1,ecm2,ecm3,pcm1,
     *pcm2,pcm3
      common /finlspC/ ir,itr(20),cxr(20),
     *cyr(20),
     *czr(20),elr(20),plr(20)
      common /runC/ runtes,eftes
c ############################
      real * 8 vv, ww
c ##########################
      dimension itprf(110)
      data itprf/-1,-1,5*1,-1,-1,1,1,1,-1,-1,-1,-1,6*1,-1,-1,-1,85*1/
      data nnn/0/
      data umoda/0./
c
c-----------------------------
c*** input variables list:
c*** sampling of hadron nucleon interaction for (about) 0.1 le plab le 6
c*** gev/c laboratory momentum region
c**** n    - projectile hadron index
c*** plab - laboratory momentum of n (gev/c)
c*** elab - laboratory energy of n (gev)
c*** cx,cy,cz - direction cosines of n in the laboratory system
c*** itta - target nucleon index (p-->1, n-->8)
c*** output variables list of particle characteristics in /finlspC/
c  ir counts the number of produced particles
c*** itr - particle index, cxr,cyr,czr - direction cosines (lab. syst.)
c*** elr,plr lab. energy and lab. momentum of the sampled particle
c*** respect., units (gev/c and gev)
c----------------------------
       lowp=0
      if (itprf(  n  ).lt.0) go to 99999
      write (6,99998) n
      stop
99998 format (3(5h ****/),
     *45h false use of the particle type index, value ,i4,3(5h ****/))
99999 continue
      iatmpt=0
      if (abs(plab-5.).lt.4.99999) go to 99997
c  &&&&&&&&&&&&&&&&&&&
      write (errmsg, 99996) plab
      call cerrorMsg(errmsg, 1)
c  &&&&&&&&&&&&&&&&
c
99996 format (3(5h ****/),64
     *h projectile hadron momentum outside of the allowed region, plab=,
     *1e15.5/,3(5h ****/))
99997 continue
      umodat=n*1.11111+itta*2.19291
      if(umodat.ne.umoda) call calumoC(n,itta)
      umoda=umodat
1009  iatmpt=0
      lowp=lowp+1
 1000 continue
      imach=0
      redu=2.
      iw1=0.
      if (lowp.gt.20) go to 8
      nnn=n
      if (nnn.eq.n) go to 4322
      runtes=0.
       eftes=0.
 4322 continue
      is=1
      ir=0
      ist=1
      nstab=25
      ire=nure(n,1)
      if(itta.gt.1) ire=nure(n,2)
c
c-----------------------------
c*** ie,amt,ecm,si determination
c----------------------------
      call sigintC(ire,plab,n,ie,amt ,amn,ecm,si,itta)
         ianth=-1
         if (am(1).ne.0.93828) ianth=1
         if (ianth.ge.0) si=1.
         ecmmh=ecm
c
c-----------------------------
c    energy index
c  ire characterizes the reaction
c  ie is the energy index
c----------------------------
      if (si.lt.1.e-6) go to 8
c$$$$$$$$$$$$$$$$$
      if (n.le.23)    go to 1
c            17 and 18 are lambda lambda bar; they are decayed
c            20,21,22 are sigma ; they are decayed
c     if(n .eq. 19 .or. n .eq. 23) goto 1
c     if(n .le. 16) goto 1
c$$$$$$$$$$$$$$$$$$
      runtes=runtes+1.
      if (runtes.lt.20.) then
c\\\\\\   write(6,602)n
      endif
 602   format(3h n=,i10,30h the proektile is a resonance  )
      if(ibar(n).eq.1) n=8
      if(ibar(n).eq.-1)  n=9
   1   continue
      imach=imach+1
      if (imach.gt.10) go to 8
         ecm  =ecmmh
      amn2=amn**2
      amt2=amt**2
      ecmn=(ecm**2+amn2-amt2)/(2.*ecm    )
      if(ecmn.le.amn) ecmn=amn
      pcmn=sqrt(ecmn**2-amn2)
      gam=(elab+amt)/ecm
      bgam=plab/ecm
         if (ianth.ge.0) ecm=2.1
c
c-----------------------------
c*** random choice of reaction channel
c----------------------------
      ist=0
      call
     *rndc(vv)
      vv=vv-1.e-17
c
c-----------------------------
c***  place reduced version
c----------------------------
      iiei=ieii(ire)
      idwk=ieii(ire+1)-iiei
      iiwk=irii(ire)
      iiki=ikii(ire)
c
c-----------------------------
c***  shrinkage to the considered energy region for the use of weights
c----------------------------
      hecm=ecm
      humo=2.*umo(iiei+idwk)-umo(iiei+idwk-1)
      if (humo.lt.ecm) ecm=humo
c
c-----------------------------
c*** interpolation preparation
c----------------------------
      ecmo=umo(ie)
      ecm1=umo(ie-1)
      decm=ecmo-ecm1
      dec=ecmo-ecm
c
c-----------------------------
c*** random loop
c----------------------------
      ik=0
      vfw=vv
      wkk=0.
      wicor=0.
  111 ik=ik+1
      vfwo=wkk
      iwk=iiwk+(ik-1)*idwk+ie-iiei
      wok=wk(iwk)
      wdk=wok-wk(iwk-1)
c
c-----------------------------
c*** testvariable wico/wicor: if channel ik has the same weights like ik
c    go to next channel, because wkk((ik))-wkk((ik-1))=0, ik can not
c    contribute
c----------------------------
      if (plab.lt.plabf(iiei+2)) wdk=0.
      wico=wok*1.23459876+wdk*1.735218469
      if (wico.eq.wicor) go to 111
      if (umo(iiei+idwk).lt.hecm) wdk=0.
      wicor=wico
c
c-----------------------------
c*** interpolation in channel weights
c----------------------------
      eklim=-thresh(iiki+ik)
      ielim=iefunC(eklim,ire)
      delim=umo(ielim)+eklim
     *+1.e-16
      dete=(ecm-(ecmo-eklim)*.5)*2.
      if (delim*delim-dete*dete) 112,112,113
  113 decc=delim
      go to 114
  112 decc=decm
  114 continue
      wkk=wok-wdk*dec/(decc+1.e-9)
c
c-----------------------------
c*** random choice
c----------------------------
c
      if (vv.gt.wkk)go to 111
c
c***ik is the reaction channel
c----------------------------
      inrk=ikii(ire)+ik
      ecm=hecm
      i1001 =0
c
 1001 continue
      it1=nrk(1,inrk)
      am1=amgaC(it1)
      it2=nrk(2,inrk)
      am2=amgaC(it2)
      ams=am1+am2
      i1001=i1001+1
      if (i1001.gt.50) go to 1
c
      if (it2*ams.gt.it2*ecm) go to 1001
      it11=it1
      it22=it2
         if (ianth.ge.0) ecm=elab+amt+0.00001
      am11=am1
      am22=am2
      if (it2.gt.0) go to 401
c
c-----------------------------
c  inclusion of direct resonances
c  random choice of decay channels of the direct resonance  it1
c------------------------
      kz1=k1(it1)
      ist=ist+1
      ieco=0
      eco=ecm
      gam=(elab+amt)/eco
      bgam=plab/eco
      cxs(1)=cx
      cys(1)=cy
      czs(1)=cz
      go to 310
  401 continue
      call rndc(ww)
      if(ww.lt.0 .5) go to 902
      it1=it22
      it2=it11
      am1=am22
      am2=am11
  902   continue
c
c-----------------------------
c   the first particle is defined to be the forward going one at small t
      ibn=ibar(n)
      ib1=ibar(it1)
      it11=it1
      it22=it2
      am11=am1
      am22=am2
      if(ib1.eq.ibn) go to 901
      it1=it22
      it2=it11
      am1=am22
      am2=am11
 901   continue
c-----------------------------
c***it1,it2 are the created particles
c***momenta and direction cosina in the cm - system
c------------------------
      call twoparC(ecm1,ecm2,pcm1,pcm2,cod1,cod2,cof1,cof2,sif1,sif2,
     *it1,it2,ecm,ecmn,pcmn,n,am1,am2)
      ist=ist+1
      its(ist)=it1
      amm(ist)=am1
c
c-----------------------------
c***transformation into lab system and rotation
c----------------------------
      call trafoC(gam,bgam,cx,cy,cz,cod1,cof1,sif1,pcm1,ecm1,pls(ist),
     *cxs(ist),cys(ist),czs(ist),els(ist))
      ist=ist+1
      its(ist)=it2
      amm(ist)=am2
      call trafoC(gam,bgam,cx,cy,cz,cod2,cof2,sif2,pcm2,ecm2,
     * pls(ist),cxs(ist),cys(ist),czs(ist),els(ist))
  200 continue
c
c-----------------------------
c***test   stable or unstable
c----------------------------
      if(its(ist).gt.nstab) go to 300
c$$$$$$$$$$$$$$$$$$$$
c             lamda,lamda-bar, sigma are decayed
      if(its(ist) .eq. 17 .or. its(ist) .eq. 18) goto 300
      if(its(ist) .ge. 20 .and. its(ist) .le. 22) goto 300
c$$$$$$$$$$$$$$$$$$$$$$$$$$$
      ir=ir+1
c
c-----------------------------
c***ir is the number of the final stable particle
c----------------------------
      if (redu.lt.0.) go to 1009
      itr(ir)=its(ist)
       plr(ir)=pls(ist)
      cxr(ir)=cxs(ist)
      cyr(ir)=cys(ist)
      czr(ir)=czs(ist)
      elr(ir)=els(ist)
      ist=ist-1
      if(ist.ge.1) go to 200
         go to 500
  300 continue
c
c  random choice of decay channels
c----------------------------
c
      it=its(ist)
      eco=amm(ist)
      gam=els(ist)/eco
      bgam=pls(ist)/eco
      ieco=0
      kz1=k1(it)
  310 continue
      ieco=ieco+1
      call rndc(vv)
      vv=vv-1.e-17
      iik=kz1-1
  301 iik=iik+1
      if (vv.gt.wt(iik)) go to 301
c
c  iik is the decay channel
c----------------------------
      it1=nzk(iik,1)
      i310=0
 1310 continue
      i310=i310+1
      am1=amgaC(it1)
      it2=nzk(iik,2)
      am2=amgaC(it2)
      if (it2-1.lt.0) go to 110
      it3=nzk(iik,3)
      am3=amgaC(it3)
      ams=am1+am2+am3
c
c  if  iik-kin.lim.gt.actual total cm-energy, do again random iik-choice
c----------------------------
      if (ieco.le.10) go to 1002
      iatmpt=iatmpt+1
      if(iatmpt.gt.3)go to 8
      go to 1000
 1002 continue
      if (i310.gt.50) go to 310
      if (ams.gt.eco) go to 1310
c
c  for the decay channel
c  it1,it2, it3 are the produced particles from  it
c----------------------------
      if (redu.lt.0.) go to 1009
      itwthc=0
      redu=2.
      if(it3.eq.0) go to 400
4001  continue
      itwth=1
      call threpdC(eco,ecm1,ecm2,ecm3,pcm1,pcm2,pcm3,cod1,cof1,sif1,
     *cod2,cof2,sif2,cod3,cof3,sif3,am1,am2,am3)
      go to 411
  400 call twopadC(eco,ecm1,ecm2,pcm1,pcm2,cod1,cof1,sif1,cod2,
     *  cof2,sif2, am1,am2)
      itwth=-1
      it3=0
  411 continue
      itwthc=itwthc+1
      if (redu.gt.0.) go to 110
      redu=2.
      if (itwthc.gt.100) go to 1009
      if (itwth) 400,400,4001
  110 continue
      its(ist  )=it1
      if (it2-1.lt.0) go to 305
      its(ist+1)  =it2
      its(ist+2)=it3
      rx=cxs(ist)
      ry=cys(ist)
      rz=czs(ist)
      amm(ist)=am1
      call trafoC(gam,bgam,rx,ry,rz,cod1,cof1,sif1,pcm1,ecm1,
     *pls(ist),cxs(ist),cys(ist),czs(ist),els(ist))
      ist=ist+1
      amm(ist)=am2
      call trafoC(gam,bgam,rx,ry,rz,cod2,cof2,sif2,pcm2,ecm2,
     *pls(ist),cxs(ist),cys(ist),czs(ist),els(ist))
      if (it3.le.0) go to 305
      ist=ist+1
      amm(ist)=am3
      call trafoC(gam,bgam,rx,ry,rz,cod3,cof3,sif3,pcm3,ecm3,
     *pls(ist),cxs(ist),cys(ist),czs(ist),els(ist))
  305 continue
      go to 200
  500 continue
 631   continue
      return
  8    continue
c
c----------------------------
c
c   zero cross section case
c
c----------------------------
c
      ir=1
      itr(1)=n
      cxr(1)=cx
      cyr(1)=cy
      czr(1)=cz
      elr(1)=elab
      plr(1)=plab
      return
      end
c     block data
c     common/runC/runt(2)
c     data runt/100.,100./
c     end
c     it22=it2
c     it11=it1
c     common /idgbC/ idgb,idg
c     if (idgb.ne.0) return
c     return 1
c     end
      function rexpC(w)
c*****exponentiell verteilte zufallszahl, verteilung f=exp(-w*x)
c #####################
      real*8 xo, v
c #####################

      a=-1.
    1 call rndc(xo)
      a=a+1.
      b=0.
      n=0
      call rndc(v)
    2 b=b+v
      n=n+1
      if(b-xo) 2,2,3
    3 nn=n/2
      if(n.eq.2*nn) go to 1
      rexpC=(a+xo)/w
      return
      end
      block data blkhd1
c*** reaction channel cross section data
      integer * 2 ich,ibar,k1,k2,nzk,nrk
c       nzk11,nzk22 are not used anywhere
c    *,nzk11,nzk22,nzk1,nzk2,nzk3,nrkpi,nrkkc,nrkk0,nrkp,nrkn
cc   *,            nzk1,nzk2,nzk3,nrkpi,nrkkc,nrkk0,nrkp,nrkn
     *       ,nrkpi,nrkkc,nrkk0,nrkp,nrkn
     *,nure
c     *,ieii,ikii,nure

cc      common /addhpC/ amz(16),gaz(16),tauz(16),ichz(16),ibarz(16),k1z(16)
cc     *,k2z(16),wtz(153),ii22
cc     *,                nzk1(153),nzk2(153),nzk3(153)
      common/abltisC/amm(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
c      common /redverC/ irii(17),ikii(17),ieii(17)
c     *,thresh( 268)
      common/splitC/nzk(460,3),wt(460)
c     common /reacC/umo( 296),plabf( 296),siin( 296),wk( 5184),
c    *nrk(2, 268),nure(30,2)
      common /reacC/
     *umopi(  92),umokc(  68),umop( 39),umon( 63),umok0( 34),
     *plapi(  92),plakc(  68),plap( 39),plan( 63),plak0( 34),
     *siin(296),
     *spikp1( 315),spikpu(278),spikpv(372),
     *spikpw(278),spikpx(372),spikp4(315),
     *spikp5(187),spikp6(306),
     *skmpel(102),spikp7(289),skmnel( 68),spikp8(187),
     *spikp9(143),spikp0(169),spkpv(143),
     *sappel(105),spikpe(399),sapnel( 84),spikpz(273),
     *sanpel( 84),spikpf(273),
     *spkp15(187),spkp16(255),
     *nrkpi( 164),nrkkc( 134),nrkp( 70),nrkn( 116),nrkk0( 52),
     *nure(60)
      dimension nrk(2,268)
      equivalence(nrk(1,1), nrkpi(1))
c****pi- p data
c**** pi+ n data
      data plapi/
     *          0.,.3,.5,.6,.7,.8,.9,.95,1.,1.15,1.3,1.5,1.6,1.8,2.,
     *2.3,2.5,2.8,3.,3.5,4.,
     *      0.,.285,.4,.45,.5,.6,.7,.75,.8,.85,.9,1.,1.15,1.3,1.5,1.6,
     *1.8,2.,2.3,2.5,2.8,3.,3.5,4.,4.5,
     *      0.,.285,.4,.45,.5,.6,.7,.75,.8,.85,.9,1.,1.15,1.3,1.5,1.6,
     *1.8,2.,2.3,2.5,2.8,3.,3.5,4.,4.5,
     *          0.,.3,.5,.6,.7,.8,.9,.95,1.,1.15,1.3,1.5,1.6,1.8,2.,
     *2.3,2.5,2.8,3.,3.5,4./
      data plakc/
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49,
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49,
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49,
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49/
      data plak0/
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49,
     *0.,0.58,0.80,1.01,1.23,1.45,1.68,1.94,2.18,2.42,2.68,2.96,3.24,
     *3.51,3.84,4.16,4.49/
c                 pp   pn   np   nn
      data plap/
     f0.,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43,
     f0.,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43,
     f0.,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43/
c    app   apn   anp   ann
      data plan   /
     *0.0,0.001,0.1,.2,.3,.4,.5,.6,
     f.74,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43   ,
     *0.0,0.001,0.1,.2,.3,.4,.5,.6,
     f.74,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43   ,
     *0.0,0.001,0.1,.2,.3,.4,.5,.6,
     f.74,1.06,1.34,1.63,1.92,2.2,2.5,2.8,3.1,3.43,3.75,4.07,4.43  /
      data siin /296*0./
      data umopi/
     *                  1.08,1.233,1.302,1.369,1.496,1.557,1.615,1.6435
     *,1.672,1.753,1.831,1.930,1.978,2.071,2.159,2.286,2.366,2.482,2.56,
     *2.735,2.90,
     *            1.08,1.222,1.302,1.3365,1.369,1.434,1.496,1.527,1.557
     *,1.586,1.615,1.672,1.753,1.831,1.930,1.978,2.071,2.159,2.286,2.366
     *,2.482,2.560,2.735,2.90,3.06,
     *            1.08,1.222,1.302,1.3365,1.369,1.434,1.496,1.527,1.557
     *,1.586,1.615,1.672,1.753,1.831,1.930,1.978,2.071,2.159,2.286,2.366
     *,2.482,2.560,2.735,2.90,3.06,
     *                  1.08,1.233,1.302,1.369,1.496,1.557,1.615,1.6435
     *,1.672,1.753,1.831,1.930,1.978,2.071,2.159,2.286,2.366,2.482,2.56,
     *2.735,2.90/
      data umokc/ 1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1,1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1,1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1,1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1/
      data umok0/ 1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1,1.44,
     * 1.598,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,
     *3.1/
c                 pp   pn   np   nn
      data umop/
     f1.88,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2,
     f1.88,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2,
     f1.88,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2/
c    app   apn   anp   ann
      data umon /
     *1.877,1.87701,1.879,1.887,1.9,1.917,1.938,1.962,
     f2.,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2,
     *1.877,1.87701,1.879,1.887,1.9,1.917,1.938,1.962,
     f2.,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2,
     *1.877,1.87701,1.879,1.887,1.9,1.917,1.938,1.962,
     f2.,2.102,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.,3.1,3.2/
c*** reaction cahnnel state particles
      data nrkpi/
     *13,1,15,21,81,0,
     *13,54,23,53,13,63,13,58,23,57,13,65,1,32,53,31,54,32,53,33,53,35,
     *63,32,
     *13,8,23,1,17,15,21,24,22,15,82,0,
     *61,0,13,55,23,54,14,53,13,64,
     *23,63,13,59,23,58,14,57,13,66,23,65,1,31,8,32,1,33,1,35,54,31,55,
     *32,54,33,53,34,54,35,
     *14,1,23,8,17,24,20,15,22,24,83,0,
     *62,0,14,54,23,55,13,56,14,63,
     *23,64,14,58,23,59,13,60,14,65,23,66,8,31,1,34,8,33,8,35,55,31,54,
     *34,55,33,56,32,55,35,
     *14,8,24,20,84,0,
     *14,55,23,56,14,64,14,59,23,60,14,66,8,34,56,31,55,34,56,33,56,35,
     *64,34
     f/
      data nrkkc/
     *15,1,89,0,
     *24,53,15,54,1,36,1,40,1,44,36,63,15,63,45,53,44,54,
     *15,8,24,1,91,0,
     *24,54,15,55,8,36,1,37,8,40,1,41,8,44,1,45,36,64,37,63,15,64,24,63,
     *45,54,44,55,93,0,
     *16,1,25,8,  17,23,21,14,  20,13,22,23,  90,0,
     *38,1,39,8,16,54,25,55,1,42,8,43,16,63,25,64,39,64,38,63,46,54,
     *47,55,8,47,1,46,52,0,51,0,
     *16,8,17,14,20,23,22,14,92,0,
     *8,38,16,55,25,56,8,42,16,64,38,64,46,55,47,56,8,46,94,0
     */
c
c   k0 p   k0 n   ak0 p   ak/ n
c
      data nrkk0/
     *24,8,
     *106,0,15,56,24,55,37,8,41,8,45,8,37,64,24,64,44,56,45,55,
     *25,1,17,13,  22,13,21,23,
     *107,0,39,1,25,54,16,53,43,1,25,63,39,63,47,54,46,53,47,1,103,0/
c   pp  pn   np   nn
      data nrkp/1,1,85,0,
     f8,53,1,54,1,63,8,57,1,58,54,54,53,55,63,54,64,53,
     *1,8,86,0,
     f8,54,1,55,8,63,1,64,8,58,1,59,64,54,63,55,54,55,53,56,77,0,
     *8,8,
     *95,0,8,55,1,56,8,64,8,59,1,60,55,55,54,56,64,55,63,56/
c     app   apn   anp   ann
      data nrkn/
     *1,2,17,18,15,16,8,9,13,14,99,0,87,0,
     * 1,68,8,69,2,54,9,55,102,0,
     *   2,63,9,64,1,75,8,76,53,67,54,68,
     *55,69,56,70,63,68,64,69,75,54,76,55,
     *2,8,18,20,  16,24,14,23,  101,0,88,0,
     *2,55,9,56,1,67,8,68,2,64,8,75,2,59,8,72,68,55,67,54,69,56,
     *1,9,18,21,15,25,13,23,100,0,
     *96,0,2,53,9,54,1,69,8,70,1,76,9,63,1,73,9,58,55,70,53,68,54,69/
c*** channel crass section
         data spikp1/
     *0.,300.,40.,20.,13.,8.5,8.,9.5,12.,14.,15.5,20.,17.,13.,10.,
     *9.,8.5,8.,7.8,7.3,6.7, 9*0.,.23,.35,.7,.52,.4,.3,.2,.15,.13,.11,
     *.09,.07,
     *       0.,0.033,.8,1.35,1.35,.5,15*0.,
     *3*0.,.00,0.80,2.2,3.6,4.6,4.7,3.5,2.4,1.8,1.4,.75,.47,.25,.13,.08,
     * 6*0.,
     *0.,1.2,3.3,5.4,6.9,7.3,5.3,3.6,2.7,2.2,1.1,.73,.4,.22,.12, 9*0.,
     *.0,0.,2.0,4.4,6.8,9.9,7.9,6.0,3.8,2.5,2.,1.4,1.,.6,.35,10*0.,
     *     .25,.55,.75,1.25,1.9,2.,1.8,1.5,1.25,1.,.8,6*0.,
     * 4*0.,.4,.85,1.1,1.85,2.8,3.,2.7,2.2,1.85,1.5,1.2,6*0.,
     * 6*0.,.5,1.2,1.7,3.4,5.2,6.4,6.1,5.6,5.2,6*0.,
     * 2*0.,.0,1.0,3.3,5.2,4.45,3.6,2.75,1.9,1.65,1.3,.95,.6,.45,6*0.,
     * 3*0.,.0,.45,1.4,1.5,1.1,.85,.5,.3,.2,.15,8*0.,
     * 5*0.,.0,.0,.6,.8,.95,.8,.7,.6,.5,.4,6*0.,
     * 5*0.,.0,.00,.85,1.2,1.4,1.2,1.05,.9,.7,.55,6*0.,
     * 5*0.,.0,.00,1.,1.5,3.5,4.15,3.7,2.7,2.3,1.75,6*0.,
     *10*0.,.5,2.0,3.3,5.4,7. /
c**** pi+ n data
      data spikpu/
     *0.,25.,13.,11.,10.5,14.,20.,20.,16.,14.,19.,28.,17.5,13.5,12.,
     *10.5,10.,10.,9.5,9.,8.,7.5,7.,6.5,6.,
     *0.,48.,19.,15.,11.5,10.,8.,6.5,5.5,4.8,4.2,7.5,3.4,2.5,2.5,2.1,
     *1.4,1.,.8,.6,.46,.3,.2,.15,.13,
     *11*0.,.95,.65,.48,.35,.2,.18,.17,.16,.15,.1,.09,.065,.05,.04,
     *12*0.,.2,.25,.25,.2,.1,.08,.06,.045,.03,.02,.01,.005,.003,
     *12*0.,.3,.24,.18,.15,.13,.12,.11,.1,.09,.08,.05,.04,.03,
     *        0.,0.16,.7,1.3,3.1,4.5,2.,18*0.,
     *3*   .0,0.0,0.0,4.0,11.0,11.4,10.3,7.5,6.8,4.75,2.5,1.5,.9,.55,.35
     *,13*0.,.1,.34,.5,.8,1.1,2.25,3.3,2.3,1.6,.95,.45,.28,.15,10*0.,
     *2*0.,.17,.64,1.,1.5,2.1,4.25,6.2,4.4,3.,1.8,.9,.53,.28,10*0.,
     *2*0.,.25,.82,1.3,1.9,2.8,5.5,8.,5.7,3.9,2.35,1.15,.69,.37,10*0.,
     * 7*0.,.00,.34,1.5,3.47,5.87,6.23,4.27,2.6,1.,.6,.3,.15,6*0./
      data spikpv/
     * 7*0.,.00,.16,.75,1.73,2.93,3.12,2.13,1.3,.5,.3,.15,.08,6*0.,
     *10*0.,.2,.6,.92,2.4,4.9,6.25,5.25,3.5,2.15,1.4,1.,.7,13*0.,.13,.4,
     *.62,1.6,3.27,4.17,3.5,2.33,1.43,.93,.66,.47,13*0.,.07,.2,.31,.8,1.
     *63,2.08,1.75,1.17,.72,.47,.34,.23,17*0.,.33,1.,1.8,2.67,5.33,6.,
     *5.53,5.,17*0.,.17,.5,.9,1.83,2.67,3.0,2.77,2.5,3*0.,
     *  0.,.0,0.,1.0,3.3,2.8,2.5,2.3,1.8,1.5,1.1,.8,.7,.55,.3,10*0.,
     * 9*0.,.1,.4,1.,1.4,2.2,2.5,2.2,1.65,1.35,1.1,.8,.6,.4,3*0.,
     * 9*0.,.15,.6,1.5,2.1,3.3,3.8,3.3,2.45,2.05,1.65,1.2,.9,.6,3*0.,
     * 9*0.,.10,.2,.5,.7,1.3,1.55,1.9,1.8,1.55,1.35,1.15,.95,.7,3*0.,
     * 9*0.,.00,.2,.5,.7,1.3,1.55,1.9,1.8,1.55,1.35,1.15,.95,.7,3*0.,
     *14*0.,.2,.5,.85,2.,2.15,2.05,1.75,1.,17*0.,.13,.33,.57,1.33,1.43,
     *1.36,1.17,.67,17*0.,.07,.17,.28,.67,.72,.69,.58,.33,3*0.,
     *14*0.,.4,.7,1.,1.6,1.8,2.3,1.9,1.7 /
c**** pi- p data
      data spikpw/
     *0.,25.,13.,11.,10.5,14.,20.,20.,16.,14.,19.,28.,17.5,13.5,12.,
     *10.5,10.,10.,9.5,9.,8.,7.5,7.,6.5,6.,
     *0.,48.,19.,15.,11.5,10.,8.,6.5,5.5,4.8,4.2,7.5,3.4,2.5,2.5,2.1,
     *1.4,1.,.8,.6,.46,.3,.2,.15,.13,
     *11*0.,.95,.65,.48,.35,.2,.18,.17,.16,.15,.1,.09,.065,.05,.04,
     *12*0.,.2,.25,.25,.2,.1,.08,.06,.045,.03,.02,.01,.005,.003,
     *12*0.,.3,.24,.18,.15,.13,.12,.11,.1,.09,.08,.05,.04,.03,
     *        0.,0.16,.7,1.3,3.1,4.5,2.,18*0.,
     *3*   .0,0.0,0.0,4.0,11.0,11.4,10.3,7.5,6.8,4.75,2.5,1.5,.9,.55,.35
     *,13*0.,.1,.34,.5,.8,1.1,2.25,3.3,2.3,1.6,.95,.45,.28,.15,10*0.,
     *2*0.,.17,.64,1.,1.5,2.1,4.25,6.2,4.4,3.,1.8,.9,.53,.28,10*0.,
     *2*0.,.25,.82,1.3,1.9,2.8,5.5,8.,5.7,3.9,2.35,1.15,.69,.37,10*0.,
     * 7*0.,.00,.34,1.5,3.47,5.87,6.23,4.27,2.6,1.,.6,.3,.15,6*0./
      data spikpx/
     * 7*0.,.00,.16,.75,1.73,2.93,3.12,2.13,1.3,.5,.3,.15,.08,6*0.,
     *10*0.,.2,.6,.92,2.4,4.9,6.25,5.25,3.5,2.15,1.4,1.,.7,13*0.,.13,.4,
     *.62,1.6,3.27,4.17,3.5,2.33,1.43,.93,.66,.47,13*0.,.07,.2,.31,.8,1.
     *63,2.08,1.75,1.17,.72,.47,.34,.23,17*0.,.33,1.,1.8,2.67,5.33,6.,
     *5.53,5.,17*0.,.17,.5,.9,1.83,2.67,3.0,2.77,2.5,3*0.,
     *  0.,.0,0.,1.0,3.3,2.8,2.5,2.3,1.8,1.5,1.1,.8,.7,.55,.3,10*0.,
     * 9*0.,.1,.4,1.,1.4,2.2,2.5,2.2,1.65,1.35,1.1,.8,.6,.4,3*0.,
     * 9*0.,.15,.6,1.5,2.1,3.3,3.8,3.3,2.45,2.05,1.65,1.2,.9,.6,3*0.,
     * 9*0.,.10,.2,.5,.7,1.3,1.55,1.9,1.8,1.55,1.35,1.15,.95,.7,3*0.,
     * 9*0.,.00,.2,.5,.7,1.3,1.55,1.9,1.8,1.55,1.35,1.15,.95,.7,3*0.,
     *14*0.,.2,.5,.85,2.,2.15,2.05,1.75,1.,17*0.,.13,.33,.57,1.33,1.43,
     *1.36,1.17,.67,17*0.,.07,.17,.28,.67,.72,.69,.58,.33,3*0.,
     *14*0.,.4,.7,1.,1.6,1.8,2.3,1.9,1.7 /
c**** pi- n data
      data spikp4  /
     *0.,300.,40.,20.,13.,8.5,8.,9.5,12.,14.,15.5,20.,17.,13.,10.,
     *9.,8.5,8.,7.8,7.3,6.7, 9*0.,.23,.35,.7,.52,.4,.3,.2,.15,.13,.11,
     *.09,.07,
     *       0.,0.033,.8,1.35,1.35,.5,15*0.,
     *3*0.,.00,0.80,2.2,3.6,4.6,4.7,3.5,2.4,1.8,1.4,.75,.47,.25,.13,.08,
     * 6*0.,
     *0.,1.2,3.3,5.4,6.9,7.3,5.3,3.6,2.7,2.2,1.1,.73,.4,.22,.12, 9*0.,
     *.0,0.,2.0,4.4,6.8,9.9,7.9,6.0,3.8,2.5,2.,1.4,1.,.6,.35,10*0.,
     *     .25,.55,.75,1.25,1.9,2.,1.8,1.5,1.25,1.,.8,6*0.,
     * 4*0.,.4,.85,1.1,1.85,2.8,3.,2.7,2.2,1.85,1.5,1.2,6*0.,
     * 6*0.,.5,1.2,1.7,3.4,5.2,6.4,6.1,5.6,5.2,6*0.,
     * 2*0.,.0,1.0,3.3,5.2,4.45,3.6,2.75,1.9,1.65,1.3,.95,.6,.45,6*0.,
     * 3*0.,.0,.45,1.4,1.5,1.1,.85,.5,.3,.2,.15,8*0.,
     * 5*0.,.0,.0,.6,.8,.95,.8,.7,.6,.5,.4,6*0.,
     * 5*0.,.0,.00,.85,1.2,1.4,1.2,1.05,.9,.7,.55,6*0.,
     * 5*0.,.0,.00,1.,1.5,3.5,4.15,3.7,2.7,2.3,1.75,6*0.,
     *10*0.,.5,2.0,3.3,5.4,7. /
c**** k+ p data
         data spikp5/
     *0.,20.,14.,12.,11.5,10.,8.,7.,6.,5.5,5.3,5.,4.5,4.4,3.8,3.,2.8,
     *0.,.5,1.15,2.,1.3,.8,.45,10*0.,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *4*0.,1.0,2.1,2.6,2.3,2.1,1.8,1.7,1.4,1.2,1.05,.9,.66, .5,
     *7*0.,.3,1.,1.,.9,.7,.4,.30,.2,.00,0.,
     *9*0.,.1,1.,2.2,3.5,4.20,4.55,4.85,4.9,
     *10*0.,.2,.7,1.6,2.5,2.2,1.71,1.6,
     *6*0.,1.4,3.8,5.,4.7,4.4,4.,3.5,2.85,2.35,2.01,1.8,
     *12*0.,.1,.8,2.05,3.31,3.5,
     *12*0.,.034,.20,.75,1.04,1.24
     */
c**** k+ n data
         data spikp6/
     *0.,6.,11.,13.,6.,5.,3.,2.2,1.5,1.2,1.,.7,.6,.5,.45,.35,.3,
     *0.,6.,11.,13.,6.,5.,3.,2.2,1.5,1.2,1.,.7,.6,.5,.45,.35,.3,
     *0.,.5,1.3,2.8,2.3,1.6,.9,10*0.,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *4*0.,1.0,2.1,2.6,2.3,2.0,1.8,1.7,1.4,1.2,1.15,.9,.66, .5,
     *4*0.,1.0,2.1,2.6,2.3,2.1,1.8,1.7,1.4,1.2,1.15,.9,.66, .5,
     *7*0.,.3,1.,1.,.9,.7,.4,.35,.2,.00,0.,
     *7*0.,.3,1.,1.,.9,.7,.4,.35,.2,.00,0.,
     *9*0.,.1,1.,2.4,3.5,4.25,4.55,4.85,4.9,
     *9*0.,.1,1.,2.4,3.5,4.25,4.55,4.85,4.9,
     *10*0.,.2,.7,1.6,2.5,2.2,1.71,1.6,
     *10*0.,.2,.7,1.6,2.5,2.2,1.71,1.6,
     *6*0.,1.4,3.8,5.,4.7,4.4,4.,3.5,2.85,2.35,2.01,1.8,
     *6*0.,1.4,3.8,5.,4.7,4.4,4.,3.5,2.85,2.35,2.01,1.8,
     *12*0.,.1,.8,2.05,3.31,3.5,
     *12*0.,.034,.20,.75,1.04,1.24, .0,2.5,15.,21.5,15.3,3.,1.5,10*0./
c**** k- p data
      data skmpel/
     *0.,35.,22.,25.,17.,9.,9.5,8.,7.,6.5,6.1,5.,4.8,4.6,4.45,4.3,4.2,
     *0.,8.,3.5,8.,3.,1.9,1.7,1.,.9,.8,.75,.5,.42,.38,.34,.25,.2,
     *0.,3.,3.2,3.5,1.5,1.4,1.1,.6,.5,.35,.28,.25,.18,.12,.1,.08,.04,
     *0.,8.5,2.4,1.7,1.3,1.3,1.1,.5,.4,.4,.35,.3,.28,.2,.16,.13,.11,
     *0.,7.,4.8,1.4,1.9,.9,.4,.2,.13,.1,.08,.06,.04,.02,.015,.01,.01,
     *0.,5.5,1.,.8,.75,.32,.2,.1,.09,.08,.065,.05,.04,.022,.017,2*.01/
         data spikp7/
     *0.,.56,1.46,3.16,2.01,1.28,.74,10*0.,
     *4*0.,1.13,2.61,2.91,2.58,2.35,2.02,1.91,1.57,1.35,1.29,1.01,.74,
     *.65,
     *4*0.,1.13,2.61,2.91,2.58,2.35,2.02,1.91,1.57,1.35,1.29,1.01,.74,
     *.65,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *7*0.,.34,1.12,1.12,1.01,.78,.45,.39,.22,.07,0.,
     *7*0.,.34,1.12,1.12,1.01,.78,.45,.39,.22,.07,0.,
     *6*0.,1.71,4.26,5.6,5.57,4.93,4.48,3.92,3.19,2.63,2.25,2.,
     *6*0.,1.71,4.26,5.6,5.57,4.93,4.48,3.92,3.19,2.63,2.25,2.,
     *10*0.,.22,.8,.75,1.,1.3,1.5,1.3,  10*0.,.22,.8,.75,1.,1.3,1.5,1.3,
     *13*0.,.1,.3,.7,1.,           13*0.,.1,.3,.7,1.,
     *9*0.,.11,1.72,2.69,3.92,4.76,5.10,5.44,5.3,
     *9*0.,.11,1.72,2.69,3.92,4.76,5.10,5.44,5.3,
     *4*0.,0.00,9.2,4.7,1.9,9*0.,  .0,2.5,15.,21.5,15.3,3.,1.5,10*0./
c**** k- n data
      data skmnel/
     *0.,4.,9.5,20.,13.,9.5,6.,4.4,3.,2.4,2.,1.4,1.2,1.,.9,.7,.6,
     *0.,4.5,6.,5.,2.5,2.,1.7,2.1,1.9,.9,.5,.3,.24,.2,.18,.1,.09,
     *0.,1.8,2.,1.1,.9,.5,.5,.4,.4,.2,.1,.06,.05,.04,.03,.02,.02,
     *0.,1.5,2.,.9,1.1,.4,.6,.7,.65,.3,.17,.1,.08,.07,.06,.04,.03/
         data spikp8/
     *0.,.56,1.29,2.26,1.01,.64,.37,10*0.,
     *4*0.,1.13,2.61,2.91,2.58,2.35,2.02,1.91,1.57,1.35,1.29,1.01,.74,
     *.65,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *7*0.,.34,1.12,1.12,1.01,.78,.45,.39,.22,.07,0.,
     *6*0.,1.71,4.26,5.6,5.57,4.93,4.48,3.92,3.19,2.63,2.25,2.,
     *10*0.,.22,.8,.75,1.,1.3,1.5,1.3,
     *13*0.,.1,.3,.7,1.,
     *13*0.,.1,.3,.7,1.,
     *9*0.,.11,1.72,2.69,3.92,4.76,5.10,5.44,5.3,
     *4*0.,0.00,9.2,4.7,1.9,9*0.
     */
c****  p p data
         data spikp9/
     *0.,24.,25.,27.,23.,21.,20.,19.,17.,15.5,14.,13.5,13.,
     *0.,3.6,1.7,       10*0.,
     f.0,0.0,8.7,17.7,18.8,15.9,11.7,8.,6.,5.3,4.5,3.9,3.5,
     f.0,.0,2.8,5.8,6.2,5.1,3.8,2.7,2.1,1.8,1.5,1.3,1.1,
     f4*0.,0.0,4.6,10.2,15.1,16.9,16.5,11.,5.5,3.5,
     f10*0.,4.3,7.6,9.,
     f10*0.,1.7,2.6,3.,
     f6*0.,.3,.6,1.,1.6,1.3,.8,.6,
     f6*0.,.7,1.2,1.8,2.5,1.8,1.3,1.2,
     f10*0.,.6,1.4,1.7,
     f10*0.,1.9,4.1,5.2/
c****  p n data
         data spikp0/
     *0.,24.,25.,27.,23.,21.,20.,19.,17.,15.5,14.,13.5,13.,
     *0.,1.8,.2, 10*0.,
     *   .0,.0,3.2,6.05,9.9,5.1,3.8,2.7,1.9,1.5,1.4,1.3,1.1,
     *   .0,.0,3.2,6.05,9.9,5.1,3.8,2.7,1.9,1.5,1.4,1.3,1.1,
     *   4*0.,0.0,4.6,10.2,15.1,16.4,15.2,11.,5.4,3.5,
     *   4*0.,0.0,4.6,10.2,15.1,16.4,15.2,11.,5.4,3.5,
     *   10*0.,.7,5.1,8.,
     *   10*0.,.7,5.1,8.,
     *   10*.0,.3,2.8,4.7,
     *   10*.0,.3,2.8,4.7,
     f7*0.,1.2,2.5,3.5,6.,5.3,2.9,
     f7*0.,1.7,3.6,5.4,9.,7.6,4.2,
     f3*0.,.0,0.0,7.7,6.1,2.9, 5*0./
c   nn - data
c
      data spkpv/
     *0.,24.,25.,27.,23.,21.,20.,19.,17.,15.5,14.,13.5,13.,
     *0.,3.6,1.7,10*0.0,
     f.0,0.0,8.7,17.7,18.8,15.9,11.7,8.,6.,5.3,4.5,3.9,3.5,
     f.0,.0,2.8,5.8,6.2,5.1,3.8,2.7,2.1,1.8,1.5,1.3,1.1,
     f4*0.,0.0,4.6,10.2,15.1,16.9,16.5,11.,5.5,3.5,
     f10*0.,4.3,7.6,9.,
     f10*0.,1.7,2.6,3.,
     f6*0.,.3,.6,1.,1.6,1.3,.8,.6,
     f6*0.,.7,1.2,1.8,2.5,1.8,1.3,1.2,
     f10*0.,.6,1.4,1.7,
     f10*0.,1.9,4.1,5.2/
c***************   ap - p - data
      data sappel/
     *0.,176.,160.,105.,75.,68.,65.,50.,50.,43.,42.,40.5,35.,30.,28.,
     *25.,22.,21.,20.,18.,17., 11*0.,.05,.15,.18,.2,.2,.3,.4,.6,.7,.85,
     *0.,1.,.9,.46,.3,.23,.18,.16,.14,.1,.08,.05,.02,.015,4*.011,3*.005,
     *0.,55.,50.,25.,15.,15.,14.,12.,10.,7.,6.,4.,3.3,2.8,2.4,2.,1.8,
     *1.55,1.3,.95,.75,
     *0.,3.3,3.,1.5,1.,.7,.4,.35,.4,.25,.18,.08,.04,.03,.023,.016,.014,
     *.01,.008,.006,.005/
         data spikpe/
     *0.,215.,193.,170.,148.,113.,97.,84.,
     *78.,68.,64.,61.,46.,36.,31.3,28.5,25.7,22.6,21.4,20.7,19.9,
     *8*0.,0.,2.,2.5,.2, 9*0.,
     *8*0.,0.,0.,.3,1.4,2.2,1.2,1.1,1.,.8,.6,.5,.4,.3,
     *8*0.,0.,0.,.3,1.4,2.2,1.2,1.1,1.,.8,.6,.5,.4,.3,
     *8*0.,0.,0.,.3,1.4,2.2,1.2,1.1,1.,.8,.6,.5,.4,.3,
     *8*0.,0.,0.,.3,1.4,2.2,1.2,1.1,1.,.8,.6,.5,.4,.3,
     *8*0.,0.,.6,2.5,5.,5.2,5.1,5.4,5.8,2.8,2.1,1.8,1.6,1.2,
     *8*0.,5*0.,1.3,1.5,2.,2.5,2.5,2.3,1.8,1.4,
     *8*0.,5*0.,1.3,1.5,2.,2.5,2.5,2.3,1.8,1.4,
     *8*0.,5*0.,1.3,1.5,2.,2.5,2.5,2.3,1.8,1.4,
     *8*0.,5*0.,1.3,1.5,2.,2.5,2.5,2.3,1.8,1.4,
     *8*0.,6*0.,.2,.5,1.1,1.6,1.4,1.1,.9,
     *8*0.,6*0.,.2,.5,1.1,1.6,1.4,1.1,.9,
     *8*0.,6*0.,.2,.5,1.1,1.6,1.4,1.1,.9,
     *8*0.,6*0.,.2,.5,1.1,1.6,1.4,1.1,.9,
     *8*0.,9*0.,.3,1.6,2.6,3.6,8*0.,9*0.,.3,1.6,2.6,3.6,
     *8*0.,9*0.,.3,1.6,2.6,3.6,8*0.,9*0.,.3,1.6,2.6,3.6/
c***************   ap - n - data
      data sapnel/
     *0.,176.,160.,105.,75.,68.,65.,50.,50.,43.,42.,40.5,35.,30.,28.,
     *25.,22.,21.,20.,18.,17., 11*0.,.05,.15,.18,.2,.2,.3,.4,.6,.7,.85,
     *0.,1.,.9,.46,.3,.23,.18,.16,.14,.1,.08,.05,.02,.015,4*.011,3*.005,
     *0.,3.3,3.,1.5,1.,.7,.4,.35,.4,.25,.18,.08,.04,.03,.023,.016,.014,
     *.01,.008,.006,.005/
         data spikpz/
     *0.,215.,193.,170.,148.,113.,97.,84.,
     *78.,68.,64.,61.,46.,36.,31.3,28.5,25.7,22.6,21.4,20.7,19.9,
     *8*0.,0.,2.4,.2,10*0.,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,5*0.,5.2,8.7,11.4,14.,11.9,7.6,6.,5.,
     *8*0.,5*0.,5.2,8.7,11.4,14.,11.9,7.6,6.,5.,
     *8*0.,10*0.,1.,4.9,8.5,
     *8*0.,10*0.,1.,4.9,8.5,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4/
c
c
c***************   an - p - data
c
      data sanpel/
     *0.,176.,160.,105.,75.,68.,65.,50.,50.,43.,42.,40.5,35.,30.,28.,
     *25.,22.,21.,20.,18.,17., 11*0.,.05,.15,.18,.2,.2,.3,.4,.6,.7,.85,
     *0.,1.,.9,.46,.3,.23,.18,.16,.14,.1,.08,.05,.02,.015,4*.011,3*.005,
     *0.,3.3,3.,1.5,1.,.7,.4,.35,.4,.25,.18,.08,.04,.03,.023,.016,.014,
     *.01,.008,.006,.005/
      data spikpf  /
     *0.,215.,193.,170.,148.,113.,97.,84.,
     *78.,68.,64.,61.,46.,36.,31.3,28.5,25.7,22.6,21.4,20.7,19.9,
     *8*0.,0.,2.4,.2,10*0.,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,0.,0.,1.8,2.8,3.6,2.3,1.8,1.5,1.3,1.,.7,.5,.3,
     *8*0.,5*0.,5.2,8.7,11.4,14.,11.9,7.6,6.,5.,
     *8*0.,5*0.,5.2,8.7,11.4,14.,11.9,7.6,6.,5.,
     *8*0.,10*0.,1.,4.9,8.5,
     *8*0.,10*0.,1.,4.9,8.5,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4,
     *8*0.,7*0.,1.9,2.3,4.,6.5,5.2,3.4/
c***  ko - n - data
      data spkp15/
     *0.,20.,14.,12.,11.5,10.,8.,7.,6.,5.5,5.3,5.,4.5,4.4,3.8,3.,2.8,
     *0.,.5,1.15,2.,1.3,.8,.45,10*0.,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *3*0.,0.9,2.5,3.,2.5,2.3,2.,1.7,1.5,1.2,.9,.6,.45,.21,.2,
     *4*0.,1.0,2.1,2.6,2.3,2.1,1.8,1.7,1.4,1.2,1.05,.9,.66, .5,
     *7*0.,.3,1.,1.,.9,.7,.4,.30,.2,.00,0.,
     *9*0.,.1,1.,2.2,3.5,4.20,4.55,4.85,4.9,
     *10*0.,.2,.7,1.6,2.5,2.2,1.71,1.6,
     *6*0.,1.4,3.8,5.,4.7,4.4,4.,3.5,2.85,2.35,2.01,1.8,
     *12*0.,.1,.8,2.05,3.31,3.5,
     *12*0.,.034,.20,.75,1.04,1.24
     */
c*** ako - p - data
      data spkp16/
     *0.,4.,9.5,20.,13.,9.5,6.,4.4,3.,2.4,2.,1.4,1.2,1.,.9,.7,.6,
     *0.,4.5,6.,5.,2.5,2.,1.7,2.1,1.9,.9,.5,.3,.24,.2,.18,.1,.09,
     *0.,1.8,2.,1.1,.9,.5,.5,.4,.4,.2,.1,.06,.05,.04,.03,.02,.02,
     *0.,1.5,2.,.9,1.1,.4,.6,.7,.65,.3,.17,.1,.08,.07,.06,.04,.03,
     *0.,.56,1.29,2.26,1.01,.64,.37,10*0.,
     *4*0.,1.13,2.61,2.91,2.58,2.35,2.02,1.91,1.57,1.35,1.29,1.01,.74,
     *.65,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *3*0.,1.00,3.03,3.36,2.8,2.58,2.24,1.91,1.68,1.35,1.01,.67,.5,.24,
     *.23,
     *7*0.,.34,1.12,1.12,1.01,.78,.45,.39,.22,.07,0.,
     *6*0.,1.71,4.26,5.6,5.57,4.93,4.48,3.92,3.19,2.63,2.25,2.,
     *10*0.,.22,.8,.75,1.,1.3,1.5,1.3,
     *13*0.,.1,.3,.7,1.,    13*0.,.1,.3,.7,1.,
     *9*0.,.11,1.72,2.69,3.92,4.76,5.10,5.44,5.3,
     *4*0.,0.00,9.2,4.7,1.9,9*0.
     */
      data nure/9,12,5*0,10,14,3*0,1,3,5,7,6*0,2,6,16,5*0,
     *10,13,5*0,11,12,3*0,2,4,6,8,6*0,3,15,7,5*0/
      end
      block data blkhd2
c*****  block data without names
      integer * 2 ieii,ikii
      common /slopeC/ ambmbb(75)
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh( 268)
c     datas     datas    datas      datas     datas
c******          *********
          data ikii/0,15,41,67,82,93,111,134,149,160,173,184,208,
     *225,242,253,268/
      data ieii/0,21,46,71,92,109,126,143,160,173,186,199,220,
     *241,262,279,296/
      data irii/0,315,965,1615,1930,2117,2423,2814,3069,3212,
     *3381,3524,4028,4385,4742,4929,5184/
c
c
c     masses for the slope b(m) in gev
c     slope b(m) for an mesonic system
c     slope b(m) for a baryonic system
c
        data ambmbb/
     * 0.80, 0.85, 0.90, 0.95, 1.00, 1.05, 1.10, 1.15, 1.20, 1.25,
     * 1.30, 1.35, 1.40, 1.45, 1.50, 1.55, 1.60, 1.65, 1.70, 1.75,
     * 1.80, 1.85, 1.90, 1.95, 2.00,15.60,14.95,14.30,13.65,13.00,
     *12.35,11.70,10.85,10.00, 9.15, 8.30, 7.80, 7.30, 7.25, 7.20,
     * 6.95, 6.70, 6.60, 6.50, 6.30, 6.10, 5.85, 5.60, 5.35, 5.10,
     *15.00,15.00,15.00,15.00,15.00,15.00,15.00,14.20,13.40,12.60,
     *11.80,11.20,10.60, 9.80, 9.00, 8.25, 7.50, 6.25, 5.00, 4.50,
     * 4.00, 4.00, 4.00, 4.00, 4.00/
      end
      function amgaC(it)
c*** random selection of masses of decaying particles
c      integer * 2 ich,ibar,k1,k2,nzk,nrk
      integer * 2 ich,ibar,k1,k2
      common/abltisC/amm(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common /gamredC/ redu,amo,am (15 )
      dimension gasuni(14)
c##########################
      real* 8   vv
c#########################

      data gasuni/
     *-1.,-.98,-.95,-.87,-.72,-.48,-.17,.17,.48,.72,.87,.95,.98,1./
      data gauno/2.352/
      data gaunon/2.4/
      data io/14/
      data nstab/25/
      i=1
      if (it.le.0) go to 3
c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
c     if (it.le.nstab) go to 2
c            17 and 18 are lambda lambda bar; they are decayed
c            20,21,22 are sigma ; they are decayed
      if(it .eq. 19 .or. it .eq. 23) goto 2
      if(it .le. 16) goto 2
c$$$$$$$$$$$$$$$$$$
      dgauni=gauno*gaunon/(io-1.)
      call rndc(vv)
      vv=vv*2.-1.+1.e-16
    1 continue
      vo=gasuni(i)
      i=i+1
      v1=gasuni(i)
      if (vv.gt.v1) go to 1
      uniga=dgauni*(i-2.+(vv-vo+1.e-16)/(v1-vo)-(io-1.)*.5)
      dam=ga(it)*uniga/gauno
      aam=amm(it)+dam
      amgaC=aam
      return
    2 continue
      amgaC=amm(it)
      return
    3 continue
      amgaC=0.
      return
      end
      subroutine calumoC(n,itta)
c*** c.m.s.-energy and reaction channel threshold calculation
      integer * 2 ich,ibar,k1,k2,nzk,nrk
     *,ieii,ikii,nure
      common/abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh( 268)
      common/splitC/nzk(460,3),wt(460)
      common /reacC/umo( 296),plabf( 296),siin( 296),wk( 5184),
     *nrk(2, 268),nure(30,2)
      ire=nure(n,itta/8+1)
      ieo=ieii(ire)+1
      iee=ieii(ire +1)
      am1=am(n   )
      am12=am1**2
      am2=am(itta)
      am22=am2**2
      do 1 ie=ieo,iee
      plab2=plabf(ie)**2
      elab=sqrt(am12+am22+2.*sqrt(plab2+am12)*am2)
      umo(ie)=elab
    1 continue
      iko=ikii(ire)+1
      ike=ikii(ire +1)
      umoo=umo(ieo)
      do 2 ik=iko,ike
      if(nrk(2,ik).gt.0)go to 2
      iki=nrk(1,ik)
      amss=5.
      k11=k1(iki)
      k22=k2(iki)
      do 3 ik1=k11,k22
      in=nzk(ik1,1)
      ams=am(in)
      in=nzk(ik1,2)
      if(in.gt.0)ams=ams+am(in)
      in=nzk(ik1,3)
      if(in.gt.0) ams=ams+am(in)
      if (ams.lt.amss) amss=ams
  3   continue
      if(umoo.lt.amss) umoo=amss
      thresh(ik)=umoo
    2 continue
      return
      end
      subroutine chanwhC
      integer * 2 ich,ibar,k1,k2,nzk,nrk
     *,ieii,ikii,nure
      common/abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common/splitC/ nzk(460,3),wt(460)
      dimension hwt(460)
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh( 268)
      dimension hwk(40)
      common /reacC/umo( 296),plabf( 296),siin( 296),wk( 5184),
     *nrk(2, 268),nure(30,2)
      dimension si(5184)
      equivalence (wk(1),si(1))
c--------------------
c*** use only for datapreparation of pure hadrin
c*** calculation of reaction- and decay-channel-weights,
c*** threshold energies+momenta of reaction chnls.
c*** change of wt- and wk-inputdata into weights for the m.-c.-procedure
c*** (added one to each other for corresponding channels)
c--------------------------
      ireg=16
      do 222 ire=1,ireg
      iwko=irii(ire)
      iee=ieii(ire+1)-ieii(ire)
      ike=ikii(ire+1)-ikii(ire)
      ieo=ieii(ire)+1
      iika=ikii(ire)
      do 221 ie=1,iee
      sis=1.e-14
      sinorc=0.1
      do 223 ik=1,ike
      iwk=iwko+iee*(ik-1)+ie
  223 sis=sis+si(iwk)
      siin(ieo+ie-1)=sis
      sio=0.
      if (sis.ge.1.e-12) go to 2231
      sis=1.
      sio=1.
 2231 continue
      do 224 ik=1,ike
      iwk=iwko+iee*(ik-1)+ie
      sio=sio+si(iwk)/sis
  224 hwk(ik)=sio
      do 225 ik=1,ike
      iwk=iwko+iee*(ik-1)+ie
  225 wk(iwk)=hwk(ik)
      iiki=ikii(ire)
      do 226 ik=1,ike
      am111=0.
      inrk1=nrk(1,iiki+ik)
      if (inrk1.gt.0) am111=am(inrk1)
      am222=0.
      inrk2=nrk(2,iiki+ik)
      if (inrk2.gt.0) am222=am(inrk2)
      thresh(iiki+ik)=am111 +am222
      if (inrk2-1.ge.0) go to 227
      inrkk=k1(inrk1)
      amss=5.
      inrko=k2(inrk1)
      do 228 inrk1=inrkk,inrko
      inzk1=nzk(inrk1,1)
      inzk2=nzk(inrk1,2)
      inzk3=nzk(inrk1,3)
      ams=am(inzk1)+am(inzk2)
      if (inzk3-1.ge.0) ams=ams+am(inzk3)
      if (amss.gt.ams) amss=ams
  228 continue
      ams=amss
      if (ams.lt.umo(ieo)) ams=umo(ieo)
      thresh(iiki+ik)=ams
  227 continue
  226 continue
  221 continue
  222 continue
      do 3 j=1,460
    3 hwt(j)=0.
      do 1 i=1,110
      ik1=k1(i)
      ik2=k2(i)
      hv=0.
      do 2 j=ik1,ik2
      hv=hv+wt(j)
      hwt(j)=hv
      ji=j
    2 continue
      if (abs(hv-1.).gt.1.e-4) write(6,101)
  101 format (35h error in hwt, false use of chanwhC   )
    1 continue
      do 4 j=1,460
    4 wt(j)=hwt(j)
      return
      end
      subroutine haddenC
#include "Zmsg.h"
c           --------------/ part /------------
      common /partcC/ anamc(180)
      character*8 anamc
      common/partC/ amc(180),gac(180),tauc(180),ichc(180),
     *ibarc(180),k1c(180),k2c(180)
c          +++++++++++++++++++++++++++++++++++   
      common /decayccC/ zknamc(533)
      character*8 zknamc
      common /decaycC/ nzkc(533,3),wtc(533)
c          ================================

      common /namsdC/ aname(110), zkname(460), rkname(268)
      character*8 aname, zkname, rkname

c          ================================

      common /abltisC/am(110), ga(110), tau(110), ich(110)
     *,ibar(110), k1(110), k2(110)
      integer*2 ich, ibar, k1, k2
c       =======================
      common /splitC/nzk(460,3), wt(460)
      integer * 2  nzk
c       =======================
      common /addhpC/ amz(16),gaz(16),tauz(16),ichz(16),ibarz(16),
     * k1z(16), k2z(16),wtz(153),ii22,
     * nzkz(153,3)
c       
      common/addhnC/anamz(16),zknamz(153)
      character*8 anamz, zknamz
c       =========================
      data iretur/0/
      iretur=iretur+1
c         correction required by the author
c     am(31)=0.48
      if (iretur.gt.1) return
         do 1 i=1,94
      aname(i)=anamc(i)
      am (i)=amc(i)
      ga( i)=gac(i)
      tau( i)=tauc(i)
      ich( i)=ichc(i)
      ibar( i)=ibarc(i)
      k1( i)=k1c(i)
      k2( i)=k2c(i)
1     continue
      am(1)=0.93828
      am(2)=am(1)
         do 5 i=26,30
         k1(i)=452
         k2(i)=452
5        continue
      do 2 i=1,307
      zkname(i)=zknamc(i)
      wt( i)=wtc(i)
      nzk( i,1)=nzkc(i, 1)
      nzk( i,2)=nzkc(i, 2)
      nzk( i,3)=nzkc(i, 3)
2     continue
      do 3 i=1,16
         l=i+94
      aname(l)=anamz (i)
      am (l)=amz(i)
      ga( l)=gaz(i)
      tau( l)=tauz(i)
      ich( l)=ichz(i)
      ibar( l)=ibarz(i)
      k1( l)=k1z(i)
      k2( l)=k2z(i)
3     continue
      do 4 i=1,153
      l=i+307
      zkname(l)=zknamz(i)
      wt( l)=wtz(i)
      nzk( l,3)=nzkz(i, 3)
      nzk( l,2)=nzkz(i, 2)
      nzk( l,1)=nzkz(i, 1)
4     continue
      return
c      debug subchk
      end
c      **********************************************************
      block data blkhd3

      common /addhpC/ amz(16),gaz(16),tauz(16),ichz(16),ibarz(16),
     * k1z(16), k2z(16),wtz(153),ii22,  nzk1(153),nzk2(153),nzk3(153)

      common /addhnC/ anamz(16),zknam4(9),zknam5(90),zknam6(54)
      character*8  anamz, zknam4, zknam5, zknam6

c     particle masses in gev
      data amz/  3*2.2,
     * 0.9576,3*1.887,2.4,2.03,2*1.43,2*1.7,
     *  3*0./
c     resonance width gamma in gev
      data gaz/
     *          3*.2
     *,.1,.2,.2,.2,.2  ,.18,.2,.2,.15,.15,
     *3*0./
c     mean life time in seconds
      data tauz/
     * 16*0./
c     charge of particles and resonances
      data ichz/
     *      0,1,0
     *,0,0,1,-1,0, 1,-1,0,0,1
     *,3*0/
c     baryonic charge
      data ibarz/
     *              2,0,0,
     *5*0,1,-1,-1,1,1
     *,3*0/
c     first number of decay channels used for resonances
c     and decaying particles
      data k1z/
     *         308,310,313
     *,317,322,365,393,421,425,434,440,446,449
     *,3*460/
c     last number of decay channels used for resonances
c     and decaying particles
      data k2z/
     *         309,312,316
     *,321,364,392,420,424,433,439,445,448,451
     *,3*460/
c     weight of decay channel
      data wtz/
     *.17,.83,.33,.33,.34,.17,.33,.33,.17,  .01,.13,.36,.27,.23,
     *.0014,.0029,.0014,.0029,.0007,.0007,.0007,.0007,.0517,.0718,
     *.0144,.0431,.0359,.0718,.0014,.0273,.0014,.0431,.0129,.0129,
     *.0259,.0517,.0359,.0014,.0144,.0144,.0129,.0014,.0259,.0359,
     *.0072,.0474,.0948,.0259,.0072,.0144,.0287,.0431,.0144,.0287,
     *.0474,.0144,.0075,
     *.0057,.0019,.0038,.0095,.0014,.0014,.0191,.0572,.1430,.0029,
     *.0029,.0477,.0477,.0477,.0477,.0477,.0019,.0191,.0686,.0172,
     *.0095,.1888,.0172,.0191,.0381,.0571,.0571,.0190,
     *.0057,.0019,.0038,.0095,.0014,.0014,.0191,.0572,.1430,.0029,
     *.0029,.0477,.0477,.0477,.0477,.0477,.0019,.0191,.0686,.0172,
     *.0095,.1888,.0172,.0191,.0381,.0571,.0571,.0190,
     *4*.25,.2,.2,.12,.1,.07,.07,.14,.05,.05,.4,.2,.125,.075,.075,.125,
     *.4,.075,.125,.2,.125,.075,.3,.05,.65,.3,.05,.65,     9*1./
c     particle numbers in decay channel
      data nzk1/
     *      8,1,2,9,1,2,9,2,9,
     *7,13,31,15,24, 23,13,23,13,23,23,14,13,23,31,98,33,33,32,
     *23,14,13,35,23,23,14,13,33,23,98,31,23,14,
     *13,35,33,33,32,23,35,33,32,98,35,35,35,35,35,
     *13,13,13,13,23,13,98,32,33,23,13,23,13,14,
     *13,32,13,98,23,13,32,32,13,33,32,98,35,35,
     *14,14,14,14,23,14,98,34,34,23,14,23,14,14,
     *13,34,14,98,23,14,34,34,14,33,32,98,35,35,104,61,105,62,
     *1,17,21,17,22,21,21,22,21,2,67,68,69,2,9,9,68,69,70,2,9,
     *24,24,15,25,25,16,
     *9*0/
      data nzk2/
     *   8,8,1,8,9,8,8,1,1,
     *7,14,13,16,25,
     *   23,14,23,14,31,33,32,34,35,31,23,31,33,
     *34,31,32,34,31,33,32,33,33,35,31,33,31,33,
     *32,34,35,31,33,34,35,31,33,33,33,33,32,35,
     *35,35,
     *23,23,13,31,32,33,13,31,32,31,31,32,33,32,
     *32,35,31,32,32,33,31,33,35,33,32,32,32,35,
     *23,23,14,31,34,33,14,31,33,31,31,34,32,33,
     *34,35,31,34,34,33,31,33,35,33,34,34,33,35,1,2,8,9,
     *25,13,35,32,32,33,31,13,23,31,13,23,14,79,80,31,13,23,14,78,79,
     *8,1,8,1,8,1,
     *9*0/
      data nzk3/
     *   23,14,13,13,23,13,23,23,14,
     *0,7,14,0,0,
     *       0, 0,23,23, 0, 0, 0, 0, 0, 0, 0, 0,
     * 0, 0,33,31,31, 0,33,34,32,34, 0,35, 0,31,
     *35,35,35, 0,31,31,31,35,31,33,34,31,33,34,31,33,35,
     * 0,23,14, 0, 0, 0, 0, 0, 0,32,33,33,33,32,
     *34, 0,35, 0,35,35,31,31,35,32,34,31,33,32,
     * 0,23,13, 0, 0, 0, 0, 0, 0,34,33,33,34,33,
     *34, 0,35, 0,35,35,31,31,35,34,34,31,34,34,25*0,23,14,14,23,13,13,
     *9*0/
c     particle  names
      data anamz/
     *'nnpi','anppi','annpi',
     *' ets  ',' pap  ',' pan  ','apn   ','deo   ','s+2030','an*-14',
     *'an*014','konpi ','akoppi', 3*' '/
c     name of decay channel
      data zknam4/
     *'nnpi0','pnpi-','apppi+','annpi+','anppi0','apnpi+','annpi0',
     *'apppi0','anppi-'/
      data zknam5/
     *' gaga ','p+p-ga','etp+p-','k+k-  ','k0ak0' ,
     *' popo ',' p+p- ','popopo','p+p0p-','p0et  ','&0r0  ','p-r+',
     *'p+r-  ','poom  ',' etet ','etsp0 ','r0et  ',' r0r0 ','r+r-' ,
     *'p0etr0','p-etr+','p+etr-',' omet ','p0r0r0','p0r+r-','p-r+r0',
     *'p+r-r0','r0om  ','p0etom','etsr0 ','etetet','p0r0om','p-r+om',
     *'p+r-om','omom  ','r0etet','r0r0et','r+r-et','p0omom','ometet',
     *'r0r0r0','r+r0r-','etsret','omr0r0','omr+r-','omomet','omomr0',
     *'omomom',
     *' p+po ','p+popo','p+p+p-','p+et  ','p0r+  ','p+r0  ','etsp+' ,
     *'r+et  ',' r0r+ ','poetr+','p+etr0','por+r-','p+r0r0','p-r+r+',
     *'p+r-r+','r+om  ','p+etom','etsr+ ','por+om','p+r0om','r+etet',
     *'r+r0et','p+omom','r0r0r+','r+r+r-','etsr+e','omr+r0','omomr+',
     *'p-po  ','p-popo','p-p-p+','p-et  ','por-  ','p-r0  ','etsp-' ,
     *'r-et  ','r-r0  ','poetr-','p-etr0','por-r0','p-r+r-','p-r0r0'/
      data zknam6/
     *'p+r-r-','r-om  ','p-etom','etsr- ','por-om','p-r0om','r-etet',
     *'r-r0et','p-omom','r0r0r-','r+r-r-','etsr-e','omr0r-','omomr-',
     *'pan-14','apn+14','nan014','ann014','pako','lpi+',
     *'si+om ','lamro+','si0ro+','si+ro0','si+eta','si0pi+','si+pi0',
     *'apeta ','an=p+ ','an-po ','anopo ','aprhoo','anrho-','aneta' ,
     *'an-p+ ','an0po ','an+p- ','aprho+','anrho0',
     *'konpio','koppi-','k+npi-','akoppo','akonp+','k-ppi+',
     *9*' '/
      end

c
      function iefunC(pl,ire)
c*****iefunC calculates a momentum index
c      integer * 2 ich,ibar,k1,k2,nzk,nrk,
#include "Zmsg.h"
      integer * 2 nrk,
     * ieii,ikii,nure
      common /runC/ runtes,eftes
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh( 268)
      common /reacC/umo( 296),plabf( 296),siin( 296),wk( 5184),
     *nrk(2, 268),nure(30,2)
      ipla=ieii(ire)+1
     *+1
      iple=ieii(ire+1)
      if (pl.lt.0.) go to 13
      do 2 i=ipla,iple
      j=i-ipla+1
      if (pl.le.plabf(i)) go to 3
    2 continue
      i=iple
c$$$$$$$$$$$$$$$$$$$
c      if ( eftes.gt.40.) go to 4321
c$$$$$$$$$$$$$$$$$$$
      if ( eftes.ge.0.) go to 4321
      eftes=eftes+1.
c  &&&&&&&&&&&&&&&&&&
      write(errmsg, 10)pl,j
      call cerrorMsg(errmsg, 1)
c &&&&&&&&&&&&&&&&
 4321 continue
      go to 4323
   13 continue
      do 12 i=ipla,iple
      j=i-ipla+1
      if (-pl.le.umo(i)) go to 3
   12 continue
      i=iple
c$$$$$$$$$$$$$$$$$$$
c     if ( eftes.gt.40.) go to 4322
c$$$$$$$$$$$$$$$$$$$
c      if ( eftes.gt.1.) go to 4322
      if ( eftes.gt.0.) go to 4322
      eftes=eftes+1.
c    &&&&&&&&&&&&&
      write(errmsg, 10) pl,i
      call cerrorMsg(errmsg, 1)
c      &&&&&&
 4322 continue
    3 continue
 4323 continue
      iefunC=i
      return
   10 format(14h plab or -ecm=,e10.4,27h is out of considered range
     *,8h iefunC=,i5)
      end
c           si is total x-section
      subroutine sigintC(ire ,plab,n,ie ,amt ,amn,ecm ,si ,itar)
cc      integer * 2 ich,ibar,k1,k2,nzk,nrk
      integer * 2 ich,ibar,k1,k2,      nrk
     *,ieii,ikii,nure
      common/abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh( 268)
      common /reacC/umo( 296),plabf( 296),siin( 296),wk( 5184),
     *nrk(2, 268),nure(30,2)
      ie=iefunC(plab,ire)
      if (ie.le.ieii(ire)) ie=ie+1
      amt=am(itar)
      amn=am(n)
      amn2=amn*amn
      amt2=amt*amt
      ecm=sqrt(amn2+amt2+2.*amt*sqrt(amn2+plab**2))
c*** interpolation preparation
      ecmo=umo(ie)
      ecm1=umo(ie-1)
      decm=ecmo-ecm1
      dec=ecmo-ecm
      iiki=ikii(ire)+1
      eklim=-thresh(iiki)
      wok=siin(ie)
      wdk=wok-siin(ie-1)
      if (ecm.gt.ecmo) wdk=0.
c*** interpolation in channel weights
      ielim=iefunC(eklim,ire)
      delim=umo(ielim)+eklim
     *+1.e-16
      dete=(ecm-(ecmo-eklim)*.5)*2.
      if (delim*delim-dete*dete) 112,112,113
  113 decc=delim
      go to 114
  112 decc=decm
  114 continue
      wkk=wok-wdk*dec/(decc+1.e-9)
      if (wkk.lt.0.) wkk=0.
      si=wkk+1.e-12
      if (-eklim.gt.ecm) si=1.e-14
      return
      end
      subroutine tchoicC(t,p,pp,e,ee,i,ii,n,am1,am2)
c     ****************************
c     tchoicC calculates a random value
c     for the four-momentum-transfer t
c     ****************************
      common /gamredC/ redu,amo,amm(15 )
c      integer * 2 ich,ibar,k1,k2,nzk,nrk
      integer * 2 ich,ibar,k1,k2
      common/abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common/slopeC/sm(25),bbm(25),bbb(25)
c##############################
      real*8   vb, r
c#######################
      ama=am1
      amb=am2
      if (i.gt.30.and.ii.gt.30) go to 1
      iii=ii
      am3=am2
      if (i.le.30) go to 11
      iii=i
      am3=am1
   11 continue
      go to 10
    1 continue
      iii=ii
      am3=am2
      if (ama.le.amb) go to 10
      iii=i
      am3=am1
   10 continue
      ib=ibar(iii)
      ama=am3
      k=(ama-0.75)/0.05
      if (k-2.lt.0) k=1
      if (k-26.ge.0) k=25
      if (ib)21,22,21
   22 bm=bbm(k)
      go to 23
   21 bm=bbb(k)
   23 continue
c     normalization
      tmin=-2.*(e*ee-p*pp)+am(n)**2+am1  **2
      tmax=-2.*(e*ee+p*pp)+am(n)**2+am1  **2
      call rndc(vb)
      if (vb.lt.0.2) bm=bm*0.1
     **0.5
      tmi=bm*tmin
      tma=bm*tmax
      etma=0.
      if (abs(tma).gt.120.) go to 100
      etma=exp(tma)
  100 continue
      an=(1./bm)*(exp(tmi)-etma)
c*** random choice of the t - value
      call rndc(r)
      t=(1./bm)*log(etma+r*an*bm)
      return
      end
      subroutine threpdC(umo,ecm1,ecm2,ecm3,pcm1,pcm2,pcm3,cod1,cof1,
     *sif1,cod2,cof2,sif2,cod3,cof3,sif3,am1,am2,am3)
      dimension f(5),xx(5)
c***three particle decay in the cm - system
      common /gamredC/ redu,amo,amm(15 )
      common/dreiC/uumo,aam1,aam2,aam3,s22,umo2,am11,am22,am33,s2sup
     *,s2sap(2)
c########################
      real*8  c, y, s1, uw, xxx
c####################

      data eps/1.e-14/
      umoo=umo+umo
c***s1, s2, s3 are the invariant masses of the particles 1, 2, 3
c***j. von neumann - random - selection of s2
c***calculation of the maximum of the s2 - distribution
      uumo=umo
      aam1=am1
      aam2=am2
      aam3=am3
c
      gu=(am2+am3)**2
      go=(umo-am1)**2
      ufak=1.00001
      if (gu.gt.go) ufak=0.99999
      ofak=2.-ufak
      gu=gu*ufak
      go=go*ofak
      ds2=(go-gu)/99.
      am11=am1*am1
      am22=am2*am2
      am33=am3*am3
      umo2=umo*umo
      rho2=0.
      s22=gu
      do 124 i=1,100
      s21=s22
      s22=gu+(i-1.)*ds2
      rho1=rho2
      rho2=xlambC(s22,umo2,am11)*xlambC(s22,am22,am33)/(s22+eps)
      if(rho2.lt.rho1) go to 125
  124 continue
  125 s2sup=(s22-s21)/2.+s21
      suprho=xlambC(s2sup,umo2,am11)*xlambC(s2sup,am22,am33)/(s2sup+eps)
      suprho=suprho*1.05
      xo=s21-ds2
      if (gu.lt.go.and.xo.lt.gu) xo=gu
      if (gu.gt.go.and.xo.gt.gu) xo=gu
      xx(1)=xo
      xx(3)=s22
      x1=(xo+s22)*0.5
      xx(2)=x1
      f(3)=rho2
      f(1)=xlambC(xo,umo2,am11)*xlambC(xo,am22,am33)/(xo+eps)
      f(2)=xlambC(x1,umo2,am11)*xlambC(x1,am22,am33)/(x1+eps)
      do 126 i=1,16
      x4=(xx(1)+xx(2))*0.5
      x5=(xx(2)+xx(3))*0.5
      f(4)=xlambC(x4,umo2,am11)*xlambC(x4,am22,am33)/(x4+eps)
      f(5)=xlambC(x5,umo2,am11)*xlambC(x5,am22,am33)/(x5+eps)
      xx(4)=x4
      xx(5)=x5
      do 128 ii=1,5
      ia=ii
      do 128 iii=ia,5
      if (f (ii).ge.f (iii)) go to 128
      fh=f(ii)
      f(ii)=f(iii)
      f(iii)=fh
      fh=xx(ii)
      xx(ii)=xx(iii)
      xx(iii)=fh
128   continue
      suprho=f(1)
      s2sup=xx(1)
      do 129 ii=1,3
      ia=ii
      do 129 iii=ia,3
      if (xx(ii).ge.xx(iii)) go to 129
      fh=f(ii)
      f(ii)=f(iii)
      f(iii)=fh
      fh=xx(ii)
      xx(ii)=xx(iii)
      xx(iii)=fh
129   continue
126   continue
      am23=(am2+am3)**2
      ith=0
      redu=2.
    1 continue
      ith=ith+1
      if (ith.gt.200) redu=-9.
      if (ith.gt.200) go to 400
      call rndc(c)
      s2=am23+c*((umo-am1)**2-am23)
      call rndc(y)
      y=y*suprho
      rho=xlambC(s2,umo2,am11)*xlambC(s2,am22,am33)/s2
      if(y.gt.rho) go to 1
c***random selection of s3 and calculation of s1
      call rndc(s1)
      s1=s1*rho+am11+am22-(s2-umo2+am11)*(s2+am22-am33)/(2.*s2)-
     frho/2.
      s3=umo2+am11+am22+am33-s1-s2
      ecm1=(umo2+am11-s2)/umoo
     *+1.e-6
      ecm2=(umo2+am22-s3)/umoo
     *+1.e-6
      ecm3=(umo2+am33-s1)/umoo
     *+1.e-6
       pcm1=sqrt((ecm1+am1)*(ecm1-am1))
       pcm2=sqrt((ecm2+am2)*(ecm2-am2))
       pcm3=sqrt((ecm3+am3)*(ecm3-am3))
      call cosiC(sfe,cfe)
c***th is the angle between particles 1 and 2
c***th1, th2 are the angles between particles 1, 2 and the direction of
       if ((pcm1.le.1.e-3).or.(pcm2.le.1.e-3)) go to 200
       costh=(ecm1*ecm2+0.5*(am11+am22-s1))/(pcm1*pcm2)
       go to 300
 200   call rndc(uw)
       costh=(uw-.5)*2.
 300   continue
       if(abs(costh).gt.0.99999) costh=sign(0.99999,costh)
      if (redu.lt.1.) return
      costh2=(pcm3*pcm3+pcm2*pcm2-pcm1*pcm1)/(2.*pcm2*pcm3)
       if(abs(costh2).gt.0.99999) costh2=sign(0.99999,costh2)
      sinth2=sqrt(1.-costh2*costh2)
      sinth1=costh2*sqrt(1.-costh*costh)-costh*sinth2
      costh1=costh*costh2+sinth2*sqrt(1.-costh*costh)
c***random selection of the spherical coordinates of the direction of pa
c***cfe, sfe are cos and sin of the rotation angle of the system 1, 2 ar
c***the direction of particle 3
c***calculation of the spherical coordinates of particles 1, 2
      cx11=-costh1
      cy11=sinth1*cfe
      cz11=sinth1*sfe
      cx22=-costh2
      cy22=-sinth2*cfe
      cz22=-sinth2*sfe
      call cosiC(sif3,cof3)
c  ******************  do while for avoiding zero divide by k.k 
c                      '98/03/07
      do while (.true.)
         do while (.true.)
            call rndc(xxx)
            cod3 = xxx
            cod3=2.*cod3-1.
            sid3=sqrt(1.-cod3*cod3)
            cod1=cx11*cod3+cz11*sid3
            sid1=sqrt(1.-cod1*cod1)
            if(sid1 .ne. 0.) goto 123
         enddo
 123     continue
c ***************
         sif1=
     *  (cx11*sid3*sif3+cy11*cof3-cz11*cod3*sif3)/sid1
         cof1=
     *  (cx11*sid3*cof3-cy11*sif3-cz11*cod3*cof3)/sid1
         
         cod2=cx22*cod3+cz22*sid3
         sid2=sqrt(1.-cod2*cod2)
         if(sid2 .ne. 0.) goto 127
      enddo
 127  continue
c *********************
      cof2=(cx22*sid3*cof3-cy22*sif3-cz22*cod3*cof3)/sid2
      sif2=(cx22*sid3*sif3+cy22*cof3-cz22*cod3*sif3)/sid2
400   return
      end
      subroutine twopadC(umo,ecm1,ecm2,pcm1,pcm2,cod1,cof1,sif1,
     *cod2,cof2,sif2,am1,am2)
c*****two particle decay in the cm - system
      common /gamredC/ redu,amo,amm(15 )
c##################
      real*8  xxx
c##################

      umo2=umo*umo
      am11=am1*am1
      am22=am2*am2
      ecm1=(umo2+am11-am22)/(2.*umo)
      ecm2=umo-ecm1
      wau=ecm1**2-am11
      if (wau.lt.0.) redu=redu-5.
      wau=abs(wau)
      pcm1=sqrt(wau)
      pcm2=pcm1
      call cosiC(sif1,cof1)
      call rndc(xxx)
      cod1 = xxx
      cod1=2.*cod1-1.
      cod2=-cod1
      cof2=-cof1
      sif2=-sif1
      return
      end
      subroutine twoparC(e1,e2,p1,p2,cod1,cod2,cof1,cof2,sif1,sif2,
     1it1,it2,umoo,ecm,p,n,am1,am2)
c     ******************************************************
c     quasi two particle production
c     twoparC calculates the energys and the momenta
c     for the created particles or resonances it1 and it2
c     in the cm - system
c     cod1,cod2,cof1,cof2,sif1,sif2 are the angles for
c     spherical coordinates
c     ******************************************************
      common /gamredC/ redu,amo,amm(15 )
c      integer * 2 ich,ibar,k1,k2,nzk,nrk
      integer * 2 ich,ibar,k1,k2
      common/abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
   9   continue
      ama=am1
      amb=am2
      ama2=ama*ama
      amb2=amb*amb
      s=umoo*umoo
      e1=(s-amb2+ama2)/(2.*umoo)
      e2=(s-ama2+amb2)/(2.*umoo)
      if (e1.lt.ama*1.00001) e1=ama*1.00001
      amte=e1*e1-ama2
  11  continue
      amte=amte+1.e-18
      p1=sqrt(amte)
      p2=p1
c     / p2 / = / p1 /  but opposite directions
c     determination  of  the angles
c     cos(theta1)=cod1      cos(theta2)=cod2
c     sin(phi1)=sif1        sin(phi2)=sif2
c     cos(phi1)=cof1        cos(phi2)=cof2
c     phi is uniformly distributed in ( 0,2*pi )
      call cosiC(cof1,sif1)
      cof2=-cof1
      sif2=-sif1
c     calculation of theta1
      call tchoicC(tr,p,p1,ecm,e1,it1,it2,n,am1,am2)
      cod1=(tr-ama2-am(n)*am(n)+2.*ecm*e1)/(2.*p*p1+1.e-18)
      if (cod1.gt.0.9999999) cod1=0.9999999
      cod2=-cod1
      return
      end
c     -----------------------------
      function xlambC(x,y,z)
      common /gamredC/ redu,amo,amm(15 )
      common/dreiC/test(12)
      yz=y-z
      xlambC=x*x-2.*x*(y+z)+yz*yz
      xlam =xlambC
      if(xlambC.le.0.)xlambC=abs(xlambC)
      xlambC=sqrt(xlambC)
      return
      end
      subroutine cosiC(sfe,cfe)
    1 x=rndmC(a)
      y=rndmC(b)
      xx=x*x
      yy=y*y
      xy=xx+yy
      if(xy.gt.1.) go to 1
      cfe=(xx-yy)/xy
      sfe=2.*x*y/xy
      if(rndmC(c).lt.0.5) go to 2
      return
    2 sfe=-sfe
      return
      end
      subroutine aagausC(x,a,s)
c#################
      real*8  xx, mean, disp, ans
      real*4 x
c################
c      data is/0/
      mean = a
      disp = s
      call kgauss(mean, disp, ans)
      x = ans
c      if(is.ne.0)   go to 1
c      call rndc(xx)
c      x = xx
c      ro=sqrt(abs(2.*log(x)))
c      call cosiC(sfe,cfe)
c      x=ro*sfe
c      is=1
c      go to 2
c    1 x=ro*cfe
c      is=0
c    2 x=a+x*s
c      return
      end
c     subroutine rndc(x)
c     x=rndmC(v)
c     return
c     end
c
c     function rndmC(v)
c***  ibm - random - number generator
c         common /ran4g/iy
c     ix=iy*65539
c     if (iy) 5,6,6
c   5 iy=iy+2147483647 + 1
c   6 yfl=iy
c     rndmC=yfl*.4656613 e-9
c     iy=ix
c     return
c     end
c         block data
c         common /ran4g/iy
c         data iy /24025187/
c         end
      subroutine sfecfeC(sfe,cfe)
      call cosiC(sfe,cfe)
      return
      end
c ------------------------
      subroutine dateshC
c*** subroutine for output of data tables
      integer * 2 ich,ibar,k1,k2,nzk,nrk
     *,ichar
     *,ieii,ikii,nure
      character*8 z(3)

      common /datesC/ dat
      common /slopC/ cm(13),bcm(13),bcb(13)
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh(268)
         common /reacC/umo(296),plabf(296),siin(296),wk(5184),
     *nrk(2,268),nure(30,2)
         dimension si(5184)
      equivalence (wk(1),si(1))
      common /splitC/              nzk( 460,3),wt( 460)
      common/abltisC/am (110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)

      common /namsdC/ aname(110), zkname(460), rkname(268)
      character*8 aname, zkname, rkname


      common /metlspC/ is,its(10),xs(10),ys(10),zs(10),cxs(10),cys(10),
     *czs(10),els(10),pls(10)
     *,cosrn(15)
      common /finlspC/ ir,itr(20),xr(20),yr(20),zr(20),cxr(20),cyr(20),
     *czr(20),elr(20),plr(20)
      common /materC/ rho(10)
      dimension ichar(110)
      equivalence (ich(1),ichar(1))

       dimension ireact(32),hsi(31)
      dimension zp(4600),vp(4600)
      dimension iraect(32)
      dimension ireda(21)

      character*1  symb(40),symbo(40)
      data symbo/
     * '*','2','3','4','5','6','7','8','9',
     * 'z','+','a','o','b','c','d','e','f','g','h',
     * 'i','j','k','l','m','n','o','p','q','r',
     * 's','t','u','v','w','x','y','1','-', ' '/

      data ireact/13,1,13,8,14,1,14,8,15,1,15,8,16,1,16,8,1,1,1,8,8,8,2,
     *1,2,8,9,1,24,8,25,1/
      data iraect/0,0,23,1,23,8,4*0,24,1,25,2,0,0,0,0,8,1,0,0,8,9,8*0/

      data ireda/14,11,11,14,17*18/

      i12=16
      joo=108
      do 41 i=1,joo
      if (i.le.1) go to 106
      ites=(((i+12)/60)*60)-i
     *-12
      if (ites.lt.0) go to 104
  106 continue
      write (6,105)
      write (6,110)
      write (6,110)
         itab=2
         if (i.lt.5) write (6, 1102)itab
         if (i.gt.5) write (6, 1103)itab
 1102 format (' table ',i1,':')
 1103 format (' table ',i1,' continued:')
  105 format (1h1)
      if (i.lt.5) write (6, 102 )
  102 format(   ' table of used particles and resonances (i)',//
     *' i = number of particle or resonance',/
     *' aname = name of i'/,
     *' am = mass of i  (gev)',/
     *' ga = width of i  (gev)',/
     *' tau = life time of i  (sec.)',/
     *' ich = electric charge of i, ibar = baryonic charge of i',/' ', '
     *k1 = first decay channel number, k2 = last decay channel number of
     * i',/  )
      write (6, 101 )
  101 format('   i   aname    am         ga         tau      ich  ibar k
     *1 k2'/)
  104 continue
      write (6,100)i,aname(i),am(i),ga(i),tau(i),ich(i),ibar(i),k1(i),k2
     *(i)
  100 format (1i4,2x,1a6,3e11.4,4i4)
   41 continue
      kc=0
         itab=3
      do 2 i=1,joo
      ik1=k1(i)
      ik2=k2(i)
      if (ik1.le.0) go to 2
      do 3 ik=ik1,ik2
      i1=nzk(ik,1)
      i2=nzk(ik,2)
      i3=nzk(ik,3)
      ii1=i1
      ii2=i2
      ii3=i3
      kc=kc+1
      if (kc.le.1) go to 107
      kcte=(((kc+12)/35)*35)-kc
     *-12
      if (kcte.lt.0) go to 112
  107 continue
      write(6,105)
         if (kc.lt.5) write (6, 1102)itab
         if (kc.gt.5) write (6, 1103)itab
      if (kc.lt.5)write (6, 92  )
   92 format(   ' decay channels of particles and resonances',/ )
      if (kc.lt.5)write (6, 93  )
   93 format(' aname = particle and resonance name'/,
     *' dname = decay channel name'/,
     *' j = decay channel number'/,
     *' i = number of decaying particle'/,
     *' wt = sum of decay channel weights from k1(i) up to j'/,
     *' nzk = program internal numbers of decay products'/,
     *5x)
      write(6,103)
  103 format (
     */'   i    j           aname            dname      decay products
     *          wt      nzk'/)
  112 continue
      if (i1.le.0) i1=29
      if (i2.le.0) i2=29
      if (i3.le.0) i3=29
      j1=i1
      j2=i2
      j3=i3
      z(1)=aname(i1)
                   z(2)=aname(i2)
                   z(3)=aname(i3)
      write (6, 91)i,ik,aname(i),zkname(ik),(z(j),j=1,3),wt(ik),ii1,ii2,
     *ii3
   91 format(2i5,' decay of ',1a6,' (channel: ',1a6,' ) to ',3(1a6,2x),
     *1f7.3,1x,3i3)
      amtest=am(i)-am(j1)-am(j2)-am(j3)
      ibtest=ibar(i)-ibar(j1)-ibar(j2)-ibar(j3)
      ictest=ichar(i)-ichar(j1)-ichar(j2)-ichar(j3)
      if (amtest) 51,52,52
   51 mtest=1
      go to 53
   52 mtest=0
   53 continue
         mtest=0
      if (mtest+ibtest**2+ictest**2.ne.0) write (6, 909)amtest,ibtest,
     * ictest
  909 format (' ***** error in mass, bar.ch. or e.ch. ',f10.5,2i6)
    3 continue
    2 continue
      itab=4
   89 format(//' table of exclusive reaction channels',/
     *,/' ik = reaction index'
     *,/' rkname = reaction name'
     *,/' nrk = program internal numbers of channel contituents')
      do 11 ire=1,i12
      irte=((ire+1)/2)*2-ire
     *-1
      if (irte.ge.0) write (6, 105)
         if (ire.lt.2) write (6, 1102)itab
      if ((irte.ge.0).and.(ire.gt.1)) write (6, 1103)itab
      if (ire.lt.2) write (6, 89 )
      ire1=ireact(ire*2-1)
      ire2=ireact(ire*2  )
      write (6, 110)
      irae1=iraect(ire*2-1)
      irae2=iraect(ire*2  )
      if(irae1 .gt. 1)goto 881
      write (6, 88  ) aname(ire1),aname(ire2)
      goto 882
  881 continue
      write (6, 888 )aname(ire1),aname(ire2),aname(irae1),aname(irae2)
  888 format (//' collision of primary particles ',2a6,' and ',2a6,' res
     *pectively',/
     *,19x,'ik rkname      channel constituents  nrk'/)
  882 continue
   88 format (//' collision of primary particles ',2a6,/
     *,19x,'ik rkname      channel constituents  nrk'/)
      ike=ikii(ire+1)-ikii(ire)
      iee=ieii(ire+1)-ieii(ire)
      iri=irii(ire)
      do 1 ik=1,ike
      innrk=ikii(ire)+ik
      it1=nrk(1, innrk)
      it2=nrk(2, innrk)
      jt1=it1
      jt2=it2
      if (it1.le.0) it1=29
      if (it2.le.0) it2=29
      write (6, 90  )ik,rkname(innrk ),aname(it1),aname(it2)
     *,jt1,jt2
      do 72 ie=1,iee
      innrk=ieii(ire)+ie
      insi=iri+iee*(ik-1)+ie
      wkdif=wk(insi)
      if (ik*ie-2.lt.0) wkdif=0.
      if (ik.lt.2) go to 711
c     if (ik.gt.1) wkdif=wkdif-wk(insi-iee)
                   wkdif=wkdif-wk(insi-iee)
  711 continue
      amtest=(umo(innrk)-am(it1)-am(it2))*wkdif
      if (jt2.gt.0) go to 108
      ikio=k1(it1)
      ikie=k2(it1)
      bm=20.
      do 109 ikl=ikio,ikie
      i1=nzk(ikl,1)
      i2=nzk(ikl,2)
      i3=nzk(ikl,3)
      if (i3.lt.1) i3=29
      bbm=am(i1)+am(i2)+am(i3)
      if (bbm.le.bm) bm=bbm
  109 continue
      amtest=(umo(innrk)-bm)*wkdif
  108 continue
      if (amtest) 71,72,72
   71 continue
      sikr=wkdif*siin(innrk)
         go to 72
88885 if (jt2.le.0) go to 72
      write (6, 908 )ire,ik,ie,umo(innrk),am(it1),am(it2),sikr
  908 format (' ***** error in energy threshold: ire,ik,ie,umo,wk,am1,
     *am(2)',3i5,4f10.5)
   72 continue
      ibtest= ibar(ire1)+ ibar(ire2)- ibar(it1)- ibar(it2)
      ictest=ichar(ire1)+ichar(ire2)-ichar(it1)-ichar(it2)
      if (amtest) 61,62,62
   61 mtest=1
      go to 63
   62 mtest=0
   63 continue
         mtest=0
      if (mtest+ibtest**2+ictest**2.ne.0) write (6, 909 )amtest,ibtest,
     * ictest
   90 format(' reaction channel ',1i4,2x,1a6,'  with  ',2(1a6,2x),2i8)
    1 continue
   11 continue
      itab=5
   82 format( /' table of reaction channel energies,cross sections and e
     *xclusive channel weights',/
     *' ie = energie index',/
     *' umo = cms - energy of the reaction',/
     *' plabf = lab momentum of the projectil particle',/
     *' sin = inelastic cross section of the reaction',/
     *' si/wk = cross section /(sum of the weights) of the designed chan
     *nels, respectively')
      do 311ire=1,i12
      ire1=ireact(ire*2-1)
      ire2=ireact(ire*2  )
      jkt=1
      iik=ikii(ire)
      iiko=ikii(ire+1)
      ikz=((iiko-iik+11)/10)
      if (iik.gt.iiko) go to 311
      iri=irii(ire)
      iioo=irii(ire+1)-iri
      ike=ikii(ire+1)-ikii(ire)
      iee=ieii(ire+1)-ieii(ire)
      do 32 jk=1,ike
      if (rkname(iik+jk).eq.aname( 29)) go to 32
      if (rkname(iik+jk).eq.rkname(30)) go to 32
          jkt=jk
   32 continue
      iik=iik+1
      ira=ire
      jkt1=jkt+1
      izz=0
      if (ire.lt.2) izz=7
      iez=0
      ietes=0
      iete=0
      do 31 ie=1,iee
      iez=iez+ikz
      if (ie.lt.2) go to 111
      if (ire.gt.4) go to 113
      i1i=1
      if (ie.gt.15)i1i=0
      i=iez+ikz+ikz+izz+4
     *-i1i
      i=i+(i/43)*(ikz+1)*2
      ietes=(i/43)*43-i
      if(ire.eq.2.and.ie.lt.6) go to 113
      if (ietes-iete.lt.0     ) go to 113
  111 continue
      write (6, 105 )
      if (ire*ie.lt.2) write (6, 1102)itab
      if (ire*ie.ge.2) write (6, 1103)itab
      if (ire*ie.lt.2) write (6, 82  )
      irae1=iraect(ire*2-1)
      irae2=iraect(ire*2  )
      if(irae1 .gt. 1)goto 981
      if (ie.lt.5)
     *write (6, 87  )aname(ire1),aname(ire2)
      goto 982
  981 continue
      if (ie.lt.5)
     *write (6, 787 )aname(ire1),aname(ire2),aname(irae1),aname(irae2)
  787 format ( /' collision of primary particles ',2a6,' and ',2a6,' res
     *pectively')
  982 continue
   87 format ( /' collision of primary particles ',2a6)
      if (ie.lt.5)
     1write (6, 184 )(thresh(jk),jk=iik,iiko)
      write (6, 84  )(rkname(jk),jk=iik,iiko)
  184 format(/' trheshold in cm energy', 2x,10f7.3,/25x,10f7.3,/25x,
     *10f7.3)
   84 format (/'  ie  umo  plabf  sin   si ',10(1a6,1x),
     */27x,10(1a6,1x),/27x,10(1a6,1x))
      write (6, 110 )
  110 format (' ')
  113 continue
      iete=ietes
      hsi(31)=0.
      innrk=ieii(ire)+ie
      dpl=plabf(innrk+1)-plabf(innrk)
      if (ie.ge.iee) dpl=0.
      do 33 ik=1,jkt
      insi=iri+iee*(ik-1)+ie
      wwk=wk(insi)*siin(innrk)
        wwo=wk(insi+1)
     **siin(innrk+1)
      if (ie.ge.iee) wwo=wwk
      do 123 je=1,6
      ww=wwk+0.2*(je-1.)*(wwo-wwk)
      ind=(iioo- ik   *iee+ie-1)*6+je+1
      pla=plabf(innrk)+0.2*(je-1.)*dpl
      vp(ind)=ww
      zp(ind)=pla
  123 continue
      hsi(ik)= si(insi)
      if (ik.lt.2) go to 331
                   hsi(ik)=hsi(ik)-si(insi-iee)
  331 continue
                   hsi(ik)=hsi(ik)*siin(innrk)
      hsi(31)=hsi(31)+hsi(ik)
   33 continue
      write (6, 80  )ie,umo(innrk),plabf(innrk),siin(innrk),
     *(hsi(jk),jk=1,jkt)
   31 continue
      mm=iee*ike
     **6
      iea=iee*6
      dvo=0.3
      if (ire.gt.9) dvo=0.5
      if (ire.gt.16) dvo=2.
      dzo=0.08
      if (ire.le.1) dzo=0.07
      if (ire.eq.4) dzo=0.07
      dvo=dvo*1.5
      vo=100.*dvo
      dvo=-dvo
      write(6,105)
      irae1=iraect(ire*2-1)
      irae2=iraect(ire*2  )
      if(irae1 .gt. 1)goto 781
      write (6, 87  ) aname(ire1),aname(ire2)
      go to 782
  781 continue
      write (6, 787 )aname(ire1),aname(ire2),aname(irae1),aname(irae2)
  782 continue
      write (6, 110 )
      write (6, 201 )
  201 format (' graphical representation of the reaction cross sections/
     *weights of the above reaction of table 5'/,' cross sections/weight
     *s (summed up from first channel in table to the last channel) plot
     *ted versus lab mom.'/)
      do 205 jk=1,ike
      symb(jk)=symbo(ike+1-jk)
  205 continue
      write (6, 202 )(rkname(jk),jk=iik,iiko)
      write (6, 203 )(symb (jk),jk=1  , ike)
      write (6, 110 )
  202 format (' the sum up to channel ',5x,13(1a6,1x),/28x,13(1a6,1x),
     */28x,13(1a6,1x))
  203 format (' corresponds to the symbol  ',13(3x,1a1,3x),/28x,13(3x,
     *1a1,3x),/28x,13(3x,1a1,3x))
      zo=0.3+50*dzo
      dzo=-dzo
      call plotC(zp,vp,mm,ike,iea,zo ,dzo,vo,dvo)
  311 continue
      write (6, 83  )
   83 format(//)
      do 211ire=1,i12
      ire1=ireact(ire*2-1)
      ire2=ireact(ire*2  )
      jkt=1
      iik=ikii(ire)
      iiko=ikii(ire+1)
      ikz=((iiko-iik+11)/10)
      if (iik.gt.iiko) go to 211
      iri=irii(ire)
      iioo=irii(ire+1)-iri
      iee=ieii(ire+1)-ieii(ire)
      ike=ikii(ire+1)-ikii(ire)
      do 22 jk=1,ike
      if (rkname(iik+jk).eq. rkname(30)) go to 22
      if (rkname(iik+jk).eq.  aname(29)) go to 22
      jkt=jk
   22 continue
      iik=iik+1
      ira=ire
      jkt1=jkt+1
      izz=0
      if (ire.lt.2) izz=7
      ietes=0
      iez=0
      iete=0
      do 21 ie=1,iee
      iez=iez+ikz
      if (ie.lt.2) go to 116
      if (ire-4) 118,118,114
  118 continue
      if ((ie/ireda(ire))*ireda(ire)-ie.lt.0) go to 114
      go to 116
88886 i1i=1
      if (ie.gt.15)i1i=0
      i=iez+ikz+ikz+izz+4
     *-i1i
      i=i+(i/43)*(ikz+1)*2
      ietes=(i/43)*43-i
      if (ietes-iete.lt.0     ) go to 114
  116 continue
      write (6, 105 )
      write (6, 1103)itab
      if (ie.lt.5)
     *write (6, 87  ) aname(ire1),aname(ire2)
      write (6, 81  )(rkname(jk),jk=iik,iiko)
   81 format (/'  ie  umo  plabf  sin   wk ',10(1a6,1x),
     */27x,10(1a6,1x),/27x,10(1a6,1x))
      write(6,110)
  114 continue
      iete=ietes
      hsi(31)=0.
      innrk=ieii(ire)+ie
      dpl=plabf(innrk+1)-plabf(innrk)
      if (ie.ge.iee) dpl=0.
      do 23 ik=1,jkt
      insi=iri+iee*(ik-1)+ie
      wwk=wk(insi)
        wwo=wk(insi+1)
      if (ie.ge.iee) wwo=wwk
      do 133 je=1,6
      ww=wwk+0.2*(je-1.)*(wwo-wwk)
      ind=(iioo- ik   *iee+ie-1)*6+je+1
      pla=plabf(innrk)+0.2*(je-1.)*dpl
      vp(ind)=ww
      zp(ind)=pla
  133 continue
      hsi(ik)= wk(insi)
      hsi(31)=hsi(31)+hsi(ik)
   23 continue
      write (6, 80  )ie,umo(innrk),plabf(innrk),siin(innrk),
     *(hsi(jk),jk=1,jkt)
   80 format (1i4,2f6.3,1f7.3,2x,10f7.3,/25x,10f7.3,/25x,10f7.3)
   21 continue
      mm=iee*ike
     **6
      iea=iee*6
      write (6, 105 )
      write (6, 87  ) aname(ire1),aname(ire2)
      write (6, 110 )
      write (6, 201 )
      do 206 jk=1,ike
      symb(jk)=symbo(ike+1-jk)
  206 continue
      write (6, 202 )(rkname(jk),jk=iik,iiko)
      write (6, 203 )(symb (jk),jk=1  , ike)
      write (6, 110 )
      dzo=0.08
      if (ire.le.1) dzo=0.07
      if (ire.eq.4) dzo=0.07
      zo=0.3+50*dzo
      dzo=-dzo
      call plotC(zp,vp,mm,ike,iea,zo ,dzo,1.,-0.01)
  211 continue
      return
      end
      subroutine   plotC(x,y,n,m,mm,xo,dx,yo,dy)
      dimension xx(61),yy(11),x(10),y(10)
      dimension  ll(101,10),l(40)
      data l /
     -1h*,1h2,1h3,1h4,1h5,1h6,1h7,1h8,1h9,1hz,
     -1h+,1ha,1h0,1hb,1hc,1hd,1he,1hf,1hg,1hh,
     -1hi,1hj,1hk,1hl,1hm,1hn,1ho,1hp,1hq,1hr ,
     *1hs,1ht,1hu,1hv,1hw,1hx,1hy,1h1,1h-,1h  /
      mn=51
      amn=mn
      do 4 i=1, mn
      ai=i-1
      xx(i)=xo+ai*dx
    4 continue
      do 5 i=1,11
      ai=i-1
      yy(i)=yo+10.*ai*dy
    5 continue
      write (6, 17  ) (yy(i),i=1,11)
   17 format (8x,11e10.2)
      mmn=mn-1
      do1jj=1,mmn,10
      jjj=jj-1
      do 2 i=1,101
      do 2 j=1,10
      ll(i,j)=l(40)
    2 continue
      do 3 i=1,101
      ll(i,1)=l(39)
    3 continue
      do 6 i=1,101,10
      do 6 j=1,10
      ll(i,j)=l(38)
    6 continue
      do 7 i=1,m
      do  7 j=1,mm
      ii=j+(i-1)*mm
      ix=(x(ii)-(xo-dx/2.))/dx+1.
      iy=(y(ii)-(yo-dy/2.))/dy+1.
      ix=ix-jjj
      if(ix) 7,7,8
    8 continue
      if(ix-10)   19,19,7
   19 continue
      if(iy)  7,7,10
   10 continue
      if(iy-101)    11,11,7
   11 continue
      ll(iy,ix)=l(i)
    7 continue
      do 12 i=1,10
      ii=i+jjj
      write (6, 9   ) xx(ii), (ll(j,i),j=1,101)
    9 format(e10.2,1x,101a1)
   12 continue
    1 continue
      write (6, 17  )(yy(i),i=1,11)
      return
      end
      block data  blkhd4
      common /namsdC/
     *aname(110),
     *   zknam1(87),zknam2(59),zknam3(105),zknam4(65),
     *zknam5(90),zknam6(54),
     *rknpi(  82),rknakc(  67),rknap(  35),
     *rknan(58),rknako(26)
	character*8 zknam1, zknam2, zknam3, zknam4, zknam5,
     *             zknam6, rknakc
     	character*8 rknako, aname, rknap,  rknpi, rknan


c*** names of reaction cannels
c***note: sign + - 0 in fornt of a resonance name, beginning with an  n,
c***a pion of charge + - 0
c***n* only written as n, eta only as et
c     particle  names
c
      data aname/'p','ap','e-','e+','nue','anue','gam','neu','aneu',
     *'mue+','mue-','k0l','pi+','pi-','k+','k-','lam','alam','k0s',
     *'sigm-','sigm+','sigm0','pi0', 'k0','ak0' ,5*' ',
     *'eta550','rho+77','rho077','rho-77','om0783','k*+892','k*0892',
     *'k*-892','ak*089','ka+125','ka0125','ka-125','aka012','k*+142',
     *'k*0142','k*-142','ak*014','s+1385','s01385','s-1385','l01820',
     *'l02030',
     *'n*++12','n*+ 12','n*012 ','n*-12 ','n*++16','n*+16 ','n*016',
     *'n*-16 ','n*+14 ','n*014 ','n*+15 ','n*015 ','n*+18 ','n*018',
     *'an--12','an*-12','an*012','an*+12','an--16','an*-16','an*016',
     *'an*+16','an*-15','an*015','de*=24',
     *'rpi+49','rpi049','rpi-49','pin++ ','pin+0 ','pin+- ','pin-0',
     *'pppi','pnpi','apppi','apnpi','k+ppi','k-ppi','k+npi','k-npi',
     *'s+1820 ','s-2030  ','nnpi','anppi','annpi',
     * ' ets  ',' pap  ',' pan  ','apn   ','deo   ','s+2030','an*-14',
     *'an*014','konpi ','akoppi',  3*' '/
c     name of decay channel
c
      data zknam1/
     *'p','ap','e-','e+','nue','anue','gam','pe-nue','apeanu',
     * 'eanunu','e-nuan','3pi0','pi+-0','pimunu','pie-nu',
     * 'mu+nue','mu-nue','mu+nue','pi+pi0','pi++-','pi+00',
     * 'm+p0nu','e+p0nu','mu-nu','pi-0','pi+--','pi-00',
     * 'm-p0nu','e-p0nu','ppi-','npi0','pe-nue', 'pm-nue', 
     *'appi+','anpi0','ape+nu','apm+nu','pi+pi-', 'pi0pi0','npi-',
     * 'ppi0','npi+','laga','gaga','gae+e-','gaga','gagap0',
     * 'pi000', 'pi+-0','pi+-ga','pi+0','pi+-','pi00','pi-0',
     * 'pi+-0','pi+-','pi0ga','k+pi0','k0pi+','kopi0','k+pi-',
     * 'k-pi0','ak0pi-','ak0pi0', 'pi+','k+pi0','k0pi+', 'k0pi0',
     * 'k+pi-','k-pi0','k0pi-','ak0pi0', 'k-pi+','k+pi0','k0pi+',
     * 'k+89p0','k08pi+','k+ro77','k0ro+7','k+om07', 'k+e055',
     * 'k0pi0','k+pi+','k089p0','k+8pi-','k0r077','k+r-77'/      

      data zknam2/
     *'k+r-77','k0om07','k0e055','k-pi0','k0pi-','k-89p0','ak08p-',
     *'k-r077','ak0r-7','k-om07','k-e055','ak0pi0','k-pi+','ak08p0',
     *'k-8pi+','ak0r07','ak0om7','ak0e05','la0pi+','si0pi+','si+pi0',
     *'la0pi0','si+pi-','si-pi+','la0pi-','si0pi-','neuak0','pk-',
     *'si+pi-','si0pi0','si-pi+','la0et0','s+1pi-','s-1pi+','so1pi0',
     *'neuak0','pk-','la0pi0','la0om0','la0ro0','si+ro-','si-ro+',
     *'si0ro0','la0et0','si0et0','si+pi-','si-pi+','si0pi0',
     *'k0s','k0l','k0s','k0l',
     *'p pi+ ','p pi0 ','n pi+ ','p pi- ','n pi0 ','n pi- ','p pi+ '/
c   designation n*@ means n*@1(1236)
c   @1=# means ++,  @1 = = means --
c   designation p+/0/- means pi+/pi0
c   designation  p+/0/- means pi+/pi0/pi- , respectively
      data zknam3/
     *'n*#pi0','n*+pi+','prho+ ','p pi0 ','n pi+ ','n*#pi-','n*+pi0',
     *'n*0pi+','prho0 ','nrho+ ','p pi- ','n pi0 ','n*+pi-','n*0pi0',
     *'n*-pi+','prho- ','nrho0 ','n pi- ','n*0pi-','n*-pi0','nrho- ',
     *'peta0 ','n*#pi-','n*+pi0','n*0pi+','prho0 ','nrho+ ','neta0' ,
     *'n*+pi-','n*0pi0','n*-pi+','prho- ','nrho0 ','p pi0 ','n pi+' ,
     *'n*#pi-','n*+pi0','n*0pi+','prho0 ','nrho+ ','p pi- ','n pi0' ,
     *'n*+pi-','n*0pi0','n*-pi+','prho- ','nrho0 ','p pi0 ','n pi+' ,
     *'prho0 ','nrho+ ','lamk+ ','s+ k0 ','s0 k+ ','peta0 ','p pi-' ,
     *'n pi0 ','prho- ','nrho0 ','lamk0 ','s0 k0 ','s- k+ ','neta/' ,
     *'appi- ','appi0 ','anpi- ','appi+ ','anpi0 ','anpi+ ','appi-' ,
     *'an*=p0','an*-p-','aprho-','appi0 ','anpi- ','an*=p+','an*-p0',
     *'an*0p-','aprho0','anrho-','appi+ ','anpi0 ','an*-p+','an*0p0',
     *'an*+p-','aprho+','anrho0','anpi+ ','an*0p+','an*+p0','anrho+',
     *'appi0 ','anpi- ','an*=p+','an*-p0','an*0p-','aprho0','anrho-',
     *'appi+,','anpi0 ','an*-p+','an*0p0','an*+p-','aprho+','anrho0'/
      data zknam4/
     *'pn*014','nn*=14',
     *'pi+0','pi+-','pi-0','p+0','n++','p+-','p00','n+0','n+-','n00',
     *'p-0','n-0','p--',
     *'pppi0','pnpi+','pnpi0','pppi-','nnpi+','apppi0','apnpi+',
     *'annpi0','anppi-','apnpi0','apppi-','annpi-','k+ppi0','k+npi+',
     *'k0ppi0','k-ppi0','k-npi+','akppi-','aknpi0','k+npi0','k+ppi-',
     *'k0ppi0          ','k0npi+','k-npi0','k-ppi-','aknpi-',
     *'pak0  ','si+pi0','si0pi+','si+eta','s+1pi0','s01pi+','neuk- ',
     *'la0pi-','si-om0','la0ro-','si0ro-','si-ro0','si-et0','si0pi-',
     * 'si-0',
     * 'nnpi0','pnpi-','apppi+','annpi+','anppi0','apnpi+','annpi0',
     *'apppi0','anppi-'    /
      data zknam5/
     *' gaga ','p+p-ga','etp+p-','k+k-  ','k0ak0' ,
     *' popo ',' p+p- ','popopo','p+p0p-','p0et  ','&0r0  ','p-r+ ' ,
     *'p+r-  ','poom  ',' etet ','etsp0 ','r0et  ',' r0r0 ','r+r- ' ,
     *'p0etr0','p-etr+','p+etr-',' omet ','p0r0r0','p0r+r-','p-r+r0',
     *'p+r-r0','r0om  ','p0etom','etsr0 ','etetet','p0r0om','p-r+om',
     *'p+r-om','omom  ','r0etet','r0r0et','r+r-et','p0omom','ometet',
     *'r0r0r0','r+r0r-','etsret','omr0r0','omr+r-','omomet','omomr0',
     *'omomom',
     *' p+po ','p+popo','p+p+p-','p+et  ','p0r+  ','p+r0  ','etsp+ ',
     *'r+et  ',' r0r+ ','poetr+','p+etr0','por+r-','p+r0r0','p-r+r+',
     *'p+r-r+','r+om  ','p+etom','etsr+ ','por+om','p+r0om','r+etet',
     *'r+r0et','p+omom','r0r0r+','r+r+r-','etsr+e','omr+r0','omomr+',
     *'p-po  ','p-popo','p-p-p+','p-et  ','por-  ','p-r0  ','etsp- ',
     *'r-et  ','r-r0  ','poetr-','p-etr0','por-r0','p-r+r-','p-r0r0'/
      data zknam6/
     *'p+r-r-','r-om  ','p-etom','etsr- ','por-om','p-r0om','r-etet',
     *'r-r0et','p-omom','r0r0r-','r+r-r-','etsr-e','omr0r-','omomr-',
     *'pan-14','apn+14','nan014','ann014','pako','lpi+',
     *'si+om ','lamro+','si0ro+','si+ro0','si+eta','si0pi+','si+pi0',
     *'apeta ','an=p+ ','an-po ','anopo ','aprhoo','anrho-','aneta',
     *'an-p+ ','an0po ','an+p- ','aprho+','anrho0',
     * 'konpio','koppi-','k+npi-','akoppo','akonp+','k-ppi+',
     *9*' '/
c
      data rknpi/
     *'pi+p  ','k+sig+', 'pin++' ,
     *'+n+ 12','0n++12','+n+ 15','+n+ 16','0n++16','+n+ 18','p rho+',
     *'n#12et','n+12r+','n#12r0','n#12om','n+15r+',
     *'pi+neu','pi0p','k+lam','k0sig+','k+sig0','pin+0',
     *'n+14  ','+n0 12','0n+ 12','-n++12','+n0 15','0n+ 15','+n0 16',
     *'0n+ 16','-n++16','+n0 18','0n+ 18','p eta ','n rho+','prho0 ',
     *'p om  ','n+12et','n012r+','n+12r0','n++12r','n+12om',
     *'pi-p','pi0neu','k0lam ','k+sig-','k0sig0','pin+- ',
     *'n014  ','-n+ 12','0n0 12','+n- 12','-n+ 15','0n0 15','-n+ 16',
     *'0n016 ','+n- 16','-n+ 18','0n0 18','n eta ','p rho-','n rho0',
     *'n om  ','n012et','n+12r-','n012r0','n-12r+','n012om',
     *'pi-neu','k0sig-','pin-0' ,
     *'-n0 12','0n- 12','-n0 15','-n0 16','0n- 16','-n0 18','n rho-',
     *'n-12et','n012r-','n-12r0','n-12om','n015r0'/



      data  
     * rknako/' kon','konpi ','k+n*- ','kon*o ','ko892n','kao12n',
     *'ko*14n','ko8n15','kon*15','k+1n-1','ko1n01','akop','pi+lam',
     *'pi+si0','pi0si+','akoppi','ko892p','akon12','k-n*++',
     *'akaop ','akon15','ako8n5','ak4n+2','k-4n#2','ak314p','s+2030'/
      end

c   $$$$$$$$$$$$$$$$ to get x-section $$$$$$$$$$$$$$$$$
      subroutine hadxscC(nin,plabin ,ntta, txsec)
      integer*2 ich,ibar,k1,k2,nzk,nrk,ieii,ikii,nure
      common /gamredC/ redu,amo,amm(15 )
c
      common /redverC/ irii(17),ikii(17),ieii(17)
     *,thresh(268)
      common/reacC/umo(296),plabf(296),siin(296),wk(5184),
     *nrk(2,268),nure(30,2)
      common /abltisC/am(110),ga(110),tau(110),ich(110)
     *,ibar(110),k1(110),k2(110)
      common /splitC/nzk(460,3),wt(460)
      common /metlspC/ is,its(10),cxs(10),cys(10),
     *czs(10),els(10),pls(10)
     *,cod1,cod2,cod3,cof1,cof2,cof3,sif1,sif2,sif3,ecm1,ecm2,ecm3,pcm1,
     *pcm2,pcm3
      common /finlspC/ ir,itr(20),cxr(20),
     *cyr(20),
     *czr(20),elr(20),plr(20)
      common /runC/ runtes,eftes
      dimension itprf(110)
      data itprf/-1,-1,5*1,-1,-1,1,1,1,-1,-1,-1,-1,6*1,-1,-1,-1,85*1/

      data nnn/0/
      data umoda/0./

c
c-----------------------------
c*** input variables list:
c*** sampling of hadron nucleon interaction for (about) 0.1 le plab le 6
c*** gev/c laboratory momentum region
c*** nin  - projectile hadron index
c*** plab - laboratory momentum of nin(gev/c)
c*** ntta - target nucleon index
c*** output- txsec: total x-section for the reaction
c----------------------------
      if(nin .eq. 9 .or. nin .eq. 2) then
          plab=max(2.e-1, plabin)
      else
          plab=plabin
      endif
       lowp=0
      if (itprf(nin  ).lt.0) go to 99999
      write (6,99998) nin
      stop
99998 format (3(5h ****/),
     *45h false use of the particle type index, value ,i4,3(5h ****/))
99999 continue
      iatmpt=0
      if (abs(plab-5.).lt.4.99999) go to 99997
c$$$$$$$$$
      if(nin .ne. 2 .and. nin .ne. 9) then
          write (6,99996)  nin, plab
      endif
c$$$$$$$$$
c
99996 format ('proj. hadron=',i2,' has invalid momemtun=',e15.5)
99997 continue
c          adjust target and projectile ptcl for those not
c          directly tabulated.
c        tabulated data: non tabluated equivalent one
c     1     pi+ p
c     2     pi+ n          pi0 p
c     3     pi- p          pi0 n
c     4     pi- n
c     5      k+ p
c     6      k+ n          k0  p
c     7      k- p          k0_b n
c     8      k- n
c     9      p  p
c     10     p  n
c     11     n  n
c     12   p_b  p          n_b n
c     13   p_b  n
c     14   n_b  p
c     15    k0  n
c     16  k0_b  p
c
      if(nin .eq. 24 .and. ntta .eq. 1) then
           n=15
           itta=8
      elseif(nin .eq. 25 .and. ntta .eq. 8) then
           n=16
           itta=1
      elseif(nin .eq. 9 .and. ntta .eq. 8) then
           n=2
           itta=1
      else
           n=nin
           itta=ntta
      endif
      umodat=n*1.11111+itta*2.19291
      if(umodat.ne.umoda) call calumoC(n,itta)
      umoda=umodat
1009  iatmpt=0
      lowp=lowp+1
 1000 continue
      imach=0
      redu=2.
      iw1=0.
      if (lowp.gt.20) then
          txsec=0.
      else
          nnn=n
          if (nnn.eq.n) go to 4322
           runtes=0.
           eftes=0.
 4322    continue
         is=1
         ir=0
         ist=1
         nstab=25
         ire=nure(n,1)
         if(itta.gt.1) ire=nure(n,2)
c
c-----------------------------
c*** ie,amt,ecm,si determination
c----------------------------
        call sigintC(ire,plab,n,ie,amt ,amn,ecm,si,itta)
        txsec=si
      endif
      if(nin .eq. 9 .or. nin .eq. 2) then
          if(plabin .lt. plab) then
             if(plabin .gt. 0.) then
                 txsec=txsec* plab/plabin
             else
                 txsec=1.e17
             endif
          endif
      endif
      end
      function rndmC(v)
         real*8 u
         call rndc(u)
         rndmC=u
      end
      subroutine trafoC(gam,bgam,cx,cy,cz,cod,cof,sif,p,ecm,
     1pl,cxl,cyl,czl,el)
c     lorentz transformation into the lab - system
c        /////// by k.k
      sid=max(1.d0-cod*cod, 0.d0)
      sid=sqrt(sid)
c
      plx=p*sid*cof
      ply=p*sid*sif
      pcmz=p*cod
      plz=gam*pcmz+bgam*ecm
      pl=sqrt(plx*plx+ply*ply+plz*plz)
      el=gam*ecm+bgam*pcmz
c     rotation into the original direction
c       //////////k.k
      if(pl .eq. 0.) then
         coz = 1.
      else
         coz=plz/pl
      endif
      siz=max(1.d0-coz**2, 0.d0)
      siz=sqrt(siz)

      call transC(cx,cy,cz,coz,siz,sif,cof,cxl,cyl,czl)
      return
      end
      subroutine transC(xo,yo,zo,cde,sde,sfe,cfe,x,y,z)
      if (abs(xo)-0.0001) 1,1,2
    1 if (abs(yo)-0.0001) 3,3,2
    3 continue
      x=sde*cfe
      y=sde*sfe
      z=cde
      return
    2 continue
      xi=sde*cfe
      yi=sde*sfe
      zi=cde
      a=sqrt(xo**2+yo**2)
      x=-yo*xi/a-zo*xo*yi/a+xo*zi
      y=xo*xi/a-zo*yo*yi/a+yo*zi
      z=a*yi+zo*zi
      return
      end
      block data  blkdc1
c***block data 1
c          ---------------- / part /---------------
      common /partcC/aname(115), anam1(65)
      character*8 aname, anam1
      common/partC/am(180),ga(180),tau(180),ich(180)
     *,ibar(180),k1(180),k2(180)
c       ++++++++++++++++++++++++++++++

c     particle  names

      data aname/'p','ap','e-','e+','nue','anue','gam','neu','aneu',
     *'mue+','mue-','k0l','pi+','pi-','k+','k-','lam','alam','k0s',
     *'sigm-','sigm+','sigm0','pi0',
     *'k0','ak0',5*' ',
     *'eta550','rho+77','rho077','rho-77','om0783','k*+892','k*0892',
     *'k*-892','ak*089','ka+125','ka0125','ka-125','aka012','k*+142',
     *'k*0142','k*-142','ak*014','s+1385','s01385','s-1385','l01820',
     *'l02030',
     *'n*++12','n*+ 12','n*012','n*-12','n*++16','n*+16','n*016',
     *'n*-16','n*+14','n*014','n*+15','n*015','n*+18','n*018',
     *'an--12','an*-12','an*012','an*+12','an--16','an*-16','an*016',
     *'an*+16','an*-15','an*015','de*=24',
     *'rpi+49','rpi049','rpi-49','pin++','pin+0','pin+-','pin-0',
     *'pppi','pnpi','apppi','apnpi','k+ppi','k-ppi','k+npi','k-npi',
     *'s+1820','s-2030',
     *'eta* ','phi  ','teta0','teta-','asig-','asig0','asig+',
     *'ateta0','ateta+','sig*+','sig*0','sig*-','teta*0','teta*',
     *'omega-','asig*-','asig*0','asig*+','atet*0','atet*+','omega+'
     */
      data anam1/'d0','d+','d-','ad0','f+','f-','etac','d*0','d*+',
     *'d*-','ad*0','f*+','f*-','psi','jpsi','tau+','tau-','nuet',
     *'anuet','nuem','anuem',
     *'c0+  ','a+   ','a0   ','c1++ ','c1+  ','c10  ','s+',
     *'s0   ','t0   ','xu++ ','xd+  ','xs+  ','ac0- ','aa-',
     *'aa0  ','ac1--','ac1- ','ac10 ','as-  ','as0  ','at0',
     *'axu--','axd- ','axs  ','c1*++','c1*+ ','c1*0 ','s*+',
     *'s*0  ','t*0  ','xu*++','xd*+ ','xs*+ ','teta++','ac1*--',
     *'ac1*-','ac1*0','as*- ','as*0 ','at*0 ','axu*--','axd*-',
     *'axs*-','atet--'/
c



c
c     s+1385+sigma+(1385)    l02030+lambda0(2030)
c     rho77=rho(770) om783=omega(783) k*14=k*(1420) and so on
c   designation n*@@ means n*@1(@2)
c
c     particle masses in gev
c
      data am/2*0.938,2*0.0005,3*0.,2*0.94,2*0.106,0.497,2*0.139,2*0.494
     *,2*1.115,0.497,1.197,1.189,1.193,0.134,2*.497,
     *  5*0.,0.548,3*0.773,0.783,
     *4*0.892,4*1.25,4*1.421,3*1.382,1.820,2.030,
     *4*1.23 ,4*1.675,2*1.43 ,2*1.515,2*1.775,4*1.23 ,4*1.675,2*1.515,
     *2.4,3*.489,4*1.3,4*2.2,4*1.7
     *,1.820,2.03
     *,0.958,1.019,1.315,1.321,1.189,1.192,1.197,1.315,1.321,3*1.385,
     *2*1.531,1.675,3*1.385,2*1.531,1.675
     *,4*1.863,3*2.030,2.006,2*2.008,2.006,2*2.140,3.684,3.097,
     *2*1.807,2*0.6,2*0.003,2.26,2.47,2.47,2.41,2.42,2.41,2.56,2.56,
     *2.73,3.61,3.61,3.79,2.26,2.47,2.47,2.41,2.42,2.41,2.56,2.56,2.73,
     *3.61,3.61,3.79,3*2.49,2*2.61,2.77,2*3.67,3.85,4.89,3*2.49,
     *2*2.61,2.77,2*3.67,3.85,4.89/
c
c     resonance width gamma in gev
c
      data ga/30*0.,8.5e-7,3*0.152,0.01,4*0.079,4*0.45,4*0.108,3*0.05,
     *0.085,0.18,
     *4*0.115,4*0.200,2*0.200,2*0.100,2*0.200,4*0.115,4*0.200,2*0.100,
     *.2,3*.1,4*.1,4*0.2,4*0.15
     *,.085,.18
     *,0.002,0.004,7*0.,0.034,0.034,0.036,0.009,0.009,0.0,0.034,0.034,
     *0.036,0.009,0.009,0.0
     *,7*0.,0.005,0.002,0.002,0.005,0.002,0.002,0.0002,0.0007,6*0.0
     *,44*0.0/
c
c     mean life time in seconds
c
      data tau/7*1.e+18,2*918.,2*2.2e-06,5.2e-08,2*2.6e-08,2*1.2e-08,
     *2*2.6e-10,0.9e-10,1.5e-10,8.e-11,5.e-15,8.e-17,
     *61*0.
     *,10*0.,2*0.,3.e-10,1.7e-10,0.8e-10,1.0e-14,1.5e-10,3.0e-10,
     *1.7e-10,5*0.,1.0e-10,5*0.,1.0e-10
     *,15*0.0,4*9.e-12,2*1.e+18,44*0.0/
c
c     charge of particles and resonances
c
      data ich/+1,-1,-1,+1,5*0,+1,-1,0,+1,-1,+1,-1,0,0,0,-1,+1,9*0,0,+1,
     *0,-1,0,+1,0,-1,0,+1,0,-1,0,+1,0,-1,0,+1,0,-1,0,0,
     *2,1,0,-1,2,1,0,-1,1,0,1,0,1,0,-2,-1,0,1,-2,-1,0,1,-1,0,1,
     *+1,0,-1,2,1,0,-1,2,1,0,-1,2,0,1,-1
     *,1,-1
     *,3*0,-1,-1,0,1,0,2*1,0,-1,0,-1,-1,-1,0,1,0,1,1
     *,0,1,-1,0,1,-1,0,0,1,-1,0,1,-1,0,0,1,-1,4*0
     *,1,1,0,2,1,0,1,0,0,2,1,1,-1,-1,0,-2,-1,0,-1,0,0,-2,-1,-1,2,1,0,1,
     *0,0,2,1,1,2,-2,-1,0,-1,0,0,-2,-1,-1,-2
     */
c
c     baryonic charge
c
      data ibar/+1,-1,5*0,+1,-1,7*0,+1,-1,0,+1,+1,+1,13*0,
     *12*0,+1,+1,+1,+1,+1,
     *14*1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,
     *3*0,4*1,2,2,0,0,1,1,1,1
     *,1,1
     *,0,0,1,1,-1,-1,-1,-1,-1,6*1,-1,-1,-1,-1,-1,-1
     *,21*0,12*1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10*1,-1,-1,-1,-1,
     *-1,-1,-1,-1,-1,-1
     */
c
c     first number of decay channels used for resonances
c     and decaying particles
c
      data k1/1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,24,30,34,38,40,41,43,
     *44,136,138,5* 330,
     *   46,51,52,54,55,58,60,62,64,66,68,70,72,74,82,90,98,106,109,112,
     *114,123,
     *140,141,143,145,146,150,157,164,168,174,180,187,194,202,210,211,
     *213,215,216,220,227,234,238,245,252, 254,255,256,257,259,262,265
     *,267,269,272,276,279,282,286,290
     *,293,299
     *,331,335,339,340,341,343,344,345,346,347,350,353,356,358,360,
     *363,366,369,372,374,376
     *,379,383,385,387,391,394,397,400,402,405,408,410,412,414,417,420
     *,425,430,431,432,433,434,448,452,457,458,459,460,461,462,466,468,
     *470,472,486,490,495,496,497,498,499,500,504,506,508,510,511,512,
     *513,514,515,516,517,518,519,522,523,524,525,526,527,528,529,530,
     *531/
c
c     last number of decay channels used for resonances
c     and decaying particles
c
      data k2/1,2,3,4,5,6,7,8,9,10,11,15,16,17,23,29,31,35,39,40,42,43,
     *45,137,139,5* 330,
     *   50,51,53,54,57,59,61,63,65,67,69,71,73,81,89,97,105,108,111,
     *113,122,135,
     *140,142,144,145,149,156,163,167,173,179,186,193,201,209,210,212,
     *214,215,219,226,233,237,244,251,253,254,255,256,258,261,264,266
     *,268,271,275,278,281,285,289,292
     *,298,307
     *,334,338,339,340,342,343,344,345,346,349,352,355,357,359,362,
     *365,368,371,373,375,378,382,384,386,390,393,396,399,401,404,407,
     *409,411,413,416,419,424,429,430,431,432,433,447,451,456,457,458,
     *459,460,461,465,467,469,
     *471,485,489,494,495,496,497,498,499,503,505,507,509,510,511,512,
     *513,514,515,516,517,518,521,522,523,524,525,526,527,528,529,530,
     *533/
      end

c    ===========================================


      block data blkdc2
c***block data 2
      common/decayccC/zknam1(87),zknam2(59),zknam3(105),zknam4(79),
     *zknam5(103),zknam6(100)
      character * 8 zknam1,zknam2,zknam3,zknam4,zknam5,zknam6

      common/decaycC/ nzk1(378),nzk11(155),nzk2(378),
     *nzk22(155),nzk3(378),nzk33(155),wt(266),wt2(64),wt3(103),wt4(100)

c
c     name of decay channel
c
      data zknam1/
     *'p','ap','e-','e+','nue','anue','gam','pe-nue','apeanu',    
     * 'eanunu','e-nuan','3pi0','pi+-0','pimunu','pie-nu',        
     * 'mu+nue', 'mu-nue', 'mu+nue','pi+pi0','pi++-','pi+00',     
     * 'm+p0nu','e+p0nu', 'mu-nu','pi-0','pi+--','pi-00',            
     * 'm-p0nu','e-p0nu','ppi-','npi0', 'pe-nue','pm-nue',          
     * 'appi+','anpi0','ape+nu','apm+nu','pi+pi-','pi0pi0',       
     * 'npi-','ppi0', 'npi+','laga','gaga','gae+e-','gaga',
     * 'gagap0','pi000','pi+-0','pi+-ga','pi+0','pi+-','pi00',
     * 'pi-0','pi+-0','pi+-', 'pi0ga','k+pi0','k0pi+',
     * 'kopi0','k+pi-','k-pi0','ak0pi-','ak0pi0','k-pi+',
     *'k+pi0','k0pi+','k0pi0','k+pi-','k-pi0','k0pi-',
     * 'ak0pi0','k-pi+','k+pi0','k0pi+','k+89p0','k08pi+',
     *  'k+ro77','k0ro+7', 'k+om07','k+e055','k0pi0','k+pi+',
     * 'k089p0','k+8pi-','k0r077', 'k+r-77'/

      data zknam2/
     *'k+r-77','k0om07','k0e055','k-pi0','k0pi-','k-89p0','ak08p-',
     *'k-r077','ak0r-7','k-om07','k-e055','ak0pi0','k-pi+','ak08p0',
     *'k-8pi+','ak0r07','ak0om7','ak0e05','la0pi+','si0pi+','si+pi0',
     *'la0pi0','si+pi-','si-pi+','la0pi-','si0pi-','neuak0','pk-',
     *'si+pi-','si0pi0','si-pi+','la0et0','s+1pi-','s-1pi+','so1pi0',
     *'neuak0','pk-','la0pi0','la0om0','la0ro0','si+ro-','si-ro+',
     *'si0ro0','la0et0','si0et0','si+pi-','si-pi+','si0pi0',
     *'k0s','k0l','k0s','k0l',
     *'p pi+ ','p pi0 ','n pi+ ','p pi- ','n pi0 ','n pi- ','p pi+ '/
c   designation n*@ means n*@1(1236)
c   @1=# means ++,  @1 = = means --
c   designation p+/0/- means pi+/pi0
c   designation  p+/0/- means pi+/pi0/pi- , respectively
      data zknam3/
     *'n*#pi0','n*+pi+','prho+ ','p pi0 ','n pi+ ','n*#pi-','n*+pi0',
     *'n*0pi+','prho0 ','nrho+ ','p pi- ','n pi0 ','n*+pi-','n*0pi0',
     *'n*-pi+','prho- ','nrho0 ','n pi- ','n*0pi-','n*-pi0','nrho- ',
     *'peta0 ','n*#pi-','n*+pi0','n*0pi+','prho0 ','nrho+ ','neta0' ,
     *'n*+pi-','n*0pi0','n*-pi+','prho- ','nrho0 ','p pi0 ','n pi+' ,
     *'n*#pi-','n*+pi0','n*0pi+','prho0 ','nrho+ ','p pi- ','n pi0' ,
     *'n*+pi-','n*0pi0','n*-pi+','prho- ','nrho0 ','p pi0 ','n pi+' ,
     *'prho0 ','nrho+ ','lamk+ ','s+ k0 ','s0 k+ ','peta0 ','p pi-' ,
     *'n pi0 ','prho- ','nrho0 ','lamk0 ','s0 k0 ','s- k+ ','neta' ,
     *'appi- ','appi0 ','anpi- ','appi+ ','anpi0 ','anpi+ ','appi-' ,
     *'an*=p0','an*-p-','aprho-','appi0 ','anpi- ','an*=p+','an*-p0',
     *'an*0p-','aprho0','anrho-','appi+ ','anpi0 ','an*-p+','an*0p0',
     *'an*+p-','aprho+','anrho0','anpi+ ','an*0p+','an*+p0','anrho+',
     *'appi0 ','anpi- ','an*=p+','an*-p0','an*0p-','aprho0','anrho-',
     *'appi+,','anpi0 ','an*-p+','an*0p0','an*+p-','aprho+','anrho0'/
      data zknam4/
     *'pn*014','nn*=14',
     *'pi+0','pi+-','pi-0','p+0','n++','p+-','p00','n+0','n+-','n00',
     *'p-0','n-0','p--',
     *'pppi0','pnpi+','pnpi0','pppi-','nnpi+','apppi0','apnpi+',
     *'annpi0','anppi-','apnpi0','apppi-','annpi-','k+ppi0','k+npi+',
     *'k0ppi0','k-ppi0','k-npi+','akppi-','aknpi0','k+npi0','k+ppi-', 
     *'k0ppi0','k0npi+','k-npi0','k-ppi-','aknpi-',
     *'pak0  ','si+pi0','si0pi+','si+eta','s+1pi0','s01pi+','neuk- ',
     *'a0pi-','si-om0','la0ro-','si0ro-','si-ro0','si-et0','si0pi-',
     *'si-0',23*' '/
c   zknam5
      data zknam5/
     *' epi+- ','epi00 ','gapi+-','gaga* ','k+-   ','klks  ','pi+-0',
     *'ega   ','lpi0  ','lpi   ','appi0 ','anpi- ','alaga ','anpi',
     *'alpi0 ','alpi+ ','lapi+ ','si+pi0','si0pi+','lapi0 ','si+pi-',
     *'si-pi+','lapi- ','si-pi0','si0pi-','te0pi0','te-pi+','te0pi-',
     *'te-pi0','te0pi ','te-pi ','lak-  ','alpi- ','as-pi0','as0pi-',
     *'alpi0 ','as+pi-','as-pi+','alpi+ ','as+pi0','as0pi+','at0pi0',
     *'at+pi-','at0pi+','at+pi0','at0pi ','at+pi ','alk+'  ,
     *'k-pi+ ','k-pi+0','k0pi+-','k0pi0 ','k-pi++','ak0pi+','k+pi--',
     *'k0pi- ','k+pi- ','k+pi-0','akpi-+','ak0pi0','etapif','k++- ' ,
     *'k+ak0 ','etapi-','k--+  ','k-k0  ','pi00  ','pi+-  ','gaga ' ,
     *'d0pi0 ','d0ga  ','d0pi+ ','d+pi0 ','dfga  ','ad0pi-','d-pi0' ,
     *'d-ga  ','ad0pi0','ad0ga ','f+ga  ','f+ga  ','f-ga  ','f-ga ' ,
     *'pspi+-','pspi00','pseta ','e+e-  ','mue+- ','pi+-0 ','m+nn ' ,
     *'e+nn  ','rho+nt','pi+ant','k*+ant','m-nn  ','e-nn  ','rho-nt',
     *'pi-nt ','k*-nt ','nuet  ','anuet ','nuem  ','anuem' /
      data zknam6/
     *'si+eta','si+et*','pak0  ','tet0k+','si*+et','n*+ak0','n*++k-',
     *'lamro+','si0ro+','si+ro0','si+ome','pak*0 ','n*+ak*','n*++k*',
     *'si+ak0','tet0pi','si+ak*','tet0ro','si0ak*','si+k*-','tet0om',
     *'tet-ro','si*0ak','c0+pi+','c0+pi0','c0+pi-','a+gam ','a0gam ',
     *'tet0ak','tet0k*','om-ro+','om-pi+','c1++ak','a+pi+ ','c0+ak0',
     *'a0pi+ ','a+ak0 ','t0pi+ ','asi-et','asi-e*','apk0  ','atet0k',
     *'asi*-e','an*-k0','an*--k','alamro','asi0ro','asi-ro','asi-om',
     *'apk*0 ','an*-k*','an*--k','asi-k0','atetpi','asi-k*','atetro',
     *'asi0k*','asi-k*','ate0om','ate+ro','asi*0k','ac-pi-','ac-pi0',
     *'ac-pi+','aa-gam','aa0gam','atet0k','ate0k*','aom+ro','aom+pi',
     *'ac1--k','aa-pi-','ac0-k0','aa0pi-','aa-k0 ','at0pi-','c1++ga',
     *'c1++ga','c10gam','s+gam ','s0gam ','t0gam ','xu++ga','xd+gam',
     *'xs+gam','a+akpi','t02pi+','c1++2k','ac1--g','ac1-ga','ac10ga',
     *'as-gam','as0gam','at0gam','axu--g','axd-ga','axs-ga','aa-kpi',
     *'at02pi','ac1--k'/

cc
c     weight of decay channel
      data wt/
     *11*1.,0.21,0.12,0.27,0.4,1.,1.,0.64,0.21,0.06,0.02,0.03,
     *0.04,0.64,0.21,0.06,0.02,0.03,0.04,0.64,0.36,0.00,0.00,0.64,0.36,
     *0.00,0.00,0.69,0.31,1.,0.52,0.48,1.,0.99,0.01,0.38,0.03,0.30,0.24,
     *0.05,1.,1.00,0.00,1.,0.90,0.01,0.09,0.33,0.67,0.33,0.67,0.33,0.67,
     *0.33,0.67,0.33,0.67,0.33,0.67,0.33,0.67,0.33,0.67,0.19,0.38,0.09,
     *0.20,0.03,0.04,0.05,0.02,0.19,0.38,0.09,0.20,0.03,0.04,0.05,0.02,
     *0.19,0.38,0.09,0.20,0.03,0.04,0.05,0.02,0.19,0.38,0.09,0.20,0.03,
     *0.04,0.05,0.02,0.88,0.06,0.06,0.88,0.06,0.06,0.88,0.12,0.19,0.19,
     *0.16,0.16,0.17,0.03,0.03,0.03,0.04,0.10,0.10,0.20,0.12,0.10,0.04,
     *0.04,0.05,0.075,0.075,0.03,0.03,0.04,0.5,0.5,0.5,0.5,
     *1.,.67,.33,.33,.67,1.,.25,.27,.18,.30,.17,.08,.18,.03,.24,.20,.10,
     *.08,.17,.24,.03,.18,.10,.20,.25,.18,.27,.30,.40,.20,.125,.075,
     *.075,.125,.40,.075,.125,.20,.125,.075,.18,.37,.13,.08,.04,.07,.13,
     *.37,.18,.04,.08,.13,.13,.07,.07,.13,.23,.47,.05,.02,.01,.02,.13,
     *.07,.47,.23,.05,.01,.02,.02,1.,.67,.33,.33,.67,1.,.25,.27,.18,
     *.30,.17,.08,.18,.03,.24,.20,.10,.08,.17,.24,.03,.18,.10,.20,.25,
     *.18,.27,.30,.18,.37,.13,.08,.04,.07,.13,.37,.18,.04,.08,.13,.13,
     *.07,.5,.5,3*1.,.8,.2,.6,.3,.1,.6,.3,.1,.8,.2/

       data wt2/
     * 0.33, .67, .66, .17, .17, .32, .17, .32, .19, .33, .33, .34, 
     * .3,.05,.65, .38, .12, .38, .12, .38, .12, .38, .12, .3,
     * .05, .65, 0.38, .25, .25, .02, .05, .05, 0.2, .2, .12, .1,
     * .07, .07, .14, .05, .05, 23*1./
c   wt3
      data
     * wt3/0.48,0.24,0.26,0.02,0.47,0.35,0.15,0.03,1.0,1.0,0.52,
     *0.48,1.0,1.0,1.0,1.0,0.9,0.05,0.05,0.9,0.05,0.05,0.9,0.05,0.05,
     *0.33,0.67,0.67,0.33,0.25,0.25,0.5,0.9,0.05,0.05,0.9,0.05,0.05,
     *0.9,0.05,0.05,0.33,0.67,0.67,0.33,0.25,0.25,0.5,0.1,0.5,0.16,
     *0.24,0.7,0.3,0.7,0.3,0.1,0.5,0.16,0.24,0.3,0.4,0.3,0.3,0.4,0.3,
     *0.49,0.49,0.02,0.55,0.45,0.68,0.3,0.02,0.68,0.3,0.02,0.55,0.45,
     *0.9,0.1,0.9,0.1,0.6,0.3,0.1,0.1,0.1,    0.8,0.28,0.28,0.35,0.07,
     *0.02,0.28,0.28,0.35,0.07,0.02,4*1.0/
      data wt4/
     *.02,.03,.07,.02,.02,.04,.13,.07,.06,.06,.20,.14,.04,.10,.25,
     *.03,.30,.42,.22,.35,.19,.16,.08,5*1.0,.37,.20,.36,.07,
     *6*0.5,.02,.03,.07,.02,.02,.04,.13,.07,.06,.06,.20,.14,
     *.04,.10,.25,.03,.30,.42,.22,.35,.19,.16,.08,5*1.0,
     *.37,.20,.36,.07,6*0.5,9*1.0,2*0.3,0.4,9*1.0,2*0.3,0.4
     */
c     particle numbers in decay channel
c
      data nzk1/
     *1,2,3,4,5,6,7,1,2,4,3,23,13,13,13,10,11,10,13,13,13,10,4,11,14,14,
     *14,11,3,1,8,1,1,2,9,2,2,13,23,8,1,8,17,7,7,7,23,23,13,13,13,13,23,
     *14,13,13,23,15,24,24,15,16,25,25,16,15,24,24,15,16,24,25,16,15,24,
     *36,37,15,24,15,15,24,15,37,36,24,15,24,24,16,24,38,39,16,25,16,16,
     *25,16,39,38,25,16,25,25,17,22,21,17,21,20,17,22,8,1,21,22,20,17,
     *48,50,49,8,1,17,17,17,21,20,22,17,22,21,20,22,19,12,19,12,
     * 1, 1, 8, 1, 8, 8, 1,53,54, 1, 1, 8,53,54,55, 1, 8, 1, 8,54,55,56,
     * 1, 8, 8,55,56, 8, 1,53,54,55, 1, 8, 8,54,55,56, 1, 8, 1, 8,53,54,
     *55, 1, 8, 1, 8,54,55,56, 1, 8, 1, 8, 1, 8,17,21,22, 1, 1, 8, 1, 8,
     *17,22,20, 8, 2, 2, 9, 2, 9, 9, 2,67,68, 2, 2, 9,67,68,69, 2, 9, 2,
     * 9,68,69,70, 2, 9, 9,69,70, 9, 2, 9,67,68,69, 2, 9, 2, 9,68,69,70,
     *2,9,1,8,13,13,14,1,8,1,1,8,8,8,1,8,1,1,1,1,1,8,2,2,9,9,2,2,9
     *,15,15,24,16,16,25,25,15,15,24,24,16,16,25,
     *1,21,22,21,48,49,8,17,20,17,22,20,20,22,20,23*0
     *,31,31,13,7,15,12,13,31,17,17,2,9,18,9,18,18,17,21,22,17,21,20,
     *17,20,22,97,98,97,98,97,98,17,18,99,100,18,101,99,18,101,100,
     *102,103,102,103,102,103,18/
      data nzk11/
     *16,16,24,24,16,25,15,24,15,15,25,25,31,15,15,31,16,16,23,13,7,
     *116,116,116,117,117,119,118,118,119,119,120,120,121,121,130,130,
     *130,4,10,13,10,4,32,13,36,11,3,34,14,38,133,134,135,136,
     *21,21,1,97,104,54,53,17,22,21,21,1,54,53,21,97,21,97,22,21,97,98,
     *105,3*137,138,139,97,97,109,109,140,138,137,139,138,145,99,99,2,
     * 102,110,68,67,18,100,99,99,2,68,67,99,102,99,102,100,99,102,103,
     *111,3*149,150,151,113,113,115,115,152,150,149,151,150,157,140,141,
     *142,143,144,145,146,147,148,138,145,140,152,153,154,155,156,157,
     *158,159,160,150,157,152
     */
      data nzk2/
     *7*0,3,4,6,5,23,14,11,3,5,5,5,23,13,23,23,23,5,23,13,23,23,23,14,
     *23,3,11,13,23,4,10,14,23,14,23,13,7,7,4,7,7,23,14,14,23,14,23,23,
     *14,14,7,23,13,23,14,23,14,23,13,23,13,23,14,23,14,23,13,23,13,23,
     *13,33,32,35,31,23,14,23,14,33,
     *34,35,31,23,14,23,14,33,34,35,31,23,13,23,13,33,32,35,31,13,13,
     *                              23,23,14,13,14,14,25,16,14,23,13,31,
     *14,13,23,25,16,23,35,33,34,32,33,31,31,14,13,23,0,0,0,0,
     *13,23,13,14,23,14,13,23,13,78,23,13,14,23,13,79,78,14,23,14,23,13,
     *80,79,14,14,23,80,31,14,23,13,79,78,31,14,23,13,80,79,23,13,14,23,
     *13,79,78,14,23,14,23,13,80,79,23,13,33,32,15,24,15,31,14,23,34,33,
     *24,24,15,31,14,23,14,13,23,13,14,23,14,80,23,14,13,23,14,79,80,13,
     *23,13,23,14,78,79,13,13,23,78,23,14,13,23,14,79,80,13,23,13,23,14,
     *78,79,62,61,23,14,23,13,13,13,23,13,13,23,14,14,14
     *,1,8,8,1,8,1,8,8,1,8,1,8,1,8,1,1,8,1,8,8,1,1,8,8,1,8,
     *25,23,13,31,23,13,16,14,35,34,34,33,31,14,23,23*0
     *,13,23,14,7,16,19,14,7,23,14,23,14,7,13,23,13,13,23,13,23,14,13,
     *14,23,14,23,13,14,23,14,23,16,14,23,14,23,14,13,13,23,13,23,14,
     *13,23,13,23,15/
      data nzk22/
     *13,13,13,23,13,13,14,14,3*14,23,13,16,25,14,15,24,23,14,7,23,7,
     *13,23,7,14,23,7,23,7, 7,7, 7,7,13,23,31,3,11,14,135,5,
     *3*134,136,6,3*133,4*0,
     *31,95,25,15,31,95,16,32,32,33,35,39,39,38,25,13,39,32,39,38,35,
     *32,39,13,23,14,7,7,25,37,32,13,25,13,25,13,25,13,31,95,24,16,31,24
     *,15,34,34,33,35,37,37,36,24,14,37,34,37,36,35,34,37,14,23,13,7,7,
     *24,39,34,14,24,14,24,14,24,14,9*7,25,13,25,9*7,24,14,24
     */
      data nzk3/
     *7*0,5,6,5,6,23,23,5,5,4*0,14,23,5,5,0,0,14,23,5,5,0,0,5,5,0,0,5,5,
     *7*0,3,0,7,23,23,7,4*0,23,84*0,
     *117*0,23,13,14,23,23,14,23,23,23,14
     *,23,13,23,14,13,23,13,23,14,23,14,14,23,13,13,23,13,14,23,23,14,23
     *,          13,23,14,14,
     * 15*0,23*0,
     *14,23,7,3*0,23,41*0/
      data nzk33/
     *0,23,14,0,13,0,14,0,0,23,13,0,0,15,0,0,16,0,17*0,14,23,3*0,23,
     *2*134,3*0,2*133,7*0,85*0,13,13,25,9*0,14,14,24
     */
      end
