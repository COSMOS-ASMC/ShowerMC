#include "jamdat.f"	program MAIN#include "jamextrn.inc"	call mydummy	call main2	end	subroutine main2#include "jam1.inc"#include "jam2.inc"	character frame*8, proj*8, targ*8, cwin*15        real*8 ucc	call vbook1(1,'dum', 10,0.d0, 1.d0)c	fname(1)='jam.cfg'c             call rndc(u)        fname(1) = '0'        fname(2) = '/dev/null'        fname(3) = '/dev/null'	mevent = 2	bmin = 0.c            for pp collison. bmax is not used.?c            for AA bmax=0 make loop	bmax = -2.3d0	dt = 100.d0	nstep =1	cwin = '100.0gev'	frame = 'lab'c	proj = 'K+'	proj = 'p'        mstc(81)=0  ! neglect hard scattering (for meson)c	targ = '32S'	targ = '14:7'c	targ = 'p'c	targ = 'n'c	targ = 'p'c	targ='197Au   'c	targ = '4:2'c	targ = '2:1'c        bmax=-7.50D0        ! maximum impact parameter (1530mb)Au  	mstc(8) = 0  ! job mode	mstc(156) = 0  ! no call to jamanacl        mstc(161) = 0  ! no output on JAMINFO.DAT, JAMRUN.DAT        mstc(39) = 0   ! no ouptut on JAMMULTI.DAT        write(0,*)' jaminit'     	 call jaminit(mevent, bmin, bmax, dt, nstep, frame, proj, targ,     *  cwin)c	 write(0,*) ' getting cross sec'c	 call getxs        write(0,*)' event geneation'	do iev=1, mevent	   call jamevt(iev)	   write(*,*) ' nv= ',nvc	   do i=1, nv	   do i=1, nv	      if( k(1,i) .le. 11 .or. k(1,i) .ge. 0  ) then		 write(*,*) i,k(2,i), p(1,i), p(2,i), p(3,i),     *             p(4,i), p(5,i)	      endif	   enddoc	   call jamlist(1)	enddoc	call jamfin	end	subroutine getxs      implicit none#include "Zptcl.h"#include "jamextrn.inc"      integer:: msel, icltyp, kf1, kf2, mchanel, mabsrb, ijet, icon      real(8)::srt, pr, em1, em2, sig, sigel, sigin(30)      record /ptcl/tg, pj      real(8):: Eklab, s, prsq      integer code, subc, charge, ia, iz      msel = 1      write(0,*) 'Enter: projectile code, charg '      read(*,*)  code,  charge      subc = -1      call cmkptc(code, subc, charge, pj)      subc = pj.subcode      call ccos2kf(code, subc, charge, kf1)      em1 = pj.mass      if(code == 6) then         icltyp = 1    ! pp pn,      else         icltyp = 2    ! pip, pin, kp, kn      endif      write(0,*) 'Enter: target code, charge (p or n)'      read(*,*)  code,  charge      call cmkptc(code, subc, charge, tg)      subc = tg.subcode      call ccos2kf(code, subc, charge, kf2)      em2 =  tg.mass      ia = 1      iz = tg.chargec      call cjamini(pj, ia, iz)      Eklab=0.5      do while (Eklab < 10000.)          s = em1**2 + em2**2 + 2*em2*(Eklab + em1)         prsq= (s-(em1+em2)**2)*(s-(em1-em2)**2)/(4*s)          pr = sqrt(prsq)         srt = sqrt(s)         call jamcross(msel,icltyp,srt,pr,kf1,kf2,em1,em2,     $       sig,sigel,sigin,mchanel,mabsrb,ijet,icon)         write(*,*) Eklab, sig, sigel, icon         Eklab = Eklab * 10.**0.1      enddo      end